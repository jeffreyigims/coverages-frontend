{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/survey/src/containers/users/UserContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport DetailStructure from \"../../components/DetailStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport { users as formHelpers } from \"../../utils/Schemas\";\nimport { userForm as form } from \"../../utils/Forms\";\nimport { fetchUser, updateUser, deleteUser } from \"../../actions/Actions\";\n\nclass UserContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"user\",\n      id: this.props.match.params.id\n    };\n\n    this.showDetails = object => {\n      let showObjects = objects => {\n        return objects.map((object, index) => {\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            width: \"200\",\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            variant: \"link\",\n            href: \"/clubs/\" + object.data.attributes.id,\n            style: {\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }\n          }, object.data.attributes.name)), /*#__PURE__*/React.createElement(\"td\", {\n            width: \"200\",\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 13\n            }\n          }, object.data.attributes.abbreviation), /*#__PURE__*/React.createElement(\"td\", {\n            width: \"200\",\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }\n          }, object.data.attributes.club_groups_count));\n        });\n      };\n\n      return /*#__PURE__*/React.createElement(GeneralTable, {\n        objects: object.attributes.clubs,\n        showObjects: showObjects,\n        tableHeaders: [\"Name\", \"Code\", \"Groups\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchUser(this.state.id));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DetailStructure, {\n      object: this.props.selected,\n      status: this.props.status,\n      name: this.state.name,\n      formHelpers: formHelpers,\n      form: (values, handleChange, errors) => form(values, handleChange, errors, this.props.sports),\n      showDetails: this.showDetails,\n      updateObject: (id, values) => {\n        this.props.dispatch(updateLeague({\n          id: id,\n          values: values\n        }));\n      },\n      deleteObject: id => {\n        this.props.dispatch(deleteLeague(id));\n      },\n      redirection: {\n        link: this.props.link,\n        redirect: this.props.redirect\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nLeagueContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n  const {\n    selected,\n    status,\n    error\n  } = state.leagues;\n  const {\n    sports\n  } = state.sports;\n  const {\n    link,\n    redirect\n  } = state.redirections;\n  return {\n    selected,\n    status,\n    error,\n    link,\n    redirect,\n    sports\n  };\n}\n\nexport default connect(mapStateToProps)(LeagueContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/survey/src/containers/users/UserContainer.js"],"names":["React","Component","connect","DetailStructure","PropTypes","Button","GeneralTable","users","formHelpers","userForm","form","fetchUser","updateUser","deleteUser","UserContainer","state","name","id","props","match","params","showDetails","object","showObjects","objects","map","index","data","attributes","color","abbreviation","club_groups_count","clubs","componentDidMount","dispatch","render","selected","status","values","handleChange","errors","sports","updateLeague","deleteLeague","link","redirect","LeagueContainer","propTypes","isRequired","string","error","bool","mapStateToProps","leagues","redirections"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport DetailStructure from \"../../components/DetailStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport { users as formHelpers } from \"../../utils/Schemas\";\nimport { userForm as form } from \"../../utils/Forms\";\nimport { fetchUser, updateUser, deleteUser } from \"../../actions/Actions\";\n\nclass UserContainer extends Component {\n  state = {\n    name: \"user\",\n    id: this.props.match.params.id,\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchUser(this.state.id));\n  }\n\n  showDetails = (object) => {\n    let showObjects = (objects) => {\n      return objects.map((object, index) => {\n        return (\n          <tr key={index}>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/clubs/\" + object.data.attributes.id}\n                style={{ color: \"black\" }}\n              >\n                {object.data.attributes.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.data.attributes.abbreviation}\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.data.attributes.club_groups_count}\n            </td>\n          </tr>\n        );\n      });\n    };\n\n    return (\n      <GeneralTable\n        objects={object.attributes.clubs}\n        showObjects={showObjects}\n        tableHeaders={[\"Name\", \"Code\", \"Groups\"]}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <DetailStructure\n          object={this.props.selected}\n          status={this.props.status}\n          name={this.state.name}\n          formHelpers={formHelpers}\n          form={(values, handleChange, errors) =>\n            form(values, handleChange, errors, this.props.sports)\n          }\n          showDetails={this.showDetails}\n          updateObject={(id, values) => {\n            this.props.dispatch(updateLeague({ id: id, values: values }));\n          }}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteLeague(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nLeagueContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, status, error } = state.leagues;\n  const { sports } = state.sports;\n  const { link, redirect } = state.redirections;\n  return { selected, status, error, link, redirect, sports };\n}\n\nexport default connect(mapStateToProps)(LeagueContainer);\n"]},"metadata":{},"sourceType":"module"}