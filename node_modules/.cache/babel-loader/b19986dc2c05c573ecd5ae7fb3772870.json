{"ast":null,"code":"import { runAjax } from \"../utils/APIUtils\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst url = \"http://localhost:3000/sports\";\nexport const fetchSports = createAsyncThunk(\"sports/fetchSports\", async () => {\n  const response = await runAjax(\"/sports.json\", \"GET\", {});\n  return response;\n});\nexport const fetchLeagues = createAsyncThunk(\"leagues/fetchLeagues\", async () => {\n  const response = await runAjax(\"/leagues.json\", \"GET\", {});\n  return response;\n});\nexport const postSport = createAsyncThunk(\"sports/postSport\", async values => {\n  const response = await runAjax(\"sports.json\", \"POST\", {\n    sport: values\n  });\n  return response;\n});\nexport const postLeague = createAsyncThunk(\"leagues/postLeague\", async values => {\n  const response = await runAjax(\"leagues.json\", \"POST\", {\n    league: values\n  });\n  return response;\n});\nexport const fetchSport = createAsyncThunk(\"sports/fetchSport\", async id => {\n  const response = await runAjax(url.concat(\"/\" + id + \".json\"), \"GET\", {});\n  return response;\n});\nexport const updateSport = createAsyncThunk(\"sports/updateSport\", async params => {\n  const response = await runAjax(url.concat(\"/\" + params.id + \".json\"), \"PATCH\", {\n    sport: params.values\n  });\n  return response;\n});\nexport const deleteSport = createAsyncThunk(\"sports/deleteSport\", async id => {\n  const response = await runAjax(url.concat(\"/\" + id + \".json\"), \"DELETE\", {});\n  return id;\n});\nexport const leaguesSlice = createSlice({\n  name: \"leagues\",\n  initialState: {\n    leagues: [],\n    status: \"idle\",\n    error: null,\n    selected: null\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchLeagues.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [fetchLeagues.fulfilled]: (state, action) => {\n      state.leagues = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [fetchLeagues.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [postLeague.fulfilled]: (state, action) => {\n      state.leagues.push(action.payload.data);\n    },\n    [postLeague.rejected]: (state, action) => {}\n  }\n});","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/survey/src/data/leagues.js"],"names":["runAjax","createAsyncThunk","createSlice","url","fetchSports","response","fetchLeagues","postSport","values","sport","postLeague","league","fetchSport","id","concat","updateSport","params","deleteSport","leaguesSlice","name","initialState","leagues","status","error","selected","reducers","extraReducers","pending","state","action","fulfilled","payload","data","rejected","push"],"mappings":"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","sourcesContent":["import { runAjax } from \"../utils/APIUtils\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nconst url = \"http://localhost:3000/sports\";\n\nexport const fetchSports = createAsyncThunk(\"sports/fetchSports\", async () => {\n  const response = await runAjax(\"/sports.json\", \"GET\", {});\n  return response;\n});\n\nexport const fetchLeagues = createAsyncThunk(\n  \"leagues/fetchLeagues\",\n  async () => {\n    const response = await runAjax(\"/leagues.json\", \"GET\", {});\n    return response;\n  }\n);\n\nexport const postSport = createAsyncThunk(\n  \"sports/postSport\",\n  async (values) => {\n    const response = await runAjax(\"sports.json\", \"POST\", {\n      sport: values,\n    });\n    return response;\n  }\n);\n\nexport const postLeague = createAsyncThunk(\n  \"leagues/postLeague\",\n  async (values) => {\n    const response = await runAjax(\"leagues.json\", \"POST\", {\n      league: values,\n    });\n    return response;\n  }\n);\n\nexport const fetchSport = createAsyncThunk(\"sports/fetchSport\", async (id) => {\n  const response = await runAjax(url.concat(\"/\" + id + \".json\"), \"GET\", {});\n  return response;\n});\n\nexport const updateSport = createAsyncThunk(\n  \"sports/updateSport\",\n  async (params) => {\n    const response = await runAjax(\n      url.concat(\"/\" + params.id + \".json\"),\n      \"PATCH\",\n      { sport: params.values }\n    );\n    return response;\n  }\n);\n\nexport const deleteSport = createAsyncThunk(\n  \"sports/deleteSport\",\n  async (id) => {\n    const response = await runAjax(\n      url.concat(\"/\" + id + \".json\"),\n      \"DELETE\",\n      {}\n    );\n    return id;\n  }\n);\n\nexport const leaguesSlice = createSlice({\n    name: \"leagues\",\n    initialState: {\n      leagues: [],\n      status: \"idle\",\n      error: null,\n      selected: null,\n    },\n    reducers: {},\n    extraReducers: {\n      [fetchLeagues.pending]: (state, action) => {\n        state.status = \"loading\";\n      },\n      [fetchLeagues.fulfilled]: (state, action) => {\n        state.leagues = action.payload.data;\n        state.status = \"succeeded\";\n      },\n      [fetchLeagues.rejected]: (state, action) => {\n        state.error = action.error;\n        state.status = \"failed\";\n      },\n      [postLeague.fulfilled]: (state, action) => {\n        state.leagues.push(action.payload.data);\n      },\n      [postLeague.rejected]: (state, action) => {},\n    },\n  });\n  "]},"metadata":{},"sourceType":"module"}