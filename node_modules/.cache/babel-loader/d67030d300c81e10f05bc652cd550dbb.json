{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { dismissAlert, deleteSport, deleteLeague, deleteClub, deleteGroup, deleteCategory, deleteCarrier, deleteCompany, deleteBroker, deleteUser, deleteSubCategory } from \"./actions/Actions\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst fulfilledNew = state => {\n  let alerts = state.alerts.concat({\n    message: \"The object was successfully added to the system.\",\n    variant: \"success\"\n  });\n  return {\n    alerts\n  };\n};\n\nconst fulfilledUpdated = state => {\n  let alerts = state.alerts.concat({\n    message: \"The object was successfully updated in the system.\",\n    variant: \"success\"\n  });\n  return {\n    alerts\n  };\n};\n\nconst fulfilledDeleted = state => {\n  let alerts = state.alerts.concat({\n    message: \"The object was successfully deleted in the system.\",\n    variant: \"success\"\n  });\n  return {\n    alerts\n  };\n};\n\nconst rejected = (state, action) => {\n  let alerts = state.alerts.concat({\n    message: \"The action could not be completed for the following reasons:\",\n    variant: \"danger\",\n    errors: action.payload\n  });\n  return {\n    alerts\n  };\n};\n\nconst rejectedFetch = (state, action) => {\n  let alerts = state.alerts.concat({\n    message: \"The data could not be fetched for the following reasons:\",\n    variant: \"danger\",\n    errors: action.payload\n  });\n  return {\n    alerts\n  };\n};\n\nfunction alerts(state = {\n  alerts: []\n}, action) {\n  if (action.type === \"alerts/dismissAlert\") {\n    return {\n      alerts: []\n    };\n  }\n\n  const status = action.type.split(\"/\").pop();\n  const new_action = action.type.split(\"/\")[1].split(\"_\")[0];\n\n  if (status === \"rejected\" && new_action !== \"fetch\" && new_action !== \"get\") {\n    return rejected(state, action);\n  }\n\n  if (status === \"rejected\") {\n    return rejectedFetch(state, action);\n  }\n\n  if (status === \"pending\") {\n    return state;\n  }\n\n  switch (new_action) {\n    case \"post\":\n      return fulfilledNew(state);\n\n    case \"update\":\n      return fulfilledUpdated(state);\n\n    case \"delete\":\n      return fulfilledDeleted(state);\n\n    default:\n      return state;\n  }\n}\n\nconst redirectionSlice = createSlice({\n  name: \"redirections\",\n  initialState: {\n    link: \"\",\n    redirect: false\n  },\n  reducers: {},\n  extraReducers: {\n    [deleteSport.fulfilled]: (state, action) => {\n      state.link = \"/sports\";\n      state.redirect = true;\n    },\n    [deleteLeague.fulfilled]: (state, action) => {\n      state.link = \"/leagues\";\n      state.redirect = true;\n    },\n    [deleteClub.fulfilled]: (state, action) => {\n      state.link = \"/clubs\";\n      state.redirect = true;\n    },\n    [deleteGroup.fulfilled]: (state, action) => {\n      state.link = \"/groups\";\n      state.redirect = true;\n    },\n    [deleteCategory.fulfilled]: (state, action) => {\n      state.link = \"/categories\";\n      state.redirect = true;\n    },\n    [deleteSubCategory.fulfilled]: (state, action) => {\n      state.link = \"/categories\";\n      state.redirect = true;\n    },\n    [deleteCarrier.fulfilled]: (state, action) => {\n      state.link = \"/carriers\";\n      state.redirect = true;\n    },\n    [deleteCompany.fulfilled]: (state, action) => {\n      state.link = \"/companies\";\n      state.redirect = true;\n    },\n    [deleteBroker.fulfilled]: (state, action) => {\n      // const id = action.payload.data.attributes.company_id;\n      console.log(action.payload.data);\n      state.link = \"/companies/\".concat(id);\n      state.redirect = true;\n    },\n    [deleteUser.fulfilled]: (state, action) => {\n      state.link = \"/users\";\n      state.redirect = true;\n    }\n  }\n});\n\nfunction createTableReducer(name = \"\") {\n  let initialState = {\n    [name]: [],\n    status: \"idle\",\n    errors: null,\n    selected: null\n  };\n  return function reducer(state = initialState, action) {\n    switch (action.type) {\n      case `${name}/fetch_${name}/pending`:\n        return Object.assign({}, state, {\n          status: \"loading\"\n        });\n\n      case `${name}/fetch_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\",\n          errors: action.payload\n        });\n\n      case `${name}/fetch_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          [name]: action.payload.data,\n          status: \"succeeded\"\n        });\n\n      case `${name}/post_${name}/rejected`:\n        return Object.assign({}, state, {\n          [name]: state[name],\n          errors: action.payload\n        });\n\n      case `${name}/post_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          [name]: state[name].concat(action.payload.data),\n          status: \"succeeded\"\n        });\n\n      case `${name}/get_${name}/pending`:\n        return Object.assign({}, state, {\n          status: \"loading\"\n        });\n\n      case `${name}/get_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\"\n        });\n\n      case `${name}/get_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          selected: action.payload.data,\n          status: \"succeeded\"\n        });\n\n      case `${name}/update_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\"\n        });\n\n      case `${name}/update_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          selected: action.payload.data,\n          status: \"succeeded\"\n        });\n\n      case `${name}/delete_${name}/rejected`:\n        return Object.assign({}, state, {\n          selected: state.selected\n        });\n      // case `${name}/delete_${name}/fulfilled`:\n      //   return Object.assign({}, state, {\n      //     status: \"succeeded\",\n      //   });\n\n      default:\n        return state;\n    }\n  };\n}\n\nfunction createPaginatedTableReducer(name = \"\") {\n  let initialState = {\n    [name]: [],\n    status: \"idle\",\n    errors: null,\n    selected: null,\n    page: 1,\n    pages: null\n  };\n  return function reducer(state = initialState, action) {\n    switch (action.type) {\n      case `${name}/fetch_${name}/pending`:\n        return Object.assign({}, state, {\n          status: \"loading\"\n        });\n\n      case `${name}/fetch_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\"\n        });\n\n      case `${name}/fetch_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          [name]: action.payload.objects.data,\n          pages: action.payload.pages,\n          page: action.payload.page,\n          status: \"succeeded\"\n        });\n\n      case `${name}/post_${name}/rejected`:\n        return Object.assign({}, state, {\n          [name]: state[name],\n          error: action.payload\n        });\n\n      case `${name}/post_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          [name]: [action.payload.data].concat(state[name]),\n          status: \"succeeded\"\n        });\n\n      case `${name}/get_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\"\n        });\n\n      case `${name}/get_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          selected: action.payload.data,\n          status: \"succeeded\"\n        });\n\n      case `${name}/update_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\"\n        });\n\n      case `${name}/update_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          selected: action.payload.data,\n          status: \"succeeded\"\n        });\n\n      case `${name}/delete_${name}/rejected`:\n        return Object.assign({}, state, {\n          selected: state.selected\n        });\n      // case `${name}/delete_${name}/fulfilled`:\n      //   return Object.assign({}, state, {\n      //     status: \"succeeded\",\n      //   });\n\n      default:\n        return state;\n    }\n  };\n}\n\nconst reducer = combineReducers({\n  sports: createTableReducer(\"sports\"),\n  leagues: createTableReducer(\"leagues\"),\n  clubs: createTableReducer(\"clubs\"),\n  groups: createTableReducer(\"groups\"),\n  club_groups: createTableReducer(\"club_groups\"),\n  companies: createTableReducer(\"companies\"),\n  brokers: createTableReducer(\"brokers\"),\n  carriers: createTableReducer(\"carriers\"),\n  users: createTableReducer(\"users\"),\n  categories: createTableReducer(\"categories\"),\n  sub_categories: createTableReducer(\"sub_categories\"),\n  coverages: createPaginatedTableReducer(\"coverages\"),\n  alerts: alerts,\n  redirections: redirectionSlice.reducer\n});\nexport default reducer;","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/Reducers.js"],"names":["combineReducers","dismissAlert","deleteSport","deleteLeague","deleteClub","deleteGroup","deleteCategory","deleteCarrier","deleteCompany","deleteBroker","deleteUser","deleteSubCategory","createSlice","fulfilledNew","state","alerts","concat","message","variant","fulfilledUpdated","fulfilledDeleted","rejected","action","errors","payload","rejectedFetch","type","status","split","pop","new_action","redirectionSlice","name","initialState","link","redirect","reducers","extraReducers","fulfilled","console","log","data","id","createTableReducer","selected","reducer","Object","assign","createPaginatedTableReducer","page","pages","objects","error","sports","leagues","clubs","groups","club_groups","companies","brokers","carriers","users","categories","sub_categories","coverages","redirections"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\";\nimport {\n  dismissAlert,\n  deleteSport,\n  deleteLeague,\n  deleteClub,\n  deleteGroup,\n  deleteCategory,\n  deleteCarrier,\n  deleteCompany,\n  deleteBroker,\n  deleteUser,\n  deleteSubCategory,\n} from \"./actions/Actions\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst fulfilledNew = (state) => {\n  let alerts = state.alerts.concat({\n    message: \"The object was successfully added to the system.\",\n    variant: \"success\",\n  });\n  return { alerts };\n};\n\nconst fulfilledUpdated = (state) => {\n  let alerts = state.alerts.concat({\n    message: \"The object was successfully updated in the system.\",\n    variant: \"success\",\n  });\n  return { alerts };\n};\n\nconst fulfilledDeleted = (state) => {\n  let alerts = state.alerts.concat({\n    message: \"The object was successfully deleted in the system.\",\n    variant: \"success\",\n  });\n  return { alerts };\n};\n\nconst rejected = (state, action) => {\n  let alerts = state.alerts.concat({\n    message: \"The action could not be completed for the following reasons:\",\n    variant: \"danger\",\n    errors: action.payload,\n  });\n  return { alerts };\n};\n\nconst rejectedFetch = (state, action) => {\n  let alerts = state.alerts.concat({\n    message: \"The data could not be fetched for the following reasons:\",\n    variant: \"danger\",\n    errors: action.payload,\n  });\n  return { alerts };\n};\n\nfunction alerts(state = { alerts: [] }, action) {\n  if (action.type === \"alerts/dismissAlert\") {\n    return { alerts: [] };\n  }\n  const status = action.type.split(\"/\").pop();\n  const new_action = action.type.split(\"/\")[1].split(\"_\")[0];\n  if (status === \"rejected\" && new_action !== \"fetch\" && new_action !== \"get\") {\n    return rejected(state, action);\n  }\n  if (status === \"rejected\") {\n    return rejectedFetch(state, action);\n  }\n  if (status === \"pending\") {\n    return state;\n  }\n  switch (new_action) {\n    case \"post\":\n      return fulfilledNew(state);\n    case \"update\":\n      return fulfilledUpdated(state);\n    case \"delete\":\n      return fulfilledDeleted(state);\n    default:\n      return state;\n  }\n}\n\nconst redirectionSlice = createSlice({\n  name: \"redirections\",\n  initialState: { link: \"\", redirect: false },\n  reducers: {},\n  extraReducers: {\n    [deleteSport.fulfilled]: (state, action) => {\n      state.link = \"/sports\";\n      state.redirect = true;\n    },\n    [deleteLeague.fulfilled]: (state, action) => {\n      state.link = \"/leagues\";\n      state.redirect = true;\n    },\n    [deleteClub.fulfilled]: (state, action) => {\n      state.link = \"/clubs\";\n      state.redirect = true;\n    },\n    [deleteGroup.fulfilled]: (state, action) => {\n      state.link = \"/groups\";\n      state.redirect = true;\n    },\n    [deleteCategory.fulfilled]: (state, action) => {\n      state.link = \"/categories\";\n      state.redirect = true;\n    },\n    [deleteSubCategory.fulfilled]: (state, action) => {\n      state.link = \"/categories\";\n      state.redirect = true;\n    },\n    [deleteCarrier.fulfilled]: (state, action) => {\n      state.link = \"/carriers\";\n      state.redirect = true;\n    },\n    [deleteCompany.fulfilled]: (state, action) => {\n      state.link = \"/companies\";\n      state.redirect = true;\n    },\n    [deleteBroker.fulfilled]: (state, action) => {\n      // const id = action.payload.data.attributes.company_id;\n      console.log(action.payload.data)\n      state.link = \"/companies/\".concat(id);\n      state.redirect = true;\n    },\n    [deleteUser.fulfilled]: (state, action) => {\n      state.link = \"/users\";\n      state.redirect = true;\n    },\n  },\n});\n\nfunction createTableReducer(name = \"\") {\n  let initialState = {\n    [name]: [],\n    status: \"idle\",\n    errors: null,\n    selected: null,\n  };\n  return function reducer(state = initialState, action) {\n    switch (action.type) {\n      case `${name}/fetch_${name}/pending`:\n        return Object.assign({}, state, {\n          status: \"loading\",\n        });\n      case `${name}/fetch_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\",\n          errors: action.payload,\n        });\n      case `${name}/fetch_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          [name]: action.payload.data,\n          status: \"succeeded\",\n        });\n      case `${name}/post_${name}/rejected`:\n        return Object.assign({}, state, {\n          [name]: state[name],\n          errors: action.payload,\n        });\n      case `${name}/post_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          [name]: state[name].concat(action.payload.data),\n          status: \"succeeded\",\n        });\n      case `${name}/get_${name}/pending`:\n        return Object.assign({}, state, {\n          status: \"loading\",\n        });\n      case `${name}/get_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\",\n        });\n      case `${name}/get_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          selected: action.payload.data,\n          status: \"succeeded\",\n        });\n      case `${name}/update_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\",\n        });\n      case `${name}/update_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          selected: action.payload.data,\n          status: \"succeeded\",\n        });\n      case `${name}/delete_${name}/rejected`:\n        return Object.assign({}, state, {\n          selected: state.selected,\n        });\n      // case `${name}/delete_${name}/fulfilled`:\n      //   return Object.assign({}, state, {\n      //     status: \"succeeded\",\n      //   });\n      default:\n        return state;\n    }\n  };\n}\n\nfunction createPaginatedTableReducer(name = \"\") {\n  let initialState = {\n    [name]: [],\n    status: \"idle\",\n    errors: null,\n    selected: null,\n    page: 1,\n    pages: null,\n  };\n  return function reducer(state = initialState, action) {\n    switch (action.type) {\n      case `${name}/fetch_${name}/pending`:\n        return Object.assign({}, state, {\n          status: \"loading\",\n        });\n      case `${name}/fetch_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\",\n        });\n      case `${name}/fetch_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          [name]: action.payload.objects.data,\n          pages: action.payload.pages,\n          page: action.payload.page,\n          status: \"succeeded\",\n        });\n      case `${name}/post_${name}/rejected`:\n        return Object.assign({}, state, {\n          [name]: state[name],\n          error: action.payload,\n        });\n      case `${name}/post_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          [name]: [action.payload.data].concat(state[name]),\n          status: \"succeeded\",\n        });\n      case `${name}/get_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\",\n        });\n      case `${name}/get_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          selected: action.payload.data,\n          status: \"succeeded\",\n        });\n      case `${name}/update_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\",\n        });\n      case `${name}/update_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          selected: action.payload.data,\n          status: \"succeeded\",\n        });\n      case `${name}/delete_${name}/rejected`:\n        return Object.assign({}, state, {\n          selected: state.selected,\n        });\n      // case `${name}/delete_${name}/fulfilled`:\n      //   return Object.assign({}, state, {\n      //     status: \"succeeded\",\n      //   });\n      default:\n        return state;\n    }\n  };\n}\n\nconst reducer = combineReducers({\n  sports: createTableReducer(\"sports\"),\n  leagues: createTableReducer(\"leagues\"),\n  clubs: createTableReducer(\"clubs\"),\n  groups: createTableReducer(\"groups\"),\n  club_groups: createTableReducer(\"club_groups\"),\n  companies: createTableReducer(\"companies\"),\n  brokers: createTableReducer(\"brokers\"),\n  carriers: createTableReducer(\"carriers\"),\n  users: createTableReducer(\"users\"),\n  categories: createTableReducer(\"categories\"),\n  sub_categories: createTableReducer(\"sub_categories\"),\n  coverages: createPaginatedTableReducer(\"coverages\"),\n  alerts: alerts,\n  redirections: redirectionSlice.reducer,\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}