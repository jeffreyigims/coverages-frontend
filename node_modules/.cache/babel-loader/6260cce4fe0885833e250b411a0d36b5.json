{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport ActionTypes from \"./constants/ActionTypes\";\nimport { fetchSports } from \"./actions/Actions\";\nimport { createSlice } from \"@reduxjs/toolkit\"; // function sports(\n//   state = {\n//     sports: [],\n//   },\n//   action\n// ) {\n//   switch (action.type) {\n//     case ActionTypes.REQUEST_SPORTS:\n//       return Object.assign({}, state, {});\n//     case ActionTypes.RECEIVE_SPORTS:\n//       return Object.assign({}, state, {\n//         sports: action.sports,\n//       });\n//     case ActionTypes.POST_SPORT:\n//       console.log(action.sport)\n//       return Object.assign({}, state, {\n//         sports: state.sports.concat(action.sport),\n//       });\n//     case [fetchSports.pending]:\n//       console.log(\"Pending\");\n//     default:\n//       return state;\n//   }\n// }\n\nconst initialState = {\n  sports: []\n};\nconst sportsSlice = createSlice({\n  name: \"sports\",\n  initialState,\n  reducers: {\n    [fetchSports.pending](state, action) {\n      console.log(\"JJ\");\n    }\n\n  },\n  extraReducers: {\n    [fetchSports.rejected]: (state, action) => {\n      console.log(\"Pending\");\n    },\n    [fetchSports.fulfilled]: (state, action) => {\n      console.log(\"DONEEEEEEE\");\n    }\n  }\n}); // const reducer = combineReducers({ sportsSlice.reducer });\n\nexport default sportsSlice.reducer;","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/survey/src/reducers.js"],"names":["combineReducers","ActionTypes","fetchSports","createSlice","initialState","sports","sportsSlice","name","reducers","pending","state","action","console","log","extraReducers","rejected","fulfilled","reducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAArB;AACA,MAAMC,WAAW,GAAGH,WAAW,CAAC;AAC9BI,EAAAA,IAAI,EAAE,QADwB;AAE9BH,EAAAA,YAF8B;AAG9BI,EAAAA,QAAQ,EAAE;AACR,KAACN,WAAW,CAACO,OAAb,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAuC;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD;;AAHO,GAHoB;AAQ9BC,EAAAA,aAAa,EAAE;AACb,KAACZ,WAAW,CAACa,QAAb,GAAwB,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAHY;AAIb,KAACX,WAAW,CAACc,SAAb,GAAyB,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AANY;AARe,CAAD,CAA/B,C,CAkBA;;AAEA,eAAeP,WAAW,CAACW,OAA3B","sourcesContent":["import { combineReducers } from \"redux\";\nimport ActionTypes from \"./constants/ActionTypes\";\nimport { fetchSports } from \"./actions/Actions\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\n// function sports(\n//   state = {\n//     sports: [],\n//   },\n//   action\n// ) {\n//   switch (action.type) {\n\n//     case ActionTypes.REQUEST_SPORTS:\n//       return Object.assign({}, state, {});\n//     case ActionTypes.RECEIVE_SPORTS:\n//       return Object.assign({}, state, {\n//         sports: action.sports,\n//       });\n//     case ActionTypes.POST_SPORT:\n//       console.log(action.sport)\n//       return Object.assign({}, state, {\n//         sports: state.sports.concat(action.sport),\n//       });\n//     case [fetchSports.pending]:\n//       console.log(\"Pending\");\n//     default:\n//       return state;\n//   }\n// }\nconst initialState = { sports: [] };\nconst sportsSlice = createSlice({\n  name: \"sports\",\n  initialState,\n  reducers: {\n    [fetchSports.pending] (state, action)  {\n      console.log(\"JJ\");\n    },\n  },\n  extraReducers: {\n    [fetchSports.rejected]: (state, action) => {\n      console.log(\"Pending\");\n    },\n    [fetchSports.fulfilled]: (state, action) => {\n      console.log(\"DONEEEEEEE\");\n    },\n  },\n});\n\n// const reducer = combineReducers({ sportsSlice.reducer });\n\nexport default sportsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}