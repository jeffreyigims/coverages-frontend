{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/Coverages/Front/src/containers/coverage_wizard/CoverageWizardContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Col, Row, Card, Spinner } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport { objectOptionsID, objectOptions, objectDataOptions, objectGroupOptions } from \"../../utils/Forms\";\nimport { coverage_wizard as formHelpers } from \"../../utils/Schemas\"; // import { clubForm as form } from \"../../utils/Forms\";\n\nimport { fetchSports, fetchLeagues, fetchClubs, fetchCategories, fetchCarriers, fetchBrokers } from \"../../actions/Actions\";\n\nclass CoverageWizardContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {// tableHeaders: [\"Name\", \"Code\", \"League\", \"Groups\"],\n      // name: \"club\",\n      // plural: \"clubs\",\n    };\n\n    this.status = statuses => {\n      const status = \"succeeded\";\n\n      for (var key in statuses) {\n        if (statuses[key] === \"failed\") {\n          return \"failed\";\n        } else if (statuses[key] === \"loading\") {\n          return \"loading\";\n        } else if (statuses[key] === \"idle\") {\n          return \"idle\";\n        }\n      }\n\n      return status;\n    };\n\n    this.clubOptions = league => {\n      const league_id = league === null || league === void 0 ? void 0 : league.data.attributes.id;\n      let clubs = this.props.clubs.filter(club => club.attributes.league_id === league_id);\n      return objectOptions(clubs);\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchSports()); // this.props.dispatch(fetchLeagues());\n\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchCategories());\n    this.props.dispatch(fetchCarriers());\n    this.props.dispatch(fetchBrokers());\n  }\n\n  render() {\n    const status = this.status(this.props.status);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Add Coverages\"), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"row justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, status === \"loading\" && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    })), status === \"succeeded\" && /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: formHelpers.schema,\n      onSubmit: console.log(\"Submit\"),\n      initialValues: formHelpers.initialValues,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      setFieldValue,\n      values,\n      dirty\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, \"Sport:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"sport_index\",\n      value: values.sport_index,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, objectOptions(this.props.sports)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \"League:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"league_index\",\n      value: values.league_index,\n      onChange: e => {\n        handleChange(e);\n        setFieldValue(\"club_index\", 0);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, objectDataOptions(this.props.sports[values.sport_index].attributes.leagues)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, \"Club:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"club_index\",\n      value: values.club_index,\n      onChange: e => {\n        handleChange(e);\n        setFieldValue(\"group_index\", 0);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, this.clubOptions(this.props.sports[values.sport_index].attributes.leagues[values.league_index]))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, \"Group:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"group_index\",\n      value: values.group_index,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, objectGroupOptions(this.props.clubs[values.club_index].attributes.club_groups)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, \"Category:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"category_index\",\n      value: values.category_index,\n      onChange: e => {\n        handleChange(e);\n        setFieldValue(\"sub_category_index\", 0);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, objectOptions(this.props.categories))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, \"Sub Category:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"sub_category_index\",\n      value: values.sub_category_index,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, objectDataOptions(this.props.categories[values.category_index].attributes.sub_categories)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, \"Carriers:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      name: \"carriers\",\n      value: values.carriers,\n      onChange: event => setFieldValue(\"carriers\", Array.from(event.target.selectedOptions, option => Number(option.value))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }, objectOptionsID(this.props.carriers))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, \"Brokers:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      name: \"brokers\",\n      value: values.brokers,\n      onChange: event => setFieldValue(\"brokers\", Array.from(event.target.selectedOptions, option => Number(option.value))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }, objectOptionsID(this.props.brokers)))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 23\n      }\n    }, \"Notes:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"notes\",\n      value: values.notes,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }\n    }, \"Start Date:\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }, \"Ending Date:\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      name: \"has_coverage_line\",\n      label: \"Has Coverage Line\",\n      checked: values.has_coverage_line,\n      value: values.has_coverage_line,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      name: \"verified\",\n      label: \"Verified\",\n      checked: values.verified,\n      value: values.verified,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-theme float-right\",\n      variant: \"primary\",\n      style: {\n        marginRight: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, \"Add Coverage\")))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }\n    }, \"Prepared Coverages\"), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nCoverageWizardContainer.propTypes = {};\n\nfunction mapStateToProps(state) {\n  const {\n    sports\n  } = state.sports;\n  const sportsStatus = state.sports.status;\n  const {\n    clubs\n  } = state.clubs;\n  const clubsStatus = state.clubs.status;\n  const {\n    categories\n  } = state.categories;\n  const categoriesStatus = state.categories.status;\n  const {\n    carriers\n  } = state.carriers;\n  const carriersStatus = state.carriers.status;\n  const {\n    brokers\n  } = state.brokers;\n  const brokersStatus = state.brokers.status;\n  return {\n    status: {\n      sportsStatus,\n      clubsStatus,\n      categoriesStatus,\n      carriersStatus,\n      brokersStatus\n    },\n    sports,\n    clubs,\n    categories,\n    carriers,\n    brokers\n  };\n}\n\nexport default connect(mapStateToProps)(CoverageWizardContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/containers/coverage_wizard/CoverageWizardContainer.js"],"names":["React","Component","connect","ListStructure","PropTypes","Button","Form","Col","Row","Card","Spinner","Formik","objectOptionsID","objectOptions","objectDataOptions","objectGroupOptions","coverage_wizard","formHelpers","fetchSports","fetchLeagues","fetchClubs","fetchCategories","fetchCarriers","fetchBrokers","CoverageWizardContainer","state","status","statuses","key","clubOptions","league","league_id","data","attributes","id","clubs","props","filter","club","componentDidMount","dispatch","render","marginTop","schema","console","log","initialValues","handleSubmit","handleChange","setFieldValue","values","dirty","sport_index","sports","league_index","e","leagues","club_index","group_index","club_groups","category_index","categories","sub_category_index","sub_categories","carriers","event","Array","from","target","selectedOptions","option","Number","value","brokers","notes","has_coverage_line","verified","marginRight","propTypes","mapStateToProps","sportsStatus","clubsStatus","categoriesStatus","carriersStatus","brokersStatus"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Col, Row, Card, Spinner } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport {\n  objectOptionsID,\n  objectOptions,\n  objectDataOptions,\n  objectGroupOptions,\n} from \"../../utils/Forms\";\nimport { coverage_wizard as formHelpers } from \"../../utils/Schemas\";\n// import { clubForm as form } from \"../../utils/Forms\";\nimport {\n  fetchSports,\n  fetchLeagues,\n  fetchClubs,\n  fetchCategories,\n  fetchCarriers,\n  fetchBrokers,\n} from \"../../actions/Actions\";\n\nclass CoverageWizardContainer extends Component {\n  state = {\n    // tableHeaders: [\"Name\", \"Code\", \"League\", \"Groups\"],\n    // name: \"club\",\n    // plural: \"clubs\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchSports());\n    // this.props.dispatch(fetchLeagues());\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchCategories());\n    this.props.dispatch(fetchCarriers());\n    this.props.dispatch(fetchBrokers());\n  }\n\n  status = (statuses) => {\n    const status = \"succeeded\";\n    for (var key in statuses) {\n      if (statuses[key] === \"failed\") {\n        return \"failed\";\n      } else if (statuses[key] === \"loading\") {\n        return \"loading\";\n      } else if (statuses[key] === \"idle\") {\n        return \"idle\";\n      }\n    }\n    return status;\n  };\n\n  clubOptions = (league) => {\n    const league_id = league?.data.attributes.id;\n    let clubs = this.props.clubs.filter(\n      (club) => club.attributes.league_id === league_id\n    );\n    return objectOptions(clubs);\n  };\n\n  render() {\n    const status = this.status(this.props.status);\n    return (\n      <>\n        <Card>\n          <Card.Header></Card.Header>\n          <Card.Title style={{ marginTop: \"10px\" }}>Add Coverages</Card.Title>\n          <Card.Body>\n            <Row className=\"row justify-content-center\">\n              {status === \"loading\" && (\n                <Spinner animation=\"border\" variant=\"primary\" />\n              )}\n            </Row>\n            {status === \"succeeded\" && (\n              <Formik\n                validationSchema={formHelpers.schema}\n                onSubmit={console.log(\"Submit\")}\n                initialValues={formHelpers.initialValues}\n              >\n                {({\n                  handleSubmit,\n                  handleChange,\n                  setFieldValue,\n                  values,\n                  dirty,\n                }) => (\n                  <Form noValidate onSubmit={handleSubmit}>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Sport:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"sport_index\"\n                          value={values.sport_index}\n                          onChange={handleChange}\n                        >\n                          {objectOptions(this.props.sports)}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>League:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"league_index\"\n                          value={values.league_index}\n                          onChange={(e) => {\n                            handleChange(e);\n                            setFieldValue(\"club_index\", 0);\n                          }}\n                        >\n                          {objectDataOptions(\n                            this.props.sports[values.sport_index].attributes\n                              .leagues\n                          )}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Club:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"club_index\"\n                          value={values.club_index}\n                          onChange={(e) => {\n                            handleChange(e);\n                            setFieldValue(\"group_index\", 0);\n                          }}\n                        >\n                          {this.clubOptions(\n                            this.props.sports[values.sport_index].attributes\n                              .leagues[values.league_index]\n                          )}\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Group:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"group_index\"\n                          value={values.group_index}\n                          onChange={handleChange}\n                        >\n                          {objectGroupOptions(\n                            this.props.clubs[values.club_index].attributes\n                              .club_groups\n                          )}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Category:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"category_index\"\n                          value={values.category_index}\n                          onChange={(e) => {\n                            handleChange(e);\n                            setFieldValue(\"sub_category_index\", 0);\n                          }}\n                        >\n                          {objectOptions(this.props.categories)}\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Sub Category:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"sub_category_index\"\n                          value={values.sub_category_index}\n                          onChange={handleChange}\n                        >\n                          {objectDataOptions(\n                            this.props.categories[values.category_index]\n                              .attributes.sub_categories\n                          )}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Carriers:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          multiple\n                          name=\"carriers\"\n                          value={values.carriers}\n                          onChange={(event) =>\n                            setFieldValue(\n                              \"carriers\",\n                              Array.from(\n                                event.target.selectedOptions,\n                                (option) => Number(option.value)\n                              )\n                            )\n                          }\n                        >\n                          {objectOptionsID(this.props.carriers)}\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Brokers:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          multiple\n                          name=\"brokers\"\n                          value={values.brokers}\n                          onChange={(event) =>\n                            setFieldValue(\n                              \"brokers\",\n                              Array.from(\n                                event.target.selectedOptions,\n                                (option) => Number(option.value)\n                              )\n                            )\n                          }\n                        >\n                          {objectOptionsID(this.props.brokers)}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Form.Group>\n                      <Form.Label>Notes:</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"notes\"\n                        value={values.notes}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>{\"Start Date:\"}</Form.Label>\n                        {/* <DatePicker\n                        name=\"start_date\"\n                        selected={values.start_date}\n                        onChange={(val) => setFieldValue(\"start_date\", val)}\n                      /> */}\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>{\"Ending Date:\"}</Form.Label>\n                        {/* <DatePicker\n                        name=\"end_date\"\n                        selected={values.end_date}\n                        onChange={(val) => setFieldValue(\"end_date\", val)}\n                      /> */}\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Check\n                          type=\"checkbox\"\n                          name=\"has_coverage_line\"\n                          label={\"Has Coverage Line\"}\n                          checked={values.has_coverage_line}\n                          value={values.has_coverage_line}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Check\n                          type=\"checkbox\"\n                          name=\"verified\"\n                          label={\"Verified\"}\n                          checked={values.verified}\n                          value={values.verified}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n                    </Row>\n                    <Button\n                      type=\"submit\"\n                      className=\"btn btn-theme float-right\"\n                      variant=\"primary\"\n                      style={{ marginRight: \"10px\" }}\n                    >\n                      Add Coverage\n                    </Button>\n                  </Form>\n                )}\n              </Formik>\n            )}\n          </Card.Body>\n          <Card.Footer></Card.Footer>\n        </Card>\n        <Card>\n          <Card.Header></Card.Header>\n          <Card.Title style={{ marginTop: \"10px\" }}>\n            Prepared Coverages\n          </Card.Title>\n          <Card.Body></Card.Body>\n          <Card.Footer></Card.Footer>\n        </Card>\n      </>\n    );\n  }\n}\n\nCoverageWizardContainer.propTypes = {};\n\nfunction mapStateToProps(state) {\n  const { sports } = state.sports;\n  const sportsStatus = state.sports.status;\n  const { clubs } = state.clubs;\n  const clubsStatus = state.clubs.status;\n  const { categories } = state.categories;\n  const categoriesStatus = state.categories.status;\n  const { carriers } = state.carriers;\n  const carriersStatus = state.carriers.status;\n  const { brokers } = state.brokers;\n  const brokersStatus = state.brokers.status;\n  return {\n    status: {\n      sportsStatus,\n      clubsStatus,\n      categoriesStatus,\n      carriersStatus,\n      brokersStatus,\n    },\n    sports,\n    clubs,\n    categories,\n    carriers,\n    brokers,\n  };\n}\n\nexport default connect(mapStateToProps)(CoverageWizardContainer);\n"]},"metadata":{},"sourceType":"module"}