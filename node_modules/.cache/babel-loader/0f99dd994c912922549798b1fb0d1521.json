{"ast":null,"code":"import { runAjax } from \"../utils/APIUtils\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst link = \"/sports\";\nexport const fetchSports = createAsyncThunk(\"sports/fetchSports\", async () => {\n  const response = await runAjax(link.concat(\".json\"), \"GET\", {});\n  return response;\n});\nexport const postSport = createAsyncThunk(\"sports/postSport\", async values => {\n  const response = await runAjax(link.concat(\".json\"), \"POST\", {\n    sport: values\n  });\n  return response;\n});\nexport const fetchSport = createAsyncThunk(\"sports/fetchSport\", async id => {\n  const response = await runAjax(link.concat(\"/\" + id + \".json\"), \"GET\", {});\n  return response;\n});\nexport const updateSport = createAsyncThunk(\"sports/updateSport\", async params => {\n  const response = await runAjax(link.concat(\"/\" + params.id + \".json\"), \"PATCH\", {\n    sport: params.values\n  });\n  return response;\n});\nexport const deleteSport = createAsyncThunk(\"sports/deleteSport\", async id => {\n  await runAjax(link.concat(\"/\" + id + \".json\"), \"DELETE\", {});\n  return id;\n});\nexport const sportsSlice = createSlice({\n  name: \"sports\",\n  initialState: {\n    sports: [],\n    status: \"idle\",\n    error: null,\n    selected: null\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchSports.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [fetchSports.fulfilled]: (state, action) => {\n      state.sports = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [fetchSports.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [postSport.fulfilled]: (state, action) => {\n      state.sports.push(action.payload.data);\n    },\n    [postSport.rejected]: (state, action) => {},\n    [fetchSport.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [fetchSport.fulfilled]: (state, action) => {\n      state.selected = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [fetchSport.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [updateSport.fulfilled]: (state, action) => {\n      state.selected = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [updateSport.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [deleteSport.fulfilled]: (state, action) => {\n      state.status = \"succeeded\";\n    }\n  }\n});","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/survey/src/data/sports.js"],"names":["runAjax","createAsyncThunk","createSlice","link","fetchSports","response","concat","postSport","values","sport","fetchSport","id","updateSport","params","deleteSport","sportsSlice","name","initialState","sports","status","error","selected","reducers","extraReducers","pending","state","action","fulfilled","payload","data","rejected","push"],"mappings":"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","sourcesContent":["import { runAjax } from \"../utils/APIUtils\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nconst link = \"/sports\";\n\nexport const fetchSports = createAsyncThunk(\"sports/fetchSports\", async () => {\n  const response = await runAjax(link.concat(\".json\"), \"GET\", {});\n  return response;\n});\n\nexport const postSport = createAsyncThunk(\n  \"sports/postSport\",\n  async (values) => {\n    const response = await runAjax(link.concat(\".json\"), \"POST\", {\n      sport: values,\n    });\n    return response;\n  }\n);\n\nexport const fetchSport = createAsyncThunk(\"sports/fetchSport\", async (id) => {\n  const response = await runAjax(link.concat(\"/\" + id + \".json\"), \"GET\", {});\n  return response;\n});\n\nexport const updateSport = createAsyncThunk(\n  \"sports/updateSport\",\n  async (params) => {\n    const response = await runAjax(\n      link.concat(\"/\" + params.id + \".json\"),\n      \"PATCH\",\n      { sport: params.values }\n    );\n    return response;\n  }\n);\n\nexport const deleteSport = createAsyncThunk(\n  \"sports/deleteSport\",\n  async (id) => {\n    await runAjax(link.concat(\"/\" + id + \".json\"), \"DELETE\", {});\n    return id;\n  }\n);\n\nexport const sportsSlice = createSlice({\n  name: \"sports\",\n  initialState: {\n    sports: [],\n    status: \"idle\",\n    error: null,\n    selected: null,\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchSports.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [fetchSports.fulfilled]: (state, action) => {\n      state.sports = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [fetchSports.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [postSport.fulfilled]: (state, action) => {\n      state.sports.push(action.payload.data);\n    },\n    [postSport.rejected]: (state, action) => {},\n    [fetchSport.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [fetchSport.fulfilled]: (state, action) => {\n      state.selected = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [fetchSport.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [updateSport.fulfilled]: (state, action) => {\n      state.selected = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [updateSport.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [deleteSport.fulfilled]: (state, action) => {\n      state.status = \"succeeded\";\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}