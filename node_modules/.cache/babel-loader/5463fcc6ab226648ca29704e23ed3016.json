{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/Coverages/Front/src/containers/categories/CategoryContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CategoryDetails from \"./CategoryDetails\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport { categories as formHelpers } from \"../../utils/Schemas\";\nimport { categoryForm as form } from \"../../utils/Forms\";\nimport { fetchCategory, updateCategory, deleteCategory } from \"../../actions/Actions\";\n\nclass CategoryContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"category\"\n    };\n\n    this.showDetails = object => {\n      let showObjects = objects => {\n        return objects.map((object, index) => {\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            width: \"200\",\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            variant: \"link\",\n            href: \"/sub_categories/\" + object.data.attributes.id,\n            style: {\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }\n          }, object.data.attributes.name)), /*#__PURE__*/React.createElement(\"td\", {\n            width: \"200\",\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }\n          }, object.data.attributes.associated_coverages));\n        });\n      };\n\n      return /*#__PURE__*/React.createElement(GeneralTable, {\n        objects: object.attributes.sub_categories,\n        showObjects: showObjects,\n        tableHeaders: [\"Name\", \"Coverages\"],\n        status: this.props.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.dispatch(fetchCategory(id));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CategoryDetails, {\n      object: this.props.selected,\n      status: this.props.status,\n      name: this.state.name,\n      formHelpers: formHelpers,\n      form: form,\n      showDetails: this.showDetails,\n      updateObject: (id, values) => {\n        this.props.dispatch(updateCategory({\n          id: id,\n          values: values\n        }));\n      },\n      deleteObject: id => {\n        this.props.dispatch(deleteCategory(id));\n      },\n      redirection: {\n        link: this.props.link,\n        redirect: this.props.redirect\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nCategoryContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n  const {\n    selected,\n    status,\n    error\n  } = state.categories;\n  const {\n    link,\n    redirect\n  } = state.redirections;\n  return {\n    selected,\n    status,\n    error,\n    link,\n    redirect\n  };\n}\n\nexport default connect(mapStateToProps)(CategoryContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/containers/categories/CategoryContainer.js"],"names":["React","Component","connect","CategoryDetails","PropTypes","Button","GeneralTable","categories","formHelpers","categoryForm","form","fetchCategory","updateCategory","deleteCategory","CategoryContainer","state","name","showDetails","object","showObjects","objects","map","index","data","attributes","id","color","associated_coverages","sub_categories","props","status","componentDidMount","match","params","dispatch","render","selected","values","link","redirect","propTypes","isRequired","string","error","bool","mapStateToProps","redirections"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CategoryDetails from \"./CategoryDetails\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport { categories as formHelpers } from \"../../utils/Schemas\";\nimport { categoryForm as form } from \"../../utils/Forms\";\nimport {\n  fetchCategory,\n  updateCategory,\n  deleteCategory,\n} from \"../../actions/Actions\";\n\nclass CategoryContainer extends Component {\n  state = {\n    name: \"category\",\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.dispatch(fetchCategory(id));\n  }\n\n  showDetails = (object) => {\n    let showObjects = (objects) => {\n      return objects.map((object, index) => {\n        return (\n          <tr key={index}>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/sub_categories/\" + object.data.attributes.id}\n                style={{ color: \"black\" }}\n              >\n                {object.data.attributes.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.data.attributes.associated_coverages}\n            </td>\n          </tr>\n        );\n      });\n    };\n\n    return (\n      <GeneralTable\n        objects={object.attributes.sub_categories}\n        showObjects={showObjects}\n        tableHeaders={[\"Name\", \"Coverages\"]}\n        status={this.props.status}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <CategoryDetails\n          object={this.props.selected}\n          status={this.props.status}\n          name={this.state.name}\n          formHelpers={formHelpers}\n          form={form}\n          showDetails={this.showDetails}\n          updateObject={(id, values) => {\n            this.props.dispatch(updateCategory({ id: id, values: values }));\n          }}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteCategory(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nCategoryContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, status, error } = state.categories;\n  const { link, redirect } = state.redirections;\n  return { selected, status, error, link, redirect };\n}\n\nexport default connect(mapStateToProps)(CategoryContainer);\n"]},"metadata":{},"sourceType":"module"}