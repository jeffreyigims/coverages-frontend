{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/Coverages/Front/src/containers/coverage_wizard/CoverageWizardContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Col, Row, Card, Spinner } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport { objectOptionsID, objectOptions, objectDataOptions } from \"../../utils/Forms\";\nimport { coverage_wizard as formHelpers } from \"../../utils/Schemas\"; // import { clubForm as form } from \"../../utils/Forms\";\n\nimport { fetchSports, fetchLeagues, fetchClubs, fetchCategories, fetchCarriers, fetchBrokers } from \"../../actions/Actions\";\n\nclass CoverageWizardContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {// tableHeaders: [\"Name\", \"Code\", \"League\", \"Groups\"],\n      // name: \"club\",\n      // plural: \"clubs\",\n    };\n\n    this.status = statuses => {\n      const status = \"succeeded\";\n\n      for (var key in statuses) {\n        if (statuses[key] === \"failed\") {\n          return \"failed\";\n        } else if (statuses[key] === \"loading\") {\n          return \"loading\";\n        } else if (statuses[key] === \"idle\") {\n          return \"idle\";\n        }\n      }\n\n      return status;\n    };\n\n    this.clubOptions = league_id => {\n      let clubs = this.props.clubs.filter(club => club.attributes.league_id === league_id);\n      return objectOptions(clubs);\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchSports()); // this.props.dispatch(fetchLeagues());\n\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchCategories());\n    this.props.dispatch(fetchCarriers());\n    this.props.dispatch(fetchBrokers());\n  }\n\n  render() {\n    const status = this.status(this.props.status);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Add Coverages\"), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"row justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, status === \"loading\" && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    })), status === \"succeeded\" && /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: formHelpers.schema,\n      onSubmit: console.log(\"Submit\"),\n      initialValues: formHelpers.initialValues,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      setFieldValue,\n      values,\n      dirty\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, \"Sport:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"sport_index\",\n      value: values.sport_index,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, objectOptions(this.props.sports)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, \"League:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"league_index\",\n      value: values.league_index,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, objectDataOptions(this.props.sports[values.sport_index].attributes.leagues)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, \"Club:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"club_index\",\n      value: values.club_index,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, this.clubOptions(this.props.sports[values.sport_index].attributes.leagues[values.league_index].attributes.id))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, \"Group:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"group_index\",\n      value: values.group_index,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, \"Category:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"category_index\",\n      value: values.category_index,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, \"Sub Category:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"sub_category_index\",\n      value: values.sub_category_index,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, \"Carriers:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      name: \"carriers\",\n      value: values.carriers,\n      onChange: event => setFieldValue(\"carriers\", Array.from(event.target.selectedOptions, option => Number(option.value))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, objectOptionsID(this.props.carriers))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }, \"Brokers:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      name: \"brokers\",\n      value: values.brokers,\n      onChange: event => setFieldValue(\"brokers\", Array.from(event.target.selectedOptions, option => Number(option.value))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, objectOptionsID(this.props.brokers)))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 23\n      }\n    }, \"Notes:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"notes\",\n      value: values.notes,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, \"Start Date:\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 25\n      }\n    }, \"Ending Date:\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      name: \"has_coverage_line\",\n      label: \"Has Coverage Line\",\n      checked: values.has_coverage_line,\n      value: values.has_coverage_line,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      name: \"verified\",\n      label: \"Verified\",\n      checked: values.verified,\n      value: values.verified,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 25\n      }\n    }))), dirty == true ? /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-theme float-right\",\n      variant: \"primary\",\n      style: {\n        marginRight: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 23\n      }\n    }, \"Update Coverage\") : \"\"))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nCoverageWizardContainer.propTypes = {};\n\nfunction mapStateToProps(state) {\n  const {\n    sports\n  } = state.sports;\n  const sportsStatus = state.sports.status;\n  const {\n    clubs\n  } = state.clubs;\n  const clubsStatus = state.clubs.status;\n  const {\n    categories\n  } = state.categories;\n  const categoriesStatus = state.categories.status;\n  const {\n    carriers\n  } = state.carriers;\n  const carriersStatus = state.carriers.status;\n  const {\n    brokers\n  } = state.brokers;\n  const brokersStatus = state.brokers.status;\n  return {\n    status: {\n      sportsStatus,\n      clubsStatus,\n      categoriesStatus,\n      carriersStatus,\n      brokersStatus\n    },\n    sports,\n    clubs,\n    categories,\n    carriers,\n    brokers\n  };\n}\n\nexport default connect(mapStateToProps)(CoverageWizardContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/containers/coverage_wizard/CoverageWizardContainer.js"],"names":["React","Component","connect","ListStructure","PropTypes","Button","Form","Col","Row","Card","Spinner","Formik","objectOptionsID","objectOptions","objectDataOptions","coverage_wizard","formHelpers","fetchSports","fetchLeagues","fetchClubs","fetchCategories","fetchCarriers","fetchBrokers","CoverageWizardContainer","state","status","statuses","key","clubOptions","league_id","clubs","props","filter","club","attributes","componentDidMount","dispatch","render","marginTop","schema","console","log","initialValues","handleSubmit","handleChange","setFieldValue","values","dirty","sport_index","sports","league_index","leagues","club_index","id","group_index","category_index","sub_category_index","carriers","event","Array","from","target","selectedOptions","option","Number","value","brokers","notes","has_coverage_line","verified","marginRight","propTypes","mapStateToProps","sportsStatus","clubsStatus","categories","categoriesStatus","carriersStatus","brokersStatus"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAuCC,OAAvC,QAAsD,iBAAtD;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SACEC,eADF,EAEEC,aAFF,EAGEC,iBAHF,QAIO,mBAJP;AAKA,SAASC,eAAe,IAAIC,WAA5B,QAA+C,qBAA/C,C,CACA;;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,UAHF,EAIEC,eAJF,EAKEC,aALF,EAMEC,YANF,QAOO,uBAPP;;AASA,MAAMC,uBAAN,SAAsCtB,SAAtC,CAAgD;AAAA;AAAA;AAAA,SAC9CuB,KAD8C,GACtC,CACN;AACA;AACA;AAHM,KADsC;;AAAA,SAgB9CC,MAhB8C,GAgBpCC,QAAD,IAAc;AACrB,YAAMD,MAAM,GAAG,WAAf;;AACA,WAAK,IAAIE,GAAT,IAAgBD,QAAhB,EAA0B;AACxB,YAAIA,QAAQ,CAACC,GAAD,CAAR,KAAkB,QAAtB,EAAgC;AAC9B,iBAAO,QAAP;AACD,SAFD,MAEO,IAAID,QAAQ,CAACC,GAAD,CAAR,KAAkB,SAAtB,EAAiC;AACtC,iBAAO,SAAP;AACD,SAFM,MAEA,IAAID,QAAQ,CAACC,GAAD,CAAR,KAAkB,MAAtB,EAA8B;AACnC,iBAAO,MAAP;AACD;AACF;;AACD,aAAOF,MAAP;AACD,KA5B6C;;AAAA,SA8B9CG,WA9B8C,GA8B/BC,SAAD,IAAe;AAC3B,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAX,CAAiBE,MAAjB,CACTC,IAAD,IAAUA,IAAI,CAACC,UAAL,CAAgBL,SAAhB,KAA8BA,SAD9B,CAAZ;AAGA,aAAOhB,aAAa,CAACiB,KAAD,CAApB;AACD,KAnC6C;AAAA;;AAO9CK,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,KAAL,CAAWK,QAAX,CAAoBnB,WAAW,EAA/B,EADkB,CAElB;;AACA,SAAKc,KAAL,CAAWK,QAAX,CAAoBjB,UAAU,EAA9B;AACA,SAAKY,KAAL,CAAWK,QAAX,CAAoBhB,eAAe,EAAnC;AACA,SAAKW,KAAL,CAAWK,QAAX,CAAoBf,aAAa,EAAjC;AACA,SAAKU,KAAL,CAAWK,QAAX,CAAoBd,YAAY,EAAhC;AACD;;AAuBDe,EAAAA,MAAM,GAAG;AACP,UAAMZ,MAAM,GAAG,KAAKA,MAAL,CAAY,KAAKM,KAAL,CAAWN,MAAvB,CAAf;AACA,wBACE,uDACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEa,QAAAA,SAAS,EAAE;AAAb,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,eAGE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGb,MAAM,KAAK,SAAX,iBACC,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF,EAMGA,MAAM,KAAK,WAAX,iBACC,oBAAC,MAAD;AACE,MAAA,gBAAgB,EAAET,WAAW,CAACuB,MADhC;AAEE,MAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAFZ;AAGE,MAAA,aAAa,EAAEzB,WAAW,CAAC0B,aAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,CAAC;AACAC,MAAAA,YADA;AAEAC,MAAAA,YAFA;AAGAC,MAAAA,aAHA;AAIAC,MAAAA,MAJA;AAKAC,MAAAA;AALA,KAAD,kBAOC,oBAAC,IAAD;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,QAAQ,EAAEJ,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEpC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,KAAK,EAAEuC,MAAM,CAACE,WAHhB;AAIE,MAAA,QAAQ,EAAEJ,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG/B,aAAa,CAAC,KAAKkB,KAAL,CAAWkB,MAAZ,CANhB,CAFF,CADF,CADF,eAcE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAE1C,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,IAAI,EAAC,cAFP;AAGE,MAAA,KAAK,EAAEuC,MAAM,CAACI,YAHhB;AAIE,MAAA,QAAQ,EAAEN,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG9B,iBAAiB,CAChB,KAAKiB,KAAL,CAAWkB,MAAX,CAAkBH,MAAM,CAACE,WAAzB,EAAsCd,UAAtC,CACGiB,OAFa,CANpB,CAFF,CADF,CAdF,eA8BE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAE5C,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,KAAK,EAAEuC,MAAM,CAACM,UAHhB;AAIE,MAAA,QAAQ,EAAER,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKhB,WAAL,CACC,KAAKG,KAAL,CAAWkB,MAAX,CAAkBH,MAAM,CAACE,WAAzB,EAAsCd,UAAtC,CACGiB,OADH,CACWL,MAAM,CAACI,YADlB,EACgChB,UADhC,CAC2CmB,EAF5C,CANH,CAFF,CADF,eAgBE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAE9C,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,KAAK,EAAEuC,MAAM,CAACQ,WAHhB;AAIE,MAAA,QAAQ,EAAEV,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAhBF,CA9BF,eAwDE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAErC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,gBAFP;AAGE,MAAA,KAAK,EAAEuC,MAAM,CAACS,cAHhB;AAIE,MAAA,QAAQ,EAAEX,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAWE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAErC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,oBAFP;AAGE,MAAA,KAAK,EAAEuC,MAAM,CAACU,kBAHhB;AAIE,MAAA,QAAQ,EAAEZ,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAXF,CAxDF,eA6EE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAErC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,KAAK,EAAEuC,MAAM,CAACW,QAJhB;AAKE,MAAA,QAAQ,EAAGC,KAAD,IACRb,aAAa,CACX,UADW,EAEXc,KAAK,CAACC,IAAN,CACEF,KAAK,CAACG,MAAN,CAAaC,eADf,EAEGC,MAAD,IAAYC,MAAM,CAACD,MAAM,CAACE,KAAR,CAFpB,CAFW,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeGrD,eAAe,CAAC,KAAKmB,KAAL,CAAW0B,QAAZ,CAflB,CAFF,CADF,eAsBE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAElD,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,KAAK,EAAEuC,MAAM,CAACoB,OAJhB;AAKE,MAAA,QAAQ,EAAGR,KAAD,IACRb,aAAa,CACX,SADW,EAEXc,KAAK,CAACC,IAAN,CACEF,KAAK,CAACG,MAAN,CAAaC,eADf,EAEGC,MAAD,IAAYC,MAAM,CAACD,MAAM,CAACE,KAAR,CAFpB,CAFW,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeGrD,eAAe,CAAC,KAAKmB,KAAL,CAAWmC,OAAZ,CAflB,CAFF,CAtBF,CA7EF,eAwHE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAEpB,MAAM,CAACqB,KAHhB;AAIE,MAAA,QAAQ,EAAEvB,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAxHF,eAiIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAErC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,aAAb,CADF,CADF,eAUE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEA,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,cAAb,CADF,CAVF,CAjIF,eAoJE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEA,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,mBAFP;AAGE,MAAA,KAAK,EAAE,mBAHT;AAIE,MAAA,OAAO,EAAEuC,MAAM,CAACsB,iBAJlB;AAKE,MAAA,KAAK,EAAEtB,MAAM,CAACsB,iBALhB;AAME,MAAA,QAAQ,EAAExB,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAYE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAErC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,UAHT;AAIE,MAAA,OAAO,EAAEuC,MAAM,CAACuB,QAJlB;AAKE,MAAA,KAAK,EAAEvB,MAAM,CAACuB,QALhB;AAME,MAAA,QAAQ,EAAEzB,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAZF,CApJF,EA2KGG,KAAK,IAAI,IAAT,gBACC,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,2BAFZ;AAGE,MAAA,OAAO,EAAC,SAHV;AAIE,MAAA,KAAK,EAAE;AAAEuB,QAAAA,WAAW,EAAE;AAAf,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,GAUC,EArLJ,CAZJ,CAPJ,CAHF,eAkNE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlNF,CADF,CADF;AAwND;;AA/P6C;;AAkQhD/C,uBAAuB,CAACgD,SAAxB,GAAoC,EAApC;;AAEA,SAASC,eAAT,CAAyBhD,KAAzB,EAAgC;AAC9B,QAAM;AAAEyB,IAAAA;AAAF,MAAazB,KAAK,CAACyB,MAAzB;AACA,QAAMwB,YAAY,GAAGjD,KAAK,CAACyB,MAAN,CAAaxB,MAAlC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAYN,KAAK,CAACM,KAAxB;AACA,QAAM4C,WAAW,GAAGlD,KAAK,CAACM,KAAN,CAAYL,MAAhC;AACA,QAAM;AAAEkD,IAAAA;AAAF,MAAiBnD,KAAK,CAACmD,UAA7B;AACA,QAAMC,gBAAgB,GAAGpD,KAAK,CAACmD,UAAN,CAAiBlD,MAA1C;AACA,QAAM;AAAEgC,IAAAA;AAAF,MAAejC,KAAK,CAACiC,QAA3B;AACA,QAAMoB,cAAc,GAAGrD,KAAK,CAACiC,QAAN,CAAehC,MAAtC;AACA,QAAM;AAAEyC,IAAAA;AAAF,MAAc1C,KAAK,CAAC0C,OAA1B;AACA,QAAMY,aAAa,GAAGtD,KAAK,CAAC0C,OAAN,CAAczC,MAApC;AACA,SAAO;AACLA,IAAAA,MAAM,EAAE;AACNgD,MAAAA,YADM;AAENC,MAAAA,WAFM;AAGNE,MAAAA,gBAHM;AAINC,MAAAA,cAJM;AAKNC,MAAAA;AALM,KADH;AAQL7B,IAAAA,MARK;AASLnB,IAAAA,KATK;AAUL6C,IAAAA,UAVK;AAWLlB,IAAAA,QAXK;AAYLS,IAAAA;AAZK,GAAP;AAcD;;AAED,eAAehE,OAAO,CAACsE,eAAD,CAAP,CAAyBjD,uBAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Col, Row, Card, Spinner } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport {\n  objectOptionsID,\n  objectOptions,\n  objectDataOptions,\n} from \"../../utils/Forms\";\nimport { coverage_wizard as formHelpers } from \"../../utils/Schemas\";\n// import { clubForm as form } from \"../../utils/Forms\";\nimport {\n  fetchSports,\n  fetchLeagues,\n  fetchClubs,\n  fetchCategories,\n  fetchCarriers,\n  fetchBrokers,\n} from \"../../actions/Actions\";\n\nclass CoverageWizardContainer extends Component {\n  state = {\n    // tableHeaders: [\"Name\", \"Code\", \"League\", \"Groups\"],\n    // name: \"club\",\n    // plural: \"clubs\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchSports());\n    // this.props.dispatch(fetchLeagues());\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchCategories());\n    this.props.dispatch(fetchCarriers());\n    this.props.dispatch(fetchBrokers());\n  }\n\n  status = (statuses) => {\n    const status = \"succeeded\";\n    for (var key in statuses) {\n      if (statuses[key] === \"failed\") {\n        return \"failed\";\n      } else if (statuses[key] === \"loading\") {\n        return \"loading\";\n      } else if (statuses[key] === \"idle\") {\n        return \"idle\";\n      }\n    }\n    return status;\n  };\n\n  clubOptions = (league_id) => {\n    let clubs = this.props.clubs.filter(\n      (club) => club.attributes.league_id === league_id\n    );\n    return objectOptions(clubs);\n  };\n\n  render() {\n    const status = this.status(this.props.status);\n    return (\n      <>\n        <Card>\n          <Card.Header></Card.Header>\n          <Card.Title style={{ marginTop: \"10px\" }}>Add Coverages</Card.Title>\n          <Card.Body>\n            <Row className=\"row justify-content-center\">\n              {status === \"loading\" && (\n                <Spinner animation=\"border\" variant=\"primary\" />\n              )}\n            </Row>\n            {status === \"succeeded\" && (\n              <Formik\n                validationSchema={formHelpers.schema}\n                onSubmit={console.log(\"Submit\")}\n                initialValues={formHelpers.initialValues}\n              >\n                {({\n                  handleSubmit,\n                  handleChange,\n                  setFieldValue,\n                  values,\n                  dirty,\n                }) => (\n                  <Form noValidate onSubmit={handleSubmit}>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Sport:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"sport_index\"\n                          value={values.sport_index}\n                          onChange={handleChange}\n                        >\n                          {objectOptions(this.props.sports)}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>League:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"league_index\"\n                          value={values.league_index}\n                          onChange={handleChange}\n                        >\n                          {objectDataOptions(\n                            this.props.sports[values.sport_index].attributes\n                              .leagues\n                          )}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Club:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"club_index\"\n                          value={values.club_index}\n                          onChange={handleChange}\n                        >\n                          {this.clubOptions(\n                            this.props.sports[values.sport_index].attributes\n                              .leagues[values.league_index].attributes.id\n                          )}\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Group:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"group_index\"\n                          value={values.group_index}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Category:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"category_index\"\n                          value={values.category_index}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Sub Category:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"sub_category_index\"\n                          value={values.sub_category_index}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Carriers:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          multiple\n                          name=\"carriers\"\n                          value={values.carriers}\n                          onChange={(event) =>\n                            setFieldValue(\n                              \"carriers\",\n                              Array.from(\n                                event.target.selectedOptions,\n                                (option) => Number(option.value)\n                              )\n                            )\n                          }\n                        >\n                          {objectOptionsID(this.props.carriers)}\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Brokers:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          multiple\n                          name=\"brokers\"\n                          value={values.brokers}\n                          onChange={(event) =>\n                            setFieldValue(\n                              \"brokers\",\n                              Array.from(\n                                event.target.selectedOptions,\n                                (option) => Number(option.value)\n                              )\n                            )\n                          }\n                        >\n                          {objectOptionsID(this.props.brokers)}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Form.Group>\n                      <Form.Label>Notes:</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"notes\"\n                        value={values.notes}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>{\"Start Date:\"}</Form.Label>\n                        {/* <DatePicker\n                        name=\"start_date\"\n                        selected={values.start_date}\n                        onChange={(val) => setFieldValue(\"start_date\", val)}\n                      /> */}\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>{\"Ending Date:\"}</Form.Label>\n                        {/* <DatePicker\n                        name=\"end_date\"\n                        selected={values.end_date}\n                        onChange={(val) => setFieldValue(\"end_date\", val)}\n                      /> */}\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Check\n                          type=\"checkbox\"\n                          name=\"has_coverage_line\"\n                          label={\"Has Coverage Line\"}\n                          checked={values.has_coverage_line}\n                          value={values.has_coverage_line}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Check\n                          type=\"checkbox\"\n                          name=\"verified\"\n                          label={\"Verified\"}\n                          checked={values.verified}\n                          value={values.verified}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n                    </Row>\n                    {dirty == true ? (\n                      <Button\n                        type=\"submit\"\n                        className=\"btn btn-theme float-right\"\n                        variant=\"primary\"\n                        style={{ marginRight: \"10px\" }}\n                      >\n                        Update Coverage\n                      </Button>\n                    ) : (\n                      \"\"\n                    )}\n                  </Form>\n                )}\n              </Formik>\n            )}\n          </Card.Body>\n          <Card.Footer></Card.Footer>\n        </Card>\n      </>\n    );\n  }\n}\n\nCoverageWizardContainer.propTypes = {};\n\nfunction mapStateToProps(state) {\n  const { sports } = state.sports;\n  const sportsStatus = state.sports.status;\n  const { clubs } = state.clubs;\n  const clubsStatus = state.clubs.status;\n  const { categories } = state.categories;\n  const categoriesStatus = state.categories.status;\n  const { carriers } = state.carriers;\n  const carriersStatus = state.carriers.status;\n  const { brokers } = state.brokers;\n  const brokersStatus = state.brokers.status;\n  return {\n    status: {\n      sportsStatus,\n      clubsStatus,\n      categoriesStatus,\n      carriersStatus,\n      brokersStatus,\n    },\n    sports,\n    clubs,\n    categories,\n    carriers,\n    brokers,\n  };\n}\n\nexport default connect(mapStateToProps)(CoverageWizardContainer);\n"]},"metadata":{},"sourceType":"module"}