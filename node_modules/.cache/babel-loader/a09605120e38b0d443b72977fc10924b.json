{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/Coverages/Front/src/containers/categories/CategoriesContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { categories as formHelpers } from \"../../utils/Schemas\";\nimport { categoryForm as form } from \"../../utils/Forms\";\nimport { fetchCategories, postCategory } from \"../../actions/Actions\";\n\nclass CategoriesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableHeaders: [\"Name\", \"Associated Subs\"],\n      name: \"category\",\n      plural: \"categories\"\n    };\n\n    this.showObjects = objects => {\n      return objects.map((object, index) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"link\",\n          href: \"/categories/\" + object.attributes.id,\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }\n        }, object.attributes.name), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        }, object.attributes.associated_sub_categories));\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchCategories());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListStructure, {\n      objects: this.props.categories,\n      status: this.props.status,\n      showObjects: this.showObjects,\n      tableHeaders: this.state.tableHeaders,\n      name: this.state.name,\n      plural: this.state.plural,\n      formHelpers: formHelpers,\n      form: form,\n      postObject: values => this.props.dispatch(postCategory(values)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nCategoriesContainer.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  status: PropTypes.string.isRequired,\n  errors: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n  const {\n    categories,\n    status,\n    errors\n  } = state.categories;\n  return {\n    categories,\n    status,\n    errors\n  };\n}\n\nexport default connect(mapStateToProps)(CategoriesContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/containers/categories/CategoriesContainer.js"],"names":["React","Component","connect","ListStructure","PropTypes","Button","categories","formHelpers","categoryForm","form","fetchCategories","postCategory","CategoriesContainer","state","tableHeaders","name","plural","showObjects","objects","map","object","index","attributes","id","color","associated_sub_categories","componentDidMount","props","dispatch","render","status","values","propTypes","arrayOf","isRequired","string","errors","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { categories as formHelpers } from \"../../utils/Schemas\";\nimport { categoryForm as form } from \"../../utils/Forms\";\nimport { fetchCategories, postCategory } from \"../../actions/Actions\";\n\nclass CategoriesContainer extends Component {\n  state = {\n    tableHeaders: [\"Name\", \"Associated Subs\"],\n    name: \"category\",\n    plural: \"categories\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchCategories());\n  }\n\n  showObjects = (objects) => {\n    return objects.map((object, index) => {\n      return (\n        <tr key={index}>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/categories/\" + object.attributes.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.name}\n            </Button>{\" \"}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.associated_sub_categories}\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <ListStructure\n          objects={this.props.categories}\n          status={this.props.status}\n          showObjects={this.showObjects}\n          tableHeaders={this.state.tableHeaders}\n          name={this.state.name}\n          plural={this.state.plural}\n          formHelpers={formHelpers}\n          form={form}\n          postObject={(values) => this.props.dispatch(postCategory(values))}\n        />\n      </>\n    );\n  }\n}\n\nCategoriesContainer.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  status: PropTypes.string.isRequired,\n  errors: PropTypes.string,\n};\n\nfunction mapStateToProps(state) {\n  const { categories, status, errors } = state.categories;\n  return { categories, status, errors };\n}\n\nexport default connect(mapStateToProps)(CategoriesContainer);\n"]},"metadata":{},"sourceType":"module"}