{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/Coverages/Front/src/containers/clubs/ClubsContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { clubs as formHelpers } from \"../../utils/Schemas\";\nimport { clubForm as form } from \"../../utils/Forms\";\nimport { fetchClubs, postClub, fetchLeagues } from \"../../actions/Actions\";\n\nclass ClubsContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableHeaders: [\"Name\", \"Code\", \"League\", \"Groups\"],\n      name: \"club\",\n      plural: \"clubs\"\n    };\n\n    this.showObjects = objects => {\n      return objects.map((object, index) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"link\",\n          href: \"/clubs/\" + object.attributes.id,\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }\n        }, object.attributes.name)), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }\n        }, object.attributes.abbreviation), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }\n        }, object.attributes.league.name), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }\n        }, object.attributes.club_groups_count));\n      });\n    };\n\n    this.postObject = values => {\n      const new_object = {\n        name: values.name,\n        abbreviation: values.level,\n        league_id: this.props.leagues[values.league_index].attributes.id\n      };\n      this.props.dispatch(postClub(new_object));\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchLeagues());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListStructure, {\n      objects: this.props.clubs,\n      status: this.props.status,\n      showObjects: this.showObjects,\n      tableHeaders: this.state.tableHeaders,\n      name: this.state.name,\n      plural: this.state.plural,\n      formHelpers: formHelpers,\n      form: (values, handleChange, errors) => form(values, handleChange, errors, this.props.leagues),\n      postObject: this.postObject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nClubsContainer.propTypes = {\n  clubs: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nfunction mapStateToProps(state) {\n  const {\n    clubs,\n    status,\n    error\n  } = state.clubs;\n  const {\n    leagues\n  } = state.leagues;\n  return {\n    clubs,\n    leagues,\n    status,\n    error\n  };\n}\n\nexport default connect(mapStateToProps)(ClubsContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/containers/clubs/ClubsContainer.js"],"names":["React","Component","connect","ListStructure","PropTypes","Button","clubs","formHelpers","clubForm","form","fetchClubs","postClub","fetchLeagues","ClubsContainer","state","tableHeaders","name","plural","showObjects","objects","map","object","index","attributes","id","color","abbreviation","league","club_groups_count","postObject","values","new_object","level","league_id","props","leagues","league_index","dispatch","componentDidMount","render","status","handleChange","errors","propTypes","isRequired","string","error","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { clubs as formHelpers } from \"../../utils/Schemas\";\nimport { clubForm as form } from \"../../utils/Forms\";\nimport { fetchClubs, postClub, fetchLeagues } from \"../../actions/Actions\";\n\nclass ClubsContainer extends Component {\n  state = {\n    tableHeaders: [\"Name\", \"Code\", \"League\", \"Groups\"],\n    name: \"club\",\n    plural: \"clubs\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchLeagues());\n  }\n\n  showObjects = (objects) => {\n    return objects.map((object, index) => {\n      return (\n        <tr key={index}>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/clubs/\" + object.attributes.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.abbreviation}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.league.name}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.club_groups_count}\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  postObject = (values) => {\n    const new_object = {\n      name: values.name,\n      abbreviation: values.level,\n      league_id: this.props.leagues[values.league_index].attributes.id,\n    };\n    this.props.dispatch(postClub(new_object));\n  };\n\n  render() {\n    return (\n      <>\n        <ListStructure\n          objects={this.props.clubs}\n          status={this.props.status}\n          showObjects={this.showObjects}\n          tableHeaders={this.state.tableHeaders}\n          name={this.state.name}\n          plural={this.state.plural}\n          formHelpers={formHelpers}\n          form={(values, handleChange, errors) =>\n            form(values, handleChange, errors, this.props.leagues)\n          }\n          postObject={this.postObject}\n        />\n      </>\n    );\n  }\n}\n\nClubsContainer.propTypes = {\n  clubs: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  const { clubs, status, error } = state.clubs;\n  const { leagues } = state.leagues;\n  return { clubs, leagues, status, error };\n}\n\nexport default connect(mapStateToProps)(ClubsContainer);\n"]},"metadata":{},"sourceType":"module"}