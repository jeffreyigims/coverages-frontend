{"ast":null,"code":"// import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// import DetailStructure from \"../../components/DetailStructure\";\n// import PropTypes from \"prop-types\";\n// import { Button } from \"react-bootstrap\";\n// import GeneralTable from \"../../components/GeneralTable\";\n// import { sub_categories as formHelpers } from \"../../utils/Schemas\";\n// import { subCategoryForm as form } from \"../../utils/Forms\";\n// import { fetchSub, updateSub, deleteSub } from \"../../actions/Actions\";\n// class SubCategoryContainer extends Component {\n//   state = {\n//     name: \"sub category\",\n//   };\n//   componentDidMount() {\n//     let id = this.props.match.params.id;\n//     this.props.dispatch(fetchSubCategory(id));\n//   }\n//   showDetails = (object) => {\n//     let showObjects = (objects) => {\n//       return objects.map((object, index) => {\n//         return (\n//           <tr key={index}>\n//             <td width=\"200\" align=\"left\">\n//               <Button\n//                 variant=\"link\"\n//                 href={\"/clubs/\" + object.data.attributes.id}\n//                 style={{ color: \"black\" }}\n//               >\n//                 {object.data.attributes.name}\n//               </Button>\n//             </td>\n//             <td width=\"200\" align=\"left\">\n//               {object.data.attributes.abbreviation}\n//             </td>\n//             <td width=\"200\" align=\"left\">\n//               {object.data.attributes.club_groups_count}\n//             </td>\n//           </tr>\n//         );\n//       });\n//     };\n//     return (\n//       <GeneralTable\n//         objects={object.attributes.clubs}\n//         showObjects={showObjects}\n//         tableHeaders={[\"Name\", \"Code\", \"Groups\"]}\n//       />\n//     );\n//   };\n//   render() {\n//     return (\n//       <>\n//         <DetailStructure\n//           object={this.props.selected}\n//           status={this.props.status}\n//           name={this.state.name}\n//           formHelpers={formHelpers}\n//           form={(values, handleChange, errors) => form(values, handleChange, errors, this.props.sports)}\n//           showDetails={this.showDetails}\n//           updateObject={(id, values) => {\n//             this.props.dispatch(updateLeague({ id: id, values: values }));\n//           }}\n//           deleteObject={(id) => {\n//             this.props.dispatch(deleteLeague(id));\n//           }}\n//           redirection={{ link: this.props.link, redirect: this.props.redirect }}\n//         />\n//       </>\n//     );\n//   }\n// }\n// LeagueContainer.propTypes = {\n//   selected: PropTypes.object.isRequired,\n//   status: PropTypes.string.isRequired,\n//   error: PropTypes.string.isRequired,\n//   link: PropTypes.string,\n//   redirect: PropTypes.bool,\n// };\n// function mapStateToProps(state) {\n//   const { selected, status, error } = state.leagues;\n//   const { sports } = state.sports;\n//   const { link, redirect } = state.redirections;\n//   return { selected, status, error, link, redirect, sports};\n// }\n// export default connect(mapStateToProps)(LeagueContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/containers/sub_categories/SubCategoryContainer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// import DetailStructure from \"../../components/DetailStructure\";\n// import PropTypes from \"prop-types\";\n// import { Button } from \"react-bootstrap\";\n// import GeneralTable from \"../../components/GeneralTable\";\n// import { sub_categories as formHelpers } from \"../../utils/Schemas\";\n// import { subCategoryForm as form } from \"../../utils/Forms\";\n// import { fetchSub, updateSub, deleteSub } from \"../../actions/Actions\";\n\n// class SubCategoryContainer extends Component {\n//   state = {\n//     name: \"sub category\",\n//   };\n\n//   componentDidMount() {\n//     let id = this.props.match.params.id;\n//     this.props.dispatch(fetchSubCategory(id));\n//   }\n\n//   showDetails = (object) => {\n//     let showObjects = (objects) => {\n//       return objects.map((object, index) => {\n//         return (\n//           <tr key={index}>\n//             <td width=\"200\" align=\"left\">\n//               <Button\n//                 variant=\"link\"\n//                 href={\"/clubs/\" + object.data.attributes.id}\n//                 style={{ color: \"black\" }}\n//               >\n//                 {object.data.attributes.name}\n//               </Button>\n//             </td>\n//             <td width=\"200\" align=\"left\">\n//               {object.data.attributes.abbreviation}\n//             </td>\n//             <td width=\"200\" align=\"left\">\n//               {object.data.attributes.club_groups_count}\n//             </td>\n//           </tr>\n//         );\n//       });\n//     };\n\n//     return (\n//       <GeneralTable\n//         objects={object.attributes.clubs}\n//         showObjects={showObjects}\n//         tableHeaders={[\"Name\", \"Code\", \"Groups\"]}\n//       />\n//     );\n//   };\n\n//   render() {\n//     return (\n//       <>\n//         <DetailStructure\n//           object={this.props.selected}\n//           status={this.props.status}\n//           name={this.state.name}\n//           formHelpers={formHelpers}\n//           form={(values, handleChange, errors) => form(values, handleChange, errors, this.props.sports)}\n//           showDetails={this.showDetails}\n//           updateObject={(id, values) => {\n//             this.props.dispatch(updateLeague({ id: id, values: values }));\n//           }}\n//           deleteObject={(id) => {\n//             this.props.dispatch(deleteLeague(id));\n//           }}\n//           redirection={{ link: this.props.link, redirect: this.props.redirect }}\n//         />\n//       </>\n//     );\n//   }\n// }\n\n// LeagueContainer.propTypes = {\n//   selected: PropTypes.object.isRequired,\n//   status: PropTypes.string.isRequired,\n//   error: PropTypes.string.isRequired,\n//   link: PropTypes.string,\n//   redirect: PropTypes.bool,\n// };\n\n// function mapStateToProps(state) {\n//   const { selected, status, error } = state.leagues;\n//   const { sports } = state.sports;\n//   const { link, redirect } = state.redirections;\n//   return { selected, status, error, link, redirect, sports};\n// }\n\n// export default connect(mapStateToProps)(LeagueContainer);\n"]},"metadata":{},"sourceType":"module"}