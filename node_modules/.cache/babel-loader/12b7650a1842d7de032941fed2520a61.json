{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport ActionTypes from \"./constants/ActionTypes\";\nimport { fetchSports } from \"./actions/Actions\";\nimport { createSlice, createAction } from \"@reduxjs/toolkit\"; // function sports(\n//   state = {\n//     sports: [],\n//   },\n//   action\n// ) {\n//   switch (action.type) {\n//     case ActionTypes.REQUEST_SPORTS:\n//       return Object.assign({}, state, {});\n//     case ActionTypes.RECEIVE_SPORTS:\n//       return Object.assign({}, state, {\n//         sports: action.sports,\n//       });\n//     case ActionTypes.POST_SPORT:\n//       console.log(action.sport)\n//       return Object.assign({}, state, {\n//         sports: state.sports.concat(action.sport),\n//       });\n//     case [fetchSports.pending]:\n//       console.log(\"Pending\");\n//     default:\n//       return state;\n//   }\n// }\n\nconst initialState = {\n  sports: []\n};\nconst sportsSlice = createSlice({\n  name: \"sports\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchSports.Pending]: (state, action) => {\n      console.log(\"Pending\");\n      state.sports = action.data;\n    },\n    [fetchSports.fulfilled]: (state, action) => {\n      console.log(action);\n    }\n  }\n}); // const reducer = combineReducers({ sportsSlice.reducer });\n\nexport default sportsSlice.reducer;","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/survey/src/reducers.js"],"names":["combineReducers","ActionTypes","fetchSports","createSlice","createAction","initialState","sports","sportsSlice","name","reducers","extraReducers","Pending","state","action","console","log","data","fulfilled","reducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,kBAA1C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAArB;AACA,MAAMC,WAAW,GAAGJ,WAAW,CAAC;AAC9BK,EAAAA,IAAI,EAAE,QADwB;AAE9BH,EAAAA,YAF8B;AAG9BI,EAAAA,QAAQ,EAAE,EAHoB;AAI9BC,EAAAA,aAAa,EAAE;AACb,KAACR,WAAW,CAACS,OAAb,GAAuB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAH,MAAAA,KAAK,CAACN,MAAN,GAAeO,MAAM,CAACG,IAAtB;AACD,KAJY;AAKb,KAACd,WAAW,CAACe,SAAb,GAAyB,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD;AAPY;AAJe,CAAD,CAA/B,C,CAeA;;AAEA,eAAeN,WAAW,CAACW,OAA3B","sourcesContent":["import { combineReducers } from \"redux\";\nimport ActionTypes from \"./constants/ActionTypes\";\nimport { fetchSports } from \"./actions/Actions\";\nimport { createSlice, createAction } from \"@reduxjs/toolkit\";\n\n// function sports(\n//   state = {\n//     sports: [],\n//   },\n//   action\n// ) {\n//   switch (action.type) {\n\n//     case ActionTypes.REQUEST_SPORTS:\n//       return Object.assign({}, state, {});\n//     case ActionTypes.RECEIVE_SPORTS:\n//       return Object.assign({}, state, {\n//         sports: action.sports,\n//       });\n//     case ActionTypes.POST_SPORT:\n//       console.log(action.sport)\n//       return Object.assign({}, state, {\n//         sports: state.sports.concat(action.sport),\n//       });\n//     case [fetchSports.pending]:\n//       console.log(\"Pending\");\n//     default:\n//       return state;\n//   }\n// }\nconst initialState = { sports: [] };\nconst sportsSlice = createSlice({\n  name: \"sports\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchSports.Pending]: (state, action) => {\n      console.log(\"Pending\");\n      state.sports = action.data\n    },\n    [fetchSports.fulfilled]: (state, action) => {\n      console.log(action);\n    },\n  },\n});\n\n// const reducer = combineReducers({ sportsSlice.reducer });\n\nexport default sportsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}