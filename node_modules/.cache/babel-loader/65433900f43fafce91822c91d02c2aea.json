{"ast":null,"code":"// import fetch from \"cross-fetch\";\nimport ActionTypes from \"../constants/ActionTypes\";\n\nfunction requestSports() {\n  return {\n    type: ActionTypes.REQUEST_SPORTS\n  };\n}\n\nfunction receiveSports(json) {\n  return {\n    trype: ActionTypes.RECEIVE_SPORTS,\n    sports: json\n  };\n}\n\nexport function fetchSports() {\n  return dispatch => {\n    dispatch(requestSports());\n    return fetch(\"http://www.localhost:3000/sports.json\", {\n      method: \"GET\"\n    }).then(response => response.json()).then(json => dispatch(receiveSports(json)));\n  };\n} // return run_ajax(\n//   \"http://www.localhost:3000/sports.json\",\n//   \"GET\",\n//   {},\n//   (json) => dispatch(receiveSports(json))\n// );\n\nfunction run_ajax(link, method = \"GET\", data = {}, callback = () => {\n  this.getObjects();\n}) {\n  let options;\n\n  if (method == \"GET\") {\n    options = {\n      method: method\n    };\n  } else {\n    options = {\n      method: method,\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n    };\n  }\n\n  fetch(link, options).then(response => {\n    if (!response.ok) {\n      throw response;\n    }\n\n    return response.json();\n  }).then(result => {\n    callback(result);\n  }).catch(error => {\n    if (error.statusText) {\n      this.setState({\n        error: error\n      });\n    }\n\n    callback(error);\n  });\n}","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/survey/src/actions/Actions.js"],"names":["ActionTypes","requestSports","type","REQUEST_SPORTS","receiveSports","json","trype","RECEIVE_SPORTS","sports","fetchSports","dispatch","fetch","method","then","response","run_ajax","link","data","callback","getObjects","options","body","JSON","stringify","headers","credentials","ok","result","catch","error","statusText","setState"],"mappings":"AAAA;AACA,OAAOA,WAAP,MAAwB,0BAAxB;;AAEA,SAASC,aAAT,GAAyB;AACvB,SAAO;AACLC,IAAAA,IAAI,EAAEF,WAAW,CAACG;AADb,GAAP;AAGD;;AAED,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAO;AACLC,IAAAA,KAAK,EAAEN,WAAW,CAACO,cADd;AAELC,IAAAA,MAAM,EAAEH;AAFH,GAAP;AAID;;AAED,OAAO,SAASI,WAAT,GAAuB;AAC5B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACT,aAAa,EAAd,CAAR;AACA,WAAOU,KAAK,CAAC,uCAAD,EAA0C;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA1C,CAAL,CACJC,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACT,IAAT,EADf,EAEJQ,IAFI,CAEER,IAAD,IAAUK,QAAQ,CAACN,aAAa,CAACC,IAAD,CAAd,CAFnB,CAAP;AAGD,GALD;AAMD,C,CAED;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASU,QAAT,CACEC,IADF,EAEEJ,MAAM,GAAG,KAFX,EAGEK,IAAI,GAAG,EAHT,EAIEC,QAAQ,GAAG,MAAM;AACf,OAAKC,UAAL;AACD,CANH,EAOE;AACA,MAAIC,OAAJ;;AACA,MAAIR,MAAM,IAAI,KAAd,EAAqB;AACnBQ,IAAAA,OAAO,GAAG;AAAER,MAAAA,MAAM,EAAEA;AAAV,KAAV;AACD,GAFD,MAEO;AACLQ,IAAAA,OAAO,GAAG;AACRR,MAAAA,MAAM,EAAEA,MADA;AAERS,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFE;AAGRO,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHD;AAMRC,MAAAA,WAAW,EAAE;AANL,KAAV;AAQD;;AAEDd,EAAAA,KAAK,CAACK,IAAD,EAAOI,OAAP,CAAL,CACGP,IADH,CACSC,QAAD,IAAc;AAClB,QAAI,CAACA,QAAQ,CAACY,EAAd,EAAkB;AAChB,YAAMZ,QAAN;AACD;;AACD,WAAOA,QAAQ,CAACT,IAAT,EAAP;AACD,GANH,EAOGQ,IAPH,CAOSc,MAAD,IAAY;AAChBT,IAAAA,QAAQ,CAACS,MAAD,CAAR;AACD,GATH,EAUGC,KAVH,CAUUC,KAAD,IAAW;AAChB,QAAIA,KAAK,CAACC,UAAV,EAAsB;AACpB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD;;AACDX,IAAAA,QAAQ,CAACW,KAAD,CAAR;AACD,GAfH;AAgBD","sourcesContent":["// import fetch from \"cross-fetch\";\nimport ActionTypes from \"../constants/ActionTypes\";\n\nfunction requestSports() {\n  return {\n    type: ActionTypes.REQUEST_SPORTS,\n  };\n}\n\nfunction receiveSports(json) {\n  return {\n    trype: ActionTypes.RECEIVE_SPORTS,\n    sports: json,\n  };\n}\n\nexport function fetchSports() {\n  return (dispatch) => {\n    dispatch(requestSports());\n    return fetch(\"http://www.localhost:3000/sports.json\", { method: \"GET\" })\n      .then((response) => response.json())\n      .then((json) => dispatch(receiveSports(json)));\n  };\n}\n\n// return run_ajax(\n//   \"http://www.localhost:3000/sports.json\",\n//   \"GET\",\n//   {},\n//   (json) => dispatch(receiveSports(json))\n// );\n\nfunction run_ajax(\n  link,\n  method = \"GET\",\n  data = {},\n  callback = () => {\n    this.getObjects();\n  }\n) {\n  let options;\n  if (method == \"GET\") {\n    options = { method: method};\n  } else {\n    options = {\n      method: method,\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"same-origin\",\n    };\n  }\n\n  fetch(link, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw response;\n      }\n      return response.json();\n    })\n    .then((result) => {\n      callback(result);\n    })\n    .catch((error) => {\n      if (error.statusText) {\n        this.setState({ error: error });\n      }\n      callback(error);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}