{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/Coverages/Front/src/containers/coverage_wizard/CoverageWizardContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Col, Row, Card, Spinner } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport { objectOptionsID } from \"../../utils/Forms\"; // import { clubs as formHelpers } from \"../../utils/Schemas\";\n// import { clubForm as form } from \"../../utils/Forms\";\n\nimport { fetchSports, fetchLeagues, fetchClubs, fetchCategories, fetchCarriers, fetchBrokers } from \"../../actions/Actions\";\n\nclass CoverageWizardContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {// tableHeaders: [\"Name\", \"Code\", \"League\", \"Groups\"],\n      // name: \"club\",\n      // plural: \"clubs\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchSports()); // this.props.dispatch(fetchLeagues());\n\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchCategories());\n    this.props.dispatch(fetchCarriers());\n    this.props.dispatch(fetchBrokers());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"Add Coverages\"), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"row justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, this.props.status === \"loading\" && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    })), this.props.status === \"succeeded\" && /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: this.props.formHelpers.schema,\n      onSubmit: this.props.submit,\n      initialValues: this.initialValues(this.props.object.attributes),\n      enableReinitialize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      setFieldValue,\n      values,\n      dirty\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, \"Club:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"club\",\n      value: this.props.object.attributes.club.name,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"Group:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"group\",\n      value: this.props.object.attributes.group.name,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, \"Category:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"category\",\n      value: this.props.object.attributes.category.name,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, \"Sub Category:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"sub_category\",\n      value: this.props.object.attributes.sub_category.name,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, \"Carriers:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      name: \"carriers\",\n      value: values.carriers,\n      onChange: event => setFieldValue(\"carriers\", Array.from(event.target.selectedOptions, option => Number(option.value))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, objectOptionsID(this.props.carriers))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, \"Brokers:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      name: \"brokers\",\n      value: values.brokers,\n      onChange: event => setFieldValue(\"brokers\", Array.from(event.target.selectedOptions, option => Number(option.value))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, objectOptionsID(this.props.brokers)))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 23\n      }\n    }, \"Notes:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"notes\",\n      value: values.notes,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, \"Start Date:\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, \"Ending Date:\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      name: \"has_coverage_line\",\n      label: \"Has Coverage Line\",\n      checked: values.has_coverage_line,\n      value: values.has_coverage_line,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      name: \"verified\",\n      label: \"Verified\",\n      checked: values.verified,\n      value: values.verified,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }))), dirty == true ? /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-theme float-right\",\n      variant: \"primary\",\n      style: {\n        marginRight: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 23\n      }\n    }, \"Update Coverage\") : \"\"))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nCoverageWizardContainer.propTypes = {};\n\nfunction mapStateToProps(state) {\n  const {\n    sports\n  } = state.sports;\n  const {\n    clubs\n  } = state.clubs;\n  const {\n    categories\n  } = state.categories;\n  const {\n    carriers\n  } = state.carriers;\n  const {\n    brokers\n  } = state.brokers;\n  return {\n    sports,\n    clubs,\n    categories,\n    carriers,\n    brokers\n  };\n}\n\nexport default connect(mapStateToProps)(CoverageWizardContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/containers/coverage_wizard/CoverageWizardContainer.js"],"names":["React","Component","connect","ListStructure","PropTypes","Button","Form","Col","Row","Card","Spinner","Formik","objectOptionsID","fetchSports","fetchLeagues","fetchClubs","fetchCategories","fetchCarriers","fetchBrokers","CoverageWizardContainer","state","componentDidMount","props","dispatch","render","marginTop","status","formHelpers","schema","submit","initialValues","object","attributes","handleSubmit","handleChange","setFieldValue","values","dirty","club","name","group","category","sub_category","carriers","event","Array","from","target","selectedOptions","option","Number","value","brokers","notes","has_coverage_line","verified","marginRight","propTypes","mapStateToProps","sports","clubs","categories"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Col, Row, Card, Spinner } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport { objectOptionsID } from \"../../utils/Forms\";\n// import { clubs as formHelpers } from \"../../utils/Schemas\";\n// import { clubForm as form } from \"../../utils/Forms\";\nimport {\n  fetchSports,\n  fetchLeagues,\n  fetchClubs,\n  fetchCategories,\n  fetchCarriers,\n  fetchBrokers,\n} from \"../../actions/Actions\";\n\nclass CoverageWizardContainer extends Component {\n  state = {\n    // tableHeaders: [\"Name\", \"Code\", \"League\", \"Groups\"],\n    // name: \"club\",\n    // plural: \"clubs\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchSports());\n    // this.props.dispatch(fetchLeagues());\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchCategories());\n    this.props.dispatch(fetchCarriers());\n    this.props.dispatch(fetchBrokers());\n  }\n\n  render() {\n    return (\n      <>\n        <Card>\n          <Card.Header></Card.Header>\n          <Card.Title style={{ marginTop: \"10px\" }}>\n            Add Coverages\n          </Card.Title>\n          <Card.Body>\n            <Row className=\"row justify-content-center\">\n              {this.props.status === \"loading\" && (\n                <Spinner animation=\"border\" variant=\"primary\" />\n              )}\n            </Row>\n            {this.props.status === \"succeeded\" && (\n              <Formik\n                validationSchema={this.props.formHelpers.schema}\n                onSubmit={this.props.submit}\n                initialValues={this.initialValues(this.props.object.attributes)}\n                enableReinitialize={true}\n              >\n                {({\n                  handleSubmit,\n                  handleChange,\n                  setFieldValue,\n                  values,\n                  dirty,\n                }) => (\n                  <Form noValidate onSubmit={handleSubmit}>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Club:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"club\"\n                          value={this.props.object.attributes.club.name}\n                          disabled\n                        />\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Group:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"group\"\n                          value={this.props.object.attributes.group.name}\n                          disabled\n                        />\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Category:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"category\"\n                          value={this.props.object.attributes.category.name}\n                          disabled\n                        />\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Sub Category:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"sub_category\"\n                          value={this.props.object.attributes.sub_category.name}\n                          disabled\n                        />\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Carriers:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          multiple\n                          name=\"carriers\"\n                          value={values.carriers}\n                          onChange={(event) =>\n                            setFieldValue(\n                              \"carriers\",\n                              Array.from(\n                                event.target.selectedOptions,\n                                (option) => Number(option.value)\n                              )\n                            )\n                          }\n                        >\n                          {objectOptionsID(this.props.carriers)}\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Brokers:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          multiple\n                          name=\"brokers\"\n                          value={values.brokers}\n                          onChange={(event) =>\n                            setFieldValue(\n                              \"brokers\",\n                              Array.from(\n                                event.target.selectedOptions,\n                                (option) => Number(option.value)\n                              )\n                            )\n                          }\n                        >\n                          {objectOptionsID(this.props.brokers)}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Form.Group>\n                      <Form.Label>Notes:</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"notes\"\n                        value={values.notes}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>{\"Start Date:\"}</Form.Label>\n                        {/* <DatePicker\n                        name=\"start_date\"\n                        selected={values.start_date}\n                        onChange={(val) => setFieldValue(\"start_date\", val)}\n                      /> */}\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>{\"Ending Date:\"}</Form.Label>\n                        {/* <DatePicker\n                        name=\"end_date\"\n                        selected={values.end_date}\n                        onChange={(val) => setFieldValue(\"end_date\", val)}\n                      /> */}\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Check\n                          type=\"checkbox\"\n                          name=\"has_coverage_line\"\n                          label={\"Has Coverage Line\"}\n                          checked={values.has_coverage_line}\n                          value={values.has_coverage_line}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Check\n                          type=\"checkbox\"\n                          name=\"verified\"\n                          label={\"Verified\"}\n                          checked={values.verified}\n                          value={values.verified}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n                    </Row>\n                    {dirty == true ? (\n                      <Button\n                        type=\"submit\"\n                        className=\"btn btn-theme float-right\"\n                        variant=\"primary\"\n                        style={{ marginRight: \"10px\" }}\n                      >\n                        Update Coverage\n                      </Button>\n                    ) : (\n                      \"\"\n                    )}\n                  </Form>\n                )}\n              </Formik>\n            )}\n          </Card.Body>\n          <Card.Footer></Card.Footer>\n        </Card>\n      </>\n    );\n  }\n}\n\nCoverageWizardContainer.propTypes = {};\n\nfunction mapStateToProps(state) {\n  const { sports } = state.sports;\n  const { clubs } = state.clubs;\n  const { categories } = state.categories;\n  const { carriers } = state.carriers;\n  const { brokers } = state.brokers;\n  return { sports, clubs, categories, carriers, brokers };\n}\n\nexport default connect(mapStateToProps)(CoverageWizardContainer);\n"]},"metadata":{},"sourceType":"module"}