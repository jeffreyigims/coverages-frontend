{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/Coverages/Front/src/containers/categories/CategoryContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CategoryDetails from \"./CategoryDetails\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport { categories as formHelpers } from \"../../utils/Schemas\";\nimport { categoryForm as form } from \"../../utils/Forms\";\nimport { fetchCategory, updateCategory, deleteCategory } from \"../../actions/Actions\";\n\nclass CategoryContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"category\"\n    };\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.dispatch(fetchCategory(id));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CategoryDetails, {\n      object: this.props.selected,\n      status: this.props.status,\n      name: this.state.name,\n      formHelpers: formHelpers,\n      form: form,\n      updateObject: (id, values) => {\n        this.props.dispatch(updateCategory({\n          id: id,\n          values: values\n        }));\n      },\n      deleteObject: id => {\n        this.props.dispatch(deleteCategory(id));\n      },\n      redirection: {\n        link: this.props.link,\n        redirect: this.props.redirect\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nCategoryContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n  const {\n    selected,\n    status,\n    error\n  } = state.categories;\n  const {\n    link,\n    redirect\n  } = state.redirections;\n  return {\n    selected,\n    status,\n    error,\n    link,\n    redirect\n  };\n}\n\nexport default connect(mapStateToProps)(CategoryContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/containers/categories/CategoryContainer.js"],"names":["React","Component","connect","CategoryDetails","PropTypes","Button","GeneralTable","categories","formHelpers","categoryForm","form","fetchCategory","updateCategory","deleteCategory","CategoryContainer","state","name","componentDidMount","id","props","match","params","dispatch","render","selected","status","values","link","redirect","propTypes","object","isRequired","string","error","bool","mapStateToProps","redirections"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,UAAU,IAAIC,WAAvB,QAA0C,qBAA1C;AACA,SAASC,YAAY,IAAIC,IAAzB,QAAqC,mBAArC;AACA,SACEC,aADF,EAEEC,cAFF,EAGEC,cAHF,QAIO,uBAJP;;AAMA,MAAMC,iBAAN,SAAgCb,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCc,KADwC,GAChC;AACNC,MAAAA,IAAI,EAAE;AADA,KADgC;AAAA;;AAKxCC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,EAAE,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,EAAjC;AACA,SAAKC,KAAL,CAAWG,QAAX,CAAoBX,aAAa,CAACO,EAAD,CAAjC;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE,oBAAC,eAAD;AACE,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWK,QADrB;AAEE,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MAFrB;AAGE,MAAA,IAAI,EAAE,KAAKV,KAAL,CAAWC,IAHnB;AAIE,MAAA,WAAW,EAAER,WAJf;AAKE,MAAA,IAAI,EAAEE,IALR;AAME,MAAA,YAAY,EAAE,CAACQ,EAAD,EAAKQ,MAAL,KAAgB;AAC5B,aAAKP,KAAL,CAAWG,QAAX,CAAoBV,cAAc,CAAC;AAAEM,UAAAA,EAAE,EAAEA,EAAN;AAAUQ,UAAAA,MAAM,EAAEA;AAAlB,SAAD,CAAlC;AACD,OARH;AASE,MAAA,YAAY,EAAGR,EAAD,IAAQ;AACpB,aAAKC,KAAL,CAAWG,QAAX,CAAoBT,cAAc,CAACK,EAAD,CAAlC;AACD,OAXH;AAYE,MAAA,WAAW,EAAE;AAAES,QAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWQ,IAAnB;AAAyBC,QAAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWS;AAA9C,OAZf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAkBD;;AA7BuC;;AAgC1Cd,iBAAiB,CAACe,SAAlB,GAA8B;AAC5BL,EAAAA,QAAQ,EAAEpB,SAAS,CAAC0B,MAAV,CAAiBC,UADC;AAE5BN,EAAAA,MAAM,EAAErB,SAAS,CAAC4B,MAAV,CAAiBD,UAFG;AAG5BE,EAAAA,KAAK,EAAE7B,SAAS,CAAC4B,MAAV,CAAiBD,UAHI;AAI5BJ,EAAAA,IAAI,EAAEvB,SAAS,CAAC4B,MAJY;AAK5BJ,EAAAA,QAAQ,EAAExB,SAAS,CAAC8B;AALQ,CAA9B;;AAQA,SAASC,eAAT,CAAyBpB,KAAzB,EAAgC;AAC9B,QAAM;AAAES,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBQ,IAAAA;AAApB,MAA8BlB,KAAK,CAACR,UAA1C;AACA,QAAM;AAAEoB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBb,KAAK,CAACqB,YAAjC;AACA,SAAO;AAAEZ,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBQ,IAAAA,KAApB;AAA2BN,IAAAA,IAA3B;AAAiCC,IAAAA;AAAjC,GAAP;AACD;;AAED,eAAe1B,OAAO,CAACiC,eAAD,CAAP,CAAyBrB,iBAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CategoryDetails from \"./CategoryDetails\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport { categories as formHelpers } from \"../../utils/Schemas\";\nimport { categoryForm as form } from \"../../utils/Forms\";\nimport {\n  fetchCategory,\n  updateCategory,\n  deleteCategory,\n} from \"../../actions/Actions\";\n\nclass CategoryContainer extends Component {\n  state = {\n    name: \"category\",\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.dispatch(fetchCategory(id));\n  }\n\n  render() {\n    return (\n      <>\n        <CategoryDetails\n          object={this.props.selected}\n          status={this.props.status}\n          name={this.state.name}\n          formHelpers={formHelpers}\n          form={form}\n          updateObject={(id, values) => {\n            this.props.dispatch(updateCategory({ id: id, values: values }));\n          }}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteCategory(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nCategoryContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, status, error } = state.categories;\n  const { link, redirect } = state.redirections;\n  return { selected, status, error, link, redirect };\n}\n\nexport default connect(mapStateToProps)(CategoryContainer);\n"]},"metadata":{},"sourceType":"module"}