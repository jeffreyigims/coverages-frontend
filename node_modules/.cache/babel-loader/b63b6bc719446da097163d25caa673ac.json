{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/Coverages/Front/src/containers/categories/CategoryContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CategoryDetails from \"./CategoryDetails\";\nimport PropTypes from \"prop-types\";\nimport { categories as formHelpers } from \"../../utils/Schemas\";\nimport { categoryForm as form } from \"../../utils/Forms\";\nimport { sub_categories as formHelpersSub } from \"../../utils/Schemas\";\nimport { subCategoryForm as formSub } from \"../../utils/Forms\";\nimport { fetchCategory, updateCategory, deleteCategory, postSubCategory } from \"../../actions/Actions\";\n\nclass CategoryContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"category\"\n    };\n\n    this.postSubCategory = values => {\n      const new_object = {\n        name: values.name,\n        category_id: this.props.selected.attributes.id\n      };\n      this.props.dispatch(postSubCategory(new_object));\n    };\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.dispatch(fetchCategory(id));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CategoryDetails, {\n      object: this.props.selected,\n      secondary: this.props.secondary,\n      status: this.props.status,\n      name: this.state.name,\n      formHelpers: formHelpers,\n      form: form,\n      formHelpersSub: formHelpersSub,\n      formSub: (values, handleChange, setFieldValue, errors) => formSub(values, handleChange, setFieldValue, errors, this.props.selected),\n      postSub: values => this.postSubCategory(values),\n      updateObject: (id, values) => {\n        this.props.dispatch(updateCategory({\n          id: id,\n          values: values\n        }));\n      },\n      deleteObject: id => {\n        this.props.dispatch(deleteCategory(id));\n      },\n      redirection: {\n        link: this.props.link,\n        redirect: this.props.redirect\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nCategoryContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n  const {\n    selected,\n    status,\n    error,\n    secondary\n  } = state.categories;\n  const {\n    link,\n    redirect\n  } = state.redirections;\n  return {\n    selected,\n    status,\n    error,\n    link,\n    redirect,\n    secondary\n  };\n}\n\nexport default connect(mapStateToProps)(CategoryContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/containers/categories/CategoryContainer.js"],"names":["React","Component","connect","CategoryDetails","PropTypes","categories","formHelpers","categoryForm","form","sub_categories","formHelpersSub","subCategoryForm","formSub","fetchCategory","updateCategory","deleteCategory","postSubCategory","CategoryContainer","state","name","values","new_object","category_id","props","selected","attributes","id","dispatch","componentDidMount","match","params","render","secondary","status","handleChange","setFieldValue","errors","link","redirect","propTypes","object","isRequired","string","error","bool","mapStateToProps","redirections"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CategoryDetails from \"./CategoryDetails\";\nimport PropTypes from \"prop-types\";\nimport { categories as formHelpers } from \"../../utils/Schemas\";\nimport { categoryForm as form } from \"../../utils/Forms\";\nimport { sub_categories as formHelpersSub } from \"../../utils/Schemas\";\nimport { subCategoryForm as formSub } from \"../../utils/Forms\";\nimport {\n  fetchCategory,\n  updateCategory,\n  deleteCategory,\n  postSubCategory,\n} from \"../../actions/Actions\";\n\nclass CategoryContainer extends Component {\n  state = {\n    name: \"category\",\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.dispatch(fetchCategory(id));\n  }\n\n  postSubCategory = (values) => {\n    const new_object = {\n      name: values.name,\n      category_id: this.props.selected.attributes.id,\n    };\n    this.props.dispatch(postSubCategory(new_object));\n  };\n\n  render() {\n    return (\n      <>\n        <CategoryDetails\n          object={this.props.selected}\n          secondary={this.props.secondary}\n          status={this.props.status}\n          name={this.state.name}\n          formHelpers={formHelpers}\n          form={form}\n          formHelpersSub={formHelpersSub}\n          formSub={(values, handleChange, setFieldValue, errors) =>\n            formSub(\n              values,\n              handleChange,\n              setFieldValue,\n              errors,\n              this.props.selected\n            )\n          }\n          postSub={(values) => this.postSubCategory(values)}\n          updateObject={(id, values) => {\n            this.props.dispatch(updateCategory({ id: id, values: values }));\n          }}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteCategory(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nCategoryContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, status, error, secondary } = state.categories;\n  const { link, redirect } = state.redirections;\n  return { selected, status, error, link, redirect, secondary };\n}\n\nexport default connect(mapStateToProps)(CategoryContainer);\n"]},"metadata":{},"sourceType":"module"}