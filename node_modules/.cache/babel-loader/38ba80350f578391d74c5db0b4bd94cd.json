{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/Coverages/Front/src/containers/coverages/CoveragesContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport Moment from \"react-moment\";\nimport { EyeFill } from \"react-bootstrap-icons\";\nimport { coverages as formHelpers } from \"../../utils/Schemas\";\nimport { coverageForm as form } from \"../../utils/Forms\";\nimport { fetchCoverages, fetchClubs, fetchCategories, fetchCarriers, fetchBrokers, postCoverageAssociations } from \"../../actions/Actions\";\n\nclass CoveragesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableHeaders: [\"League\", \"Club\", \"Group\", \"Category\", \"Sub\", \"Entered By\", \"Date Created\", \"Last Updated\", \"Verified\", \"View\"],\n      name: \"coverage\",\n      plural: \"coverages\"\n    };\n\n    this.showObjects = objects => {\n      return objects.map((object, index) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"link\",\n          href: \"/leagues/\" + object.attributes.league.id,\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }\n        }, object.attributes.league.name)), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"link\",\n          href: \"/clubs/\" + object.attributes.club.id,\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }\n        }, object.attributes.club.name)), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }\n        }, object.attributes.group.name), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"link\",\n          href: \"/categories/\" + object.attributes.category.id,\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }\n        }, object.attributes.category.name)), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"link\",\n          href: \"/sub_categories/\" + object.attributes.sub_category.id,\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }\n        }, object.attributes.sub_category.name)), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"link\",\n          href: \"/users/\" + object.attributes.user.id,\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }\n        }, object.attributes.user.first_name, \" \", object.attributes.user.last_name)), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Moment, {\n          format: \"MM/DD/YYYY\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }\n        }, object.attributes.created_at)), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Moment, {\n          format: \"MM/DD/YYYY\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }\n        }, object.attributes.updated_at)), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }\n        }, object.attributes.verified ? \"true\" : \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"100\",\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"link\",\n          href: \"/coverages/\" + object.attributes.id,\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(EyeFill, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }\n        }))));\n      });\n    };\n\n    this.postObject = values => {\n      const new_object = {\n        club_group_id: this.props.clubs[values.club_index].attributes.club_groups[values.group_index].data.attributes.id,\n        sub_category_id: this.props.categories[values.category_index].attributes.sub_categories[values.sub_category_index].data.attributes.id,\n        notes: values.notes,\n        start_date: values.start_date,\n        end_date: values.end_date,\n        has_coverage_line: values.has_coverage_line,\n        verified: values.verified\n      };\n      let carriers = values.carriers.map(carrier_index => this.props.carriers[carrier_index].attributes.id);\n      let brokers = values.brokers.map(broker_index => this.props.brokers[broker_index].attributes.id);\n      this.props.dispatch(postCoverageAssociations(new_object, carriers, brokers));\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchCoverages());\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchCategories());\n    this.props.dispatch(fetchCarriers());\n    this.props.dispatch(fetchBrokers());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListStructure, {\n      objects: this.props.coverages,\n      status: this.props.status,\n      showObjects: this.showObjects,\n      tableHeaders: this.state.tableHeaders,\n      name: this.state.name,\n      plural: this.state.plural,\n      formHelpers: formHelpers,\n      form: (values, handleChange, setFieldValue, errors) => form(values, handleChange, setFieldValue, errors, this.props.clubs, this.props.categories, this.props.carriers, this.props.brokers),\n      postObject: values => this.postObject(values),\n      onPageChange: (e, {\n        activePage\n      }) => this.props.dispatch(fetchCoverages({\n        page: activePage\n      })),\n      defaultActivePage: this.props.page,\n      totalPages: this.props.pages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nCoveragesContainer.propTypes = {\n  coverages: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nfunction mapStateToProps(state) {\n  const {\n    coverages,\n    page,\n    pages,\n    status,\n    error\n  } = state.coverages;\n  const {\n    clubs\n  } = state.clubs;\n  const {\n    categories\n  } = state.categories;\n  const {\n    carriers\n  } = state.carriers;\n  const {\n    brokers\n  } = state.brokers;\n  return {\n    coverages,\n    clubs,\n    categories,\n    carriers,\n    brokers,\n    page,\n    pages,\n    status,\n    error\n  };\n}\n\nexport default connect(mapStateToProps)(CoveragesContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/containers/coverages/CoveragesContainer.js"],"names":["React","Component","connect","ListStructure","PropTypes","Button","Moment","EyeFill","coverages","formHelpers","coverageForm","form","fetchCoverages","fetchClubs","fetchCategories","fetchCarriers","fetchBrokers","postCoverageAssociations","CoveragesContainer","state","tableHeaders","name","plural","showObjects","objects","map","object","index","attributes","league","id","color","club","group","category","sub_category","user","first_name","last_name","created_at","updated_at","verified","postObject","values","new_object","club_group_id","props","clubs","club_index","club_groups","group_index","data","sub_category_id","categories","category_index","sub_categories","sub_category_index","notes","start_date","end_date","has_coverage_line","carriers","carrier_index","brokers","broker_index","dispatch","componentDidMount","render","status","handleChange","setFieldValue","errors","e","activePage","page","pages","propTypes","isRequired","string","error","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport Moment from \"react-moment\";\nimport { EyeFill } from \"react-bootstrap-icons\";\nimport { coverages as formHelpers } from \"../../utils/Schemas\";\nimport { coverageForm as form } from \"../../utils/Forms\";\nimport {\n  fetchCoverages,\n  fetchClubs,\n  fetchCategories,\n  fetchCarriers,\n  fetchBrokers,\n  postCoverageAssociations,\n} from \"../../actions/Actions\";\n\nclass CoveragesContainer extends Component {\n  state = {\n    tableHeaders: [\n      \"League\",\n      \"Club\",\n      \"Group\",\n      \"Category\",\n      \"Sub\",\n      \"Entered By\",\n      \"Date Created\",\n      \"Last Updated\",\n      \"Verified\",\n      \"View\",\n    ],\n    name: \"coverage\",\n    plural: \"coverages\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchCoverages());\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchCategories());\n    this.props.dispatch(fetchCarriers());\n    this.props.dispatch(fetchBrokers());\n  }\n\n  showObjects = (objects) => {\n    return objects.map((object, index) => {\n      return (\n        <tr key={index}>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/leagues/\" + object.attributes.league.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.league.name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/clubs/\" + object.attributes.club.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.club.name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.group.name}\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/categories/\" + object.attributes.category.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.category.name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/sub_categories/\" + object.attributes.sub_category.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.sub_category.name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/users/\" + object.attributes.user.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.user.first_name}{\" \"}\n              {object.attributes.user.last_name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Moment format=\"MM/DD/YYYY\">{object.attributes.created_at}</Moment>\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Moment format=\"MM/DD/YYYY\">{object.attributes.updated_at}</Moment>\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.verified ? \"true\" : \"false\"}\n          </td>\n          <td width=\"100\" align=\"center\">\n            <Button\n              variant=\"link\"\n              href={\"/coverages/\" + object.attributes.id}\n              style={{ color: \"black\" }}\n            >\n              <EyeFill />\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  postObject = (values) => {\n    const new_object = {\n      club_group_id: this.props.clubs[values.club_index].attributes.club_groups[\n        values.group_index\n      ].data.attributes.id,\n      sub_category_id: this.props.categories[values.category_index].attributes\n        .sub_categories[values.sub_category_index].data.attributes.id,\n      notes: values.notes,\n      start_date: values.start_date,\n      end_date: values.end_date,\n      has_coverage_line: values.has_coverage_line,\n      verified: values.verified,\n    };\n    let carriers = values.carriers.map(\n      (carrier_index) => this.props.carriers[carrier_index].attributes.id\n    );\n    let brokers = values.brokers.map(\n      (broker_index) => this.props.brokers[broker_index].attributes.id\n    );\n    this.props.dispatch(\n      postCoverageAssociations(new_object, carriers, brokers)\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <ListStructure\n          objects={this.props.coverages}\n          status={this.props.status}\n          showObjects={this.showObjects}\n          tableHeaders={this.state.tableHeaders}\n          name={this.state.name}\n          plural={this.state.plural}\n          formHelpers={formHelpers}\n          form={(values, handleChange, setFieldValue, errors) =>\n            form(\n              values,\n              handleChange,\n              setFieldValue,\n              errors,\n              this.props.clubs,\n              this.props.categories,\n              this.props.carriers,\n              this.props.brokers\n            )\n          }\n          postObject={(values) => this.postObject(values)}\n          onPageChange={(e, { activePage }) =>\n            this.props.dispatch(fetchCoverages({ page: activePage }))\n          }\n          defaultActivePage={this.props.page}\n          totalPages={this.props.pages}\n        />\n      </>\n    );\n  }\n}\n\nCoveragesContainer.propTypes = {\n  coverages: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  const { coverages, page, pages, status, error } = state.coverages;\n  const { clubs } = state.clubs;\n  const { categories } = state.categories;\n  const { carriers } = state.carriers;\n  const { brokers } = state.brokers;\n  return {\n    coverages,\n    clubs,\n    categories,\n    carriers,\n    brokers,\n    page,\n    pages,\n    status,\n    error,\n  };\n}\n\nexport default connect(mapStateToProps)(CoveragesContainer);\n"]},"metadata":{},"sourceType":"module"}