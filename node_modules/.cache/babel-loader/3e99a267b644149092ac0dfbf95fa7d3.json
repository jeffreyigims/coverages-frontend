{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/Coverages/Front/src/containers/coverages/CoveragesContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport Moment from \"react-moment\";\nimport { coverages as formHelpers } from \"../../utils/Schemas\";\nimport { coverageForm as form } from \"../../utils/Forms\";\nimport { fetchCoverages, fetchClubs, fetchCategories, fetchCarriers, fetchBrokers, postCoverage } from \"../../actions/Actions\";\n\nclass CoveragesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableHeaders: [\"Club\", \"Group\", \"Category\", \"Sub\", \"Entered By\", \"Date Created\", \"Last Updated\", \"View\"],\n      name: \"coverage\",\n      plural: \"coverages\"\n    };\n\n    this.showObjects = objects => {\n      return objects.map((object, index) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"link\",\n          href: \"/clubs/\" + object.attributes.club.id,\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }\n        }, object.attributes.club.name)), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }\n        }, object.attributes.group.name), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"link\",\n          href: \"/categories/\" + object.attributes.category.id,\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }\n        }, object.attributes.category.name)), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"link\",\n          href: \"/sub_categories/\" + object.attributes.sub_category.id,\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }\n        }, object.attributes.sub_category.name)), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"link\",\n          href: \"/users/\" + object.attributes.user.id,\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }\n        }, object.attributes.user.first_name, \" \", object.attributes.user.last_name)), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Moment, {\n          format: \"MMMM Do YYYY\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }\n        }, object.attributes.created_at)), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Moment, {\n          format: \"MMMM Do YYYY\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }\n        }, object.attributes.updated_at)), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"100\",\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"link\",\n          href: \"/coverages/\" + object.attributes.id,\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }\n        })));\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchCoverages());\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchCategories());\n    this.props.dispatch(fetchCarriers());\n    this.props.dispatch(fetchBrokers());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListStructure, {\n      objects: this.props.coverages,\n      status: this.props.status,\n      showObjects: this.showObjects,\n      tableHeaders: this.state.tableHeaders,\n      name: this.state.name,\n      plural: this.state.plural,\n      formHelpers: formHelpers,\n      form: (values, handleChange, setFieldValue, errors) => form(values, handleChange, setFieldValue, errors, this.props.clubs, [], this.props.categories, [], this.props.carriers, this.props.brokers),\n      postObject: values => this.props.dispatch(postCoverage(values)),\n      onPageChange: (e, {\n        activePage\n      }) => this.props.dispatch(fetchCoverages({\n        page: activePage\n      })),\n      defaultActivePage: this.props.page,\n      totalPages: this.props.pages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nCoveragesContainer.propTypes = {\n  coverages: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nfunction mapStateToProps(state) {\n  const {\n    coverages,\n    page,\n    pages,\n    status,\n    error\n  } = state.coverages;\n  const {\n    clubs\n  } = state.clubs;\n  const {\n    categories\n  } = state.categories;\n  const {\n    carriers\n  } = state.carriers;\n  const {\n    brokers\n  } = state.brokers;\n  return {\n    coverages,\n    clubs,\n    categories,\n    carriers,\n    brokers,\n    page,\n    pages,\n    status,\n    error\n  };\n}\n\nexport default connect(mapStateToProps)(CoveragesContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/containers/coverages/CoveragesContainer.js"],"names":["React","Component","connect","ListStructure","PropTypes","Button","Moment","coverages","formHelpers","coverageForm","form","fetchCoverages","fetchClubs","fetchCategories","fetchCarriers","fetchBrokers","postCoverage","CoveragesContainer","state","tableHeaders","name","plural","showObjects","objects","map","object","index","attributes","club","id","color","group","category","sub_category","user","first_name","last_name","created_at","updated_at","componentDidMount","props","dispatch","render","status","values","handleChange","setFieldValue","errors","clubs","categories","carriers","brokers","e","activePage","page","pages","propTypes","isRequired","string","error","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,SAAS,IAAIC,WAAtB,QAAyC,qBAAzC;AACA,SAASC,YAAY,IAAIC,IAAzB,QAAqC,mBAArC;AACA,SACEC,cADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,YANF,QAOO,uBAPP;;AASA,MAAMC,kBAAN,SAAiChB,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACzCiB,KADyC,GACjC;AACNC,MAAAA,YAAY,EAAE,CACZ,MADY,EAEZ,OAFY,EAGZ,UAHY,EAIZ,KAJY,EAKZ,YALY,EAMZ,cANY,EAOZ,cAPY,EAQZ,MARY,CADR;AAWNC,MAAAA,IAAI,EAAE,UAXA;AAYNC,MAAAA,MAAM,EAAE;AAZF,KADiC;;AAAA,SAwBzCC,WAxByC,GAwB1BC,OAAD,IAAa;AACzB,aAAOA,OAAO,CAACC,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AACpC,4BACE;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAgB,UAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,IAAI,EAAE,YAAYD,MAAM,CAACE,UAAP,CAAkBC,IAAlB,CAAuBC,EAF3C;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKGL,MAAM,CAACE,UAAP,CAAkBC,IAAlB,CAAuBR,IAL1B,CADF,CADF,eAUE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAgB,UAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGK,MAAM,CAACE,UAAP,CAAkBI,KAAlB,CAAwBX,IAD3B,CAVF,eAaE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAgB,UAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,IAAI,EAAE,iBAAiBK,MAAM,CAACE,UAAP,CAAkBK,QAAlB,CAA2BH,EAFpD;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKGL,MAAM,CAACE,UAAP,CAAkBK,QAAlB,CAA2BZ,IAL9B,CADF,CAbF,eAsBE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAgB,UAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,IAAI,EAAE,qBAAqBK,MAAM,CAACE,UAAP,CAAkBM,YAAlB,CAA+BJ,EAF5D;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKGL,MAAM,CAACE,UAAP,CAAkBM,YAAlB,CAA+Bb,IALlC,CADF,CAtBF,eA+BE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAgB,UAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,IAAI,EAAE,YAAYK,MAAM,CAACE,UAAP,CAAkBO,IAAlB,CAAuBL,EAF3C;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKGL,MAAM,CAACE,UAAP,CAAkBO,IAAlB,CAAuBC,UAL1B,EAKsC,GALtC,EAMGV,MAAM,CAACE,UAAP,CAAkBO,IAAlB,CAAuBE,SAN1B,CADF,CA/BF,eAyCE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAgB,UAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AAAQ,UAAA,MAAM,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGX,MAAM,CAACE,UAAP,CAAkBU,UADrB,CADF,CAzCF,eA8CE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAgB,UAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AAAQ,UAAA,MAAM,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGZ,MAAM,CAACE,UAAP,CAAkBW,UADrB,CADF,CA9CF,eAmDE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAgB,UAAA,KAAK,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,IAAI,EAAE,gBAAgBb,MAAM,CAACE,UAAP,CAAkBE,EAF1C;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAnDF,CADF;AA+DD,OAhEM,CAAP;AAiED,KA1FwC;AAAA;;AAgBzCS,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,QAAX,CAAoB9B,cAAc,EAAlC;AACA,SAAK6B,KAAL,CAAWC,QAAX,CAAoB7B,UAAU,EAA9B;AACA,SAAK4B,KAAL,CAAWC,QAAX,CAAoB5B,eAAe,EAAnC;AACA,SAAK2B,KAAL,CAAWC,QAAX,CAAoB3B,aAAa,EAAjC;AACA,SAAK0B,KAAL,CAAWC,QAAX,CAAoB1B,YAAY,EAAhC;AACD;;AAsED2B,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE,oBAAC,aAAD;AACE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWjC,SADtB;AAEE,MAAA,MAAM,EAAE,KAAKiC,KAAL,CAAWG,MAFrB;AAGE,MAAA,WAAW,EAAE,KAAKrB,WAHpB;AAIE,MAAA,YAAY,EAAE,KAAKJ,KAAL,CAAWC,YAJ3B;AAKE,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IALnB;AAME,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,MANrB;AAOE,MAAA,WAAW,EAAEb,WAPf;AAQE,MAAA,IAAI,EAAE,CAACoC,MAAD,EAASC,YAAT,EAAuBC,aAAvB,EAAsCC,MAAtC,KACJrC,IAAI,CACFkC,MADE,EAEFC,YAFE,EAGFC,aAHE,EAIFC,MAJE,EAKF,KAAKP,KAAL,CAAWQ,KALT,EAMF,EANE,EAOF,KAAKR,KAAL,CAAWS,UAPT,EAQF,EARE,EASF,KAAKT,KAAL,CAAWU,QATT,EAUF,KAAKV,KAAL,CAAWW,OAVT,CATR;AAsBE,MAAA,UAAU,EAAGP,MAAD,IAAY,KAAKJ,KAAL,CAAWC,QAAX,CAAoBzB,YAAY,CAAC4B,MAAD,CAAhC,CAtB1B;AAuBE,MAAA,YAAY,EAAE,CAACQ,CAAD,EAAI;AAAEC,QAAAA;AAAF,OAAJ,KACZ,KAAKb,KAAL,CAAWC,QAAX,CAAoB9B,cAAc,CAAC;AAAE2C,QAAAA,IAAI,EAAED;AAAR,OAAD,CAAlC,CAxBJ;AA0BE,MAAA,iBAAiB,EAAE,KAAKb,KAAL,CAAWc,IA1BhC;AA2BE,MAAA,UAAU,EAAE,KAAKd,KAAL,CAAWe,KA3BzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAiCD;;AA9HwC;;AAiI3CtC,kBAAkB,CAACuC,SAAnB,GAA+B;AAC7BjD,EAAAA,SAAS,EAAEH,SAAS,CAACqB,MAAV,CAAiBgC,UADC;AAE7Bd,EAAAA,MAAM,EAAEvC,SAAS,CAACsD,MAAV,CAAiBD,UAFI;AAG7BE,EAAAA,KAAK,EAAEvD,SAAS,CAACsD,MAAV,CAAiBD;AAHK,CAA/B;;AAMA,SAASG,eAAT,CAAyB1C,KAAzB,EAAgC;AAC9B,QAAM;AAAEX,IAAAA,SAAF;AAAa+C,IAAAA,IAAb;AAAmBC,IAAAA,KAAnB;AAA0BZ,IAAAA,MAA1B;AAAkCgB,IAAAA;AAAlC,MAA4CzC,KAAK,CAACX,SAAxD;AACA,QAAM;AAAEyC,IAAAA;AAAF,MAAY9B,KAAK,CAAC8B,KAAxB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAiB/B,KAAK,CAAC+B,UAA7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAehC,KAAK,CAACgC,QAA3B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcjC,KAAK,CAACiC,OAA1B;AACA,SAAO;AACL5C,IAAAA,SADK;AAELyC,IAAAA,KAFK;AAGLC,IAAAA,UAHK;AAILC,IAAAA,QAJK;AAKLC,IAAAA,OALK;AAMLG,IAAAA,IANK;AAOLC,IAAAA,KAPK;AAQLZ,IAAAA,MARK;AASLgB,IAAAA;AATK,GAAP;AAWD;;AAED,eAAezD,OAAO,CAAC0D,eAAD,CAAP,CAAyB3C,kBAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport Moment from \"react-moment\";\nimport { coverages as formHelpers } from \"../../utils/Schemas\";\nimport { coverageForm as form } from \"../../utils/Forms\";\nimport {\n  fetchCoverages,\n  fetchClubs,\n  fetchCategories,\n  fetchCarriers,\n  fetchBrokers,\n  postCoverage,\n} from \"../../actions/Actions\";\n\nclass CoveragesContainer extends Component {\n  state = {\n    tableHeaders: [\n      \"Club\",\n      \"Group\",\n      \"Category\",\n      \"Sub\",\n      \"Entered By\",\n      \"Date Created\",\n      \"Last Updated\",\n      \"View\",\n    ],\n    name: \"coverage\",\n    plural: \"coverages\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchCoverages());\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchCategories());\n    this.props.dispatch(fetchCarriers());\n    this.props.dispatch(fetchBrokers());\n  }\n\n  showObjects = (objects) => {\n    return objects.map((object, index) => {\n      return (\n        <tr key={index}>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/clubs/\" + object.attributes.club.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.club.name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.group.name}\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/categories/\" + object.attributes.category.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.category.name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/sub_categories/\" + object.attributes.sub_category.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.sub_category.name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/users/\" + object.attributes.user.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.user.first_name}{\" \"}\n              {object.attributes.user.last_name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Moment format=\"MMMM Do YYYY\">\n              {object.attributes.created_at}\n            </Moment>\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Moment format=\"MMMM Do YYYY\">\n              {object.attributes.updated_at}\n            </Moment>\n          </td>\n          <td width=\"100\" align=\"center\">\n            <Button\n              variant=\"link\"\n              href={\"/coverages/\" + object.attributes.id}\n              style={{ color: \"black\" }}\n            >\n              {/* <EyeFill /> */}\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <ListStructure\n          objects={this.props.coverages}\n          status={this.props.status}\n          showObjects={this.showObjects}\n          tableHeaders={this.state.tableHeaders}\n          name={this.state.name}\n          plural={this.state.plural}\n          formHelpers={formHelpers}\n          form={(values, handleChange, setFieldValue, errors) =>\n            form(\n              values,\n              handleChange,\n              setFieldValue,\n              errors,\n              this.props.clubs,\n              [],\n              this.props.categories,\n              [],\n              this.props.carriers,\n              this.props.brokers\n            )\n          }\n          postObject={(values) => this.props.dispatch(postCoverage(values))}\n          onPageChange={(e, { activePage }) =>\n            this.props.dispatch(fetchCoverages({ page: activePage }))\n          }\n          defaultActivePage={this.props.page}\n          totalPages={this.props.pages}\n        />\n      </>\n    );\n  }\n}\n\nCoveragesContainer.propTypes = {\n  coverages: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  const { coverages, page, pages, status, error } = state.coverages;\n  const { clubs } = state.clubs;\n  const { categories } = state.categories;\n  const { carriers } = state.carriers;\n  const { brokers } = state.brokers;\n  return {\n    coverages,\n    clubs,\n    categories,\n    carriers,\n    brokers,\n    page,\n    pages,\n    status,\n    error,\n  };\n}\n\nexport default connect(mapStateToProps)(CoveragesContainer);\n"]},"metadata":{},"sourceType":"module"}