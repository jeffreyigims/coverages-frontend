{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport ActionTypes from \"./constants/ActionTypes\";\nimport { fetchSports, postSport, fetchSport } from \"./actions/Actions\";\nimport { createSlice, createAction } from \"@reduxjs/toolkit\";\nconst initialState = {\n  sports: [],\n  status: \"idle\",\n  error: null,\n  selected: null\n};\nconst sportsSlice = createSlice({\n  name: \"sports\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchSports.pending]: state => {\n      state.status = \"loading\";\n    },\n    [fetchSports.fulfilled]: (state, action) => {\n      state.sports = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [fetchSports.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [postSport.fulfilled]: (state, action) => {\n      state.sports = state.sports.concat(action.payload.data);\n    },\n    [postSport.rejected]: (state, action) => {},\n    [fetchSport.pending]: (state, action) => {\n      state.selected = action.payload.data;\n      state.status = \"loading\";\n    },\n    [fetchSport.fulfilled]: (state, action) => {\n      state.selected = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [fetchSport.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    }\n  }\n}); // const reducer = combineReducers({ sportsSlice.reducer });\n\nexport default sportsSlice.reducer;","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/survey/src/reducers.js"],"names":["combineReducers","ActionTypes","fetchSports","postSport","fetchSport","createSlice","createAction","initialState","sports","status","error","selected","sportsSlice","name","reducers","extraReducers","pending","state","fulfilled","action","payload","data","rejected","concat","reducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAmD,mBAAnD;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,kBAA1C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,MAAM,EAAE,MAFW;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,QAAQ,EAAE;AAJS,CAArB;AAMA,MAAMC,WAAW,GAAGP,WAAW,CAAC;AAC9BQ,EAAAA,IAAI,EAAE,QADwB;AAE9BN,EAAAA,YAF8B;AAG9BO,EAAAA,QAAQ,EAAE,EAHoB;AAI9BC,EAAAA,aAAa,EAAE;AACb,KAACb,WAAW,CAACc,OAAb,GAAwBC,KAAD,IAAW;AAChCA,MAAAA,KAAK,CAACR,MAAN,GAAe,SAAf;AACD,KAHY;AAIb,KAACP,WAAW,CAACgB,SAAb,GAAyB,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC1CF,MAAAA,KAAK,CAACT,MAAN,GAAeW,MAAM,CAACC,OAAP,CAAeC,IAA9B;AACAJ,MAAAA,KAAK,CAACR,MAAN,GAAe,WAAf;AACD,KAPY;AAQb,KAACP,WAAW,CAACoB,QAAb,GAAwB,CAACL,KAAD,EAAQE,MAAR,KAAmB;AACzCF,MAAAA,KAAK,CAACP,KAAN,GAAcS,MAAM,CAACT,KAArB;AACAO,MAAAA,KAAK,CAACR,MAAN,GAAe,QAAf;AACD,KAXY;AAYb,KAACN,SAAS,CAACe,SAAX,GAAuB,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACxCF,MAAAA,KAAK,CAACT,MAAN,GAAeS,KAAK,CAACT,MAAN,CAAae,MAAb,CAAoBJ,MAAM,CAACC,OAAP,CAAeC,IAAnC,CAAf;AACD,KAdY;AAeb,KAAClB,SAAS,CAACmB,QAAX,GAAsB,CAACL,KAAD,EAAQE,MAAR,KAAmB,CAAE,CAf9B;AAgBb,KAACf,UAAU,CAACY,OAAZ,GAAsB,CAACC,KAAD,EAAQE,MAAR,KAAmB;AACvCF,MAAAA,KAAK,CAACN,QAAN,GAAiBQ,MAAM,CAACC,OAAP,CAAeC,IAAhC;AACAJ,MAAAA,KAAK,CAACR,MAAN,GAAe,SAAf;AACD,KAnBY;AAoBb,KAACL,UAAU,CAACc,SAAZ,GAAwB,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACzCF,MAAAA,KAAK,CAACN,QAAN,GAAiBQ,MAAM,CAACC,OAAP,CAAeC,IAAhC;AACAJ,MAAAA,KAAK,CAACR,MAAN,GAAe,WAAf;AACD,KAvBY;AAwBb,KAACL,UAAU,CAACkB,QAAZ,GAAuB,CAACL,KAAD,EAAQE,MAAR,KAAmB;AACxCF,MAAAA,KAAK,CAACP,KAAN,GAAcS,MAAM,CAACT,KAArB;AACAO,MAAAA,KAAK,CAACR,MAAN,GAAe,QAAf;AACD;AA3BY;AAJe,CAAD,CAA/B,C,CAmCA;;AAEA,eAAeG,WAAW,CAACY,OAA3B","sourcesContent":["import { combineReducers } from \"redux\";\nimport ActionTypes from \"./constants/ActionTypes\";\nimport { fetchSports, postSport, fetchSport } from \"./actions/Actions\";\nimport { createSlice, createAction } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  sports: [],\n  status: \"idle\",\n  error: null,\n  selected: null,\n};\nconst sportsSlice = createSlice({\n  name: \"sports\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchSports.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [fetchSports.fulfilled]: (state, action) => {\n      state.sports = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [fetchSports.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [postSport.fulfilled]: (state, action) => {\n      state.sports = state.sports.concat(action.payload.data);\n    },\n    [postSport.rejected]: (state, action) => {},\n    [fetchSport.pending]: (state, action) => {\n      state.selected = action.payload.data;\n      state.status = \"loading\";\n    },\n    [fetchSport.fulfilled]: (state, action) => {\n      state.selected = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [fetchSport.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n  },\n});\n\n// const reducer = combineReducers({ sportsSlice.reducer });\n\nexport default sportsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}