{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/Coverages/Front/src/containers/coverages/CoverageDetails.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Form, Col, Row, Card, Spinner } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport Button from \"react-bootstrap/Button\"; // import DatePicker from \"react-bootstrap-date-picker\";\n\nexport default class CoverageDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.map = (values, object) => {\n      var new_values = {};\n\n      for (var key in values) {\n        new_values[key] = object[key];\n      }\n\n      return new_values;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, \"Coverage Details\"), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"row justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, this.props.status === \"loading\" && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: this.props.formHelpers.schema,\n      onSubmit: console.log(\"Update\"),\n      initialValues: this.map(this.props.formHelpers.initialValues, this.props.object.attributes),\n      enableReinitialize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      setFieldValue,\n      values,\n      dirty\n    }) => {\n      var _this$state$object;\n\n      return /*#__PURE__*/React.createElement(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 23\n        }\n      }, \"Club:\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"club\",\n        value: values.club,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 23\n        }\n      }, \"Group:\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"group\",\n        value: values.group,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 23\n        }\n      }, \"Category:\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"category\",\n        value: values.category,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 23\n        }\n      }, \"Sub Category:\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"sub_category\",\n        value: values.sub_category,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }\n      }, \"Carriers:\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\",\n        multiple: true,\n        name: \"carriers\",\n        value: values.carriers,\n        onChange: event => setFieldValue(\"carriers\", Array.from(event.target.selectedOptions, option => Number(option.value))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 23\n        }\n      }, this.showCarriers())), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 23\n        }\n      }, \"Brokers:\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\",\n        multiple: true,\n        name: \"brokers\",\n        value: values.brokers,\n        onChange: event => setFieldValue(\"brokers\", Array.from(event.target.selectedOptions, option => Number(option.value))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 23\n        }\n      }, this.showBrokers()))), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, \"Notes:\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"notes\",\n        defaultValue: (_this$state$object = this.state.object) === null || _this$state$object === void 0 ? void 0 : _this$state$object.attributes.notes,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 23\n        }\n      }, \"Start Date:\")), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 23\n        }\n      }, \"Ending Date:\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"checkbox\",\n        name: \"has_coverage_line\",\n        label: \"Has Coverage Line\",\n        checked: values.has_coverage_line,\n        value: values.has_coverage_line,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"checkbox\",\n        name: \"verified\",\n        label: \"Verified\",\n        checked: values.verified,\n        value: values.verified,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 23\n        }\n      }))), dirty == true ? /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        className: \"btn btn-theme float-right\",\n        variant: \"primary\",\n        style: {\n          marginRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      }, \"Update Coverage\") : \"\");\n    })), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\nCoverageDetails.propTypes = {};","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/containers/coverages/CoverageDetails.js"],"names":["React","connect","PropTypes","Form","Col","Row","Card","Spinner","Formik","Button","CoverageDetails","Component","map","values","object","new_values","key","render","marginTop","props","status","formHelpers","schema","console","log","initialValues","attributes","handleSubmit","handleChange","setFieldValue","dirty","club","group","category","sub_category","carriers","event","Array","from","target","selectedOptions","option","Number","value","showCarriers","brokers","showBrokers","state","notes","has_coverage_line","verified","marginRight","propTypes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Form, Col, Row, Card, Spinner, } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport Button from \"react-bootstrap/Button\";\n// import DatePicker from \"react-bootstrap-date-picker\";\n\nexport default class CoverageDetails extends React.Component {\n  map = (values, object) => {\n    var new_values = {};\n    for (var key in values) {\n      new_values[key] = object[key];\n    }\n    return new_values;\n  };\n\n  render() {\n    return (\n      <>\n        <Card>\n          <Card.Header></Card.Header>\n          <Card.Title style={{ marginTop: \"10px\" }}>\n            Coverage Details\n          </Card.Title>\n          <Card.Body>\n          <Row className=\"row justify-content-center\">\n          {this.props.status === \"loading\" && (\n            <Spinner animation=\"border\" variant=\"primary\" />\n          )}\n        </Row>\n            <Formik\n              validationSchema={this.props.formHelpers.schema}\n              onSubmit={console.log(\"Update\")}\n              initialValues={this.map(\n                this.props.formHelpers.initialValues,\n                this.props.object.attributes\n              )}\n              enableReinitialize={true}\n            >\n              {({\n                handleSubmit,\n                handleChange,\n                setFieldValue,\n                values,\n                dirty,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                  <Row>\n                    <Form.Group as={Col}>\n                      <Form.Label>Club:</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"club\"\n                        value={values.club}\n                        disabled\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                      <Form.Label>Group:</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"group\"\n                        value={values.group}\n                        disabled\n                      />\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col}>\n                      <Form.Label>Category:</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"category\"\n                        value={values.category}\n                        disabled\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                      <Form.Label>Sub Category:</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"sub_category\"\n                        value={values.sub_category}\n                        disabled\n                      />\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col}>\n                      <Form.Label>Carriers:</Form.Label>\n                      <Form.Control\n                        as=\"select\"\n                        multiple\n                        name=\"carriers\"\n                        value={values.carriers}\n                        onChange={(event) =>\n                          setFieldValue(\n                            \"carriers\",\n                            Array.from(event.target.selectedOptions, (option) =>\n                              Number(option.value)\n                            )\n                          )\n                        }\n                      >\n                        {this.showCarriers()}\n                      </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                      <Form.Label>Brokers:</Form.Label>\n                      <Form.Control\n                        as=\"select\"\n                        multiple\n                        name=\"brokers\"\n                        value={values.brokers}\n                        onChange={(event) =>\n                          setFieldValue(\n                            \"brokers\",\n                            Array.from(event.target.selectedOptions, (option) =>\n                              Number(option.value)\n                            )\n                          )\n                        }\n                      >\n                        {this.showBrokers()}\n                      </Form.Control>\n                    </Form.Group>\n                  </Row>\n                  <Form.Group>\n                    <Form.Label>Notes:</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"notes\"\n                      defaultValue={this.state.object?.attributes.notes}\n                      onChange={handleChange}\n                    />\n                  </Form.Group>\n                  <Row>\n                    <Form.Group as={Col}>\n                      <Form.Label>{\"Start Date:\"}</Form.Label>\n                      {/* <DatePicker\n                        name=\"start_date\"\n                        selected={values.start_date}\n                        onChange={(val) => setFieldValue(\"start_date\", val)}\n                      /> */}\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                      <Form.Label>{\"Ending Date:\"}</Form.Label>\n                      {/* <DatePicker\n                        name=\"end_date\"\n                        selected={values.end_date}\n                        onChange={(val) => setFieldValue(\"end_date\", val)}\n                      /> */}\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group as={Col}>\n                      <Form.Check\n                        type=\"checkbox\"\n                        name=\"has_coverage_line\"\n                        label={\"Has Coverage Line\"}\n                        checked={values.has_coverage_line}\n                        value={values.has_coverage_line}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                      <Form.Check\n                        type=\"checkbox\"\n                        name=\"verified\"\n                        label={\"Verified\"}\n                        checked={values.verified}\n                        value={values.verified}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                  </Row>\n                  {dirty == true ? (\n                    <Button\n                      type=\"submit\"\n                      className=\"btn btn-theme float-right\"\n                      variant=\"primary\"\n                      style={{ marginRight: \"10px\" }}\n                    >\n                      Update Coverage\n                    </Button>\n                  ) : (\n                    \"\"\n                  )}\n                </Form>\n              )}\n            </Formik>\n          </Card.Body>\n          <Card.Footer></Card.Footer>\n        </Card>\n      </>\n    );\n  }\n}\n\nCoverageDetails.propTypes = {};\n"]},"metadata":{},"sourceType":"module"}