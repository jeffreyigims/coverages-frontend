{"ast":null,"code":"import { runAjax } from \"../utils/APIUtils\";\nimport { createAsyncThunk, createSlice, createReducer } from \"@reduxjs/toolkit\";\nconst name = \"sports\";\nconst link = \"/sports\";\nexport const fetchSports = createAsyncThunk(name.concat(\"/fetch_sports\"), async () => {\n  const response = await runAjax(link.concat(\".json\"), \"GET\", {});\n  return response;\n});\nexport const postSport = createAsyncThunk(name.concat(\"/postSport\"), async values => {\n  const response = await runAjax(link.concat(\".json\"), \"POST\", {\n    sport: values\n  });\n  return response;\n});\nexport const fetchSport = createAsyncThunk(name.concat(\"/fetchSport\"), async id => {\n  const response = await runAjax(link.concat(\"/\" + id + \".json\"), \"GET\", {});\n  return response;\n});\nexport const updateSport = createAsyncThunk(name.concat(\"/updateSport\"), async params => {\n  const response = await runAjax(link.concat(\"/\" + params.id + \".json\"), \"PATCH\", {\n    sport: params.values\n  });\n  return response;\n});\nexport const deleteSport = createAsyncThunk(name.concat(\"/deleteSport\"), async id => {\n  await runAjax(link.concat(\"/\" + id + \".json\"), \"DELETE\", {});\n  return id;\n});\n\nfunction createTableSlice(name = \"\") {\n  var j = `fetch_${name}/fulfilled`.toString();\n  console.log(j);\n  return createSlice({\n    name: name,\n    initialState: {\n      name: [],\n      status: \"idle\",\n      error: null,\n      selected: null\n    },\n    reducers: {\n      j: (state, action) => {\n        console.log(\"HERE\");\n        state[name] = action.payload.data;\n        state.status = \"succeeded\";\n      },\n      \"fetch_sports/pending\": (state, action) => {\n        console.log(j);\n        state.status = \"loading\";\n      }\n    },\n    extraReducers: {\n      \"fetchSports/pending\": (state, action) => {\n        state.status = \"loading\";\n      },\n      \"fetchSports/fulfilled\": (state, action) => {\n        console.log(\"HERE\");\n        state[name] = action.payload.data;\n        state.status = \"succeeded\";\n      },\n      [fetchSports.rejected]: (state, action) => {\n        state.error = action.error;\n        state.status = \"failed\";\n      },\n      [postSport.fulfilled]: (state, action) => {\n        state[name].push(action.payload.data);\n      },\n      [postSport.rejected]: (state, action) => {},\n      [fetchSport.fulfilled]: (state, action) => {\n        state.selected = action.payload.data;\n        state.status = \"succeeded\";\n      },\n      [fetchSport.rejected]: (state, action) => {\n        state.error = action.error;\n        state.status = \"failed\";\n      },\n      [updateSport.fulfilled]: (state, action) => {\n        state.selected = action.payload.data;\n        state.status = \"succeeded\";\n      },\n      [updateSport.rejected]: (state, action) => {\n        state.error = action.error;\n        state.status = \"failed\";\n      },\n      [deleteSport.rejected]: (state, action) => {\n        state.status = \"failed\";\n      },\n      [deleteSport.fulfilled]: (state, action) => {\n        state.status = \"succeeded\";\n      }\n    }\n  });\n} // let initialState = {\n//   name: [],\n//   status: \"idle\",\n//   error: null,\n//   selected: null,\n// },\n// function createTableReducer(name = \"\") {\n//   return function reducer(state = initialState, action) {\n//     switch (action.type) {\n//       case `fetch_${name}/fulfilled`:\n//         return Object.assign({}, state, {\n//           isFetching: true,\n//           didInvalidate: false\n//         })\n//       default: \n//       return state\n//     }\n//   };\n// }\n// var neww = createTableReducer(\"sports\");\n\n\nexport const sportsSlice = createTableSlice(\"sports\");","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/survey/src/data/sports.js"],"names":["runAjax","createAsyncThunk","createSlice","createReducer","name","link","fetchSports","concat","response","postSport","values","sport","fetchSport","id","updateSport","params","deleteSport","createTableSlice","j","toString","console","log","initialState","status","error","selected","reducers","state","action","payload","data","extraReducers","rejected","fulfilled","push","sportsSlice"],"mappings":"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","sourcesContent":["import { runAjax } from \"../utils/APIUtils\";\nimport { createAsyncThunk, createSlice, createReducer } from \"@reduxjs/toolkit\";\n\nconst name = \"sports\";\nconst link = \"/sports\";\n\nexport const fetchSports = createAsyncThunk(\n  name.concat(\"/fetch_sports\"),\n  async () => {\n    const response = await runAjax(link.concat(\".json\"), \"GET\", {});\n    return response;\n  }\n);\n\nexport const postSport = createAsyncThunk(\n  name.concat(\"/postSport\"),\n  async (values) => {\n    const response = await runAjax(link.concat(\".json\"), \"POST\", {\n      sport: values,\n    });\n    return response;\n  }\n);\n\nexport const fetchSport = createAsyncThunk(\n  name.concat(\"/fetchSport\"),\n  async (id) => {\n    const response = await runAjax(link.concat(\"/\" + id + \".json\"), \"GET\", {});\n    return response;\n  }\n);\n\nexport const updateSport = createAsyncThunk(\n  name.concat(\"/updateSport\"),\n  async (params) => {\n    const response = await runAjax(\n      link.concat(\"/\" + params.id + \".json\"),\n      \"PATCH\",\n      { sport: params.values }\n    );\n    return response;\n  }\n);\n\nexport const deleteSport = createAsyncThunk(\n  name.concat(\"/deleteSport\"),\n  async (id) => {\n    await runAjax(link.concat(\"/\" + id + \".json\"), \"DELETE\", {});\n    return id;\n  }\n);\n\nfunction createTableSlice(name = \"\") {\n  var j = `fetch_${name}/fulfilled`.toString();\n  console.log(j);\n  return createSlice({\n    name: name,\n    initialState: {\n      name: [],\n      status: \"idle\",\n      error: null,\n      selected: null,\n    },\n    reducers: {\n      j: (state, action) => {\n        console.log(\"HERE\");\n        state[name] = action.payload.data;\n        state.status = \"succeeded\";\n      },\n      \"fetch_sports/pending\": (state, action) => {\n        console.log(j);\n        state.status = \"loading\";\n      },\n    },\n    extraReducers: {\n      \"fetchSports/pending\": (state, action) => {\n        state.status = \"loading\";\n      },\n      \"fetchSports/fulfilled\": (state, action) => {\n        console.log(\"HERE\");\n        state[name] = action.payload.data;\n        state.status = \"succeeded\";\n      },\n      [fetchSports.rejected]: (state, action) => {\n        state.error = action.error;\n        state.status = \"failed\";\n      },\n      [postSport.fulfilled]: (state, action) => {\n        state[name].push(action.payload.data);\n      },\n      [postSport.rejected]: (state, action) => {},\n      [fetchSport.fulfilled]: (state, action) => {\n        state.selected = action.payload.data;\n        state.status = \"succeeded\";\n      },\n      [fetchSport.rejected]: (state, action) => {\n        state.error = action.error;\n        state.status = \"failed\";\n      },\n      [updateSport.fulfilled]: (state, action) => {\n        state.selected = action.payload.data;\n        state.status = \"succeeded\";\n      },\n      [updateSport.rejected]: (state, action) => {\n        state.error = action.error;\n        state.status = \"failed\";\n      },\n      [deleteSport.rejected]: (state, action) => {\n        state.status = \"failed\";\n      },\n      [deleteSport.fulfilled]: (state, action) => {\n        state.status = \"succeeded\";\n      },\n    },\n  });\n}\n\n// let initialState = {\n//   name: [],\n//   status: \"idle\",\n//   error: null,\n//   selected: null,\n// },\n\n// function createTableReducer(name = \"\") {\n//   return function reducer(state = initialState, action) {\n//     switch (action.type) {\n//       case `fetch_${name}/fulfilled`:\n//         return Object.assign({}, state, {\n//           isFetching: true,\n//           didInvalidate: false\n//         })\n//       default: \n//       return state\n//     }\n//   };\n// }\n\n// var neww = createTableReducer(\"sports\");\nexport const sportsSlice = createTableSlice(\"sports\");\n"]},"metadata":{},"sourceType":"module"}