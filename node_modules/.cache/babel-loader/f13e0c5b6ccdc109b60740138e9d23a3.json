{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/Coverages/Front/src/containers/coverages/CoverageDetails.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Col, Row, Card, Spinner } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport Button from \"react-bootstrap/Button\"; // import DatePicker from \"react-bootstrap-date-picker\";\n\nimport { objectOptionsID } from \"../../utils/Forms\";\nexport default class CoverageDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.initialValues = coverage => {\n      var values = {};\n      values[\"notes\"] = coverage.notes;\n      values[\"start_date\"] = coverage.start_date;\n      values[\"end_date\"] = coverage.end_date;\n      values[\"has_coverage_line\"] = coverage.has_coverage_line;\n      values[\"verified\"] = coverage.verified;\n      new_values[\"carriers\"] = coverage.coverage_carriers.map(coverage_carrier => coverage_carrier.data.attributes.carrier_id);\n      new_values[\"brokers\"] = coverage.coverage_brokers.map(coverage_brokers => coverage_brokers.data.attributes.broker_id);\n      return values;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, \"Coverage Details\"), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"row justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, this.props.status === \"loading\" && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    })), this.props.status === \"succeeded\" && /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: this.props.formHelpers.schema,\n      onSubmit: console.log(\"Update\"),\n      initialValues: initialValues(this.props.object.attributes),\n      enableReinitialize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      setFieldValue,\n      values,\n      dirty\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, \"Club:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"club\",\n      value: this.props.object.attributes.club.name,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, \"Group:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"group\",\n      value: this.props.object.attributes.group.name,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, \"Category:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"category\",\n      value: this.props.object.attributes.category.name,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, \"Sub Category:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"sub_category\",\n      value: this.props.object.attributes.sub_category.name,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, \"Carriers:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      name: \"carriers\",\n      value: values.carriers,\n      onChange: event => setFieldValue(\"carriers\", Array.from(event.target.selectedOptions, option => Number(option.value))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, objectOptionsID(this.props.carriers))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, \"Brokers:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      name: \"brokers\",\n      value: values.brokers,\n      onChange: event => setFieldValue(\"brokers\", Array.from(event.target.selectedOptions, option => Number(option.value))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, objectOptionsID(this.props.brokers)))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 23\n      }\n    }, \"Notes:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"notes\",\n      value: values.notes,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, \"Start Date:\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, \"Ending Date:\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      name: \"has_coverage_line\",\n      label: \"Has Coverage Line\",\n      checked: values.has_coverage_line,\n      value: values.has_coverage_line,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      name: \"verified\",\n      label: \"Verified\",\n      checked: values.verified,\n      value: values.verified,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }))), dirty == true ? /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-theme float-right\",\n      variant: \"primary\",\n      style: {\n        marginRight: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 23\n      }\n    }, \"Update Coverage\") : \"\"))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\nCoverageDetails.propTypes = {};","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/containers/coverages/CoverageDetails.js"],"names":["React","PropTypes","Form","Col","Row","Card","Spinner","Formik","Button","objectOptionsID","CoverageDetails","Component","initialValues","coverage","values","notes","start_date","end_date","has_coverage_line","verified","new_values","coverage_carriers","map","coverage_carrier","data","attributes","carrier_id","coverage_brokers","broker_id","render","marginTop","props","status","formHelpers","schema","console","log","object","handleSubmit","handleChange","setFieldValue","dirty","club","name","group","category","sub_category","carriers","event","Array","from","target","selectedOptions","option","Number","value","brokers","marginRight","propTypes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Col, Row, Card, Spinner } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport Button from \"react-bootstrap/Button\";\n// import DatePicker from \"react-bootstrap-date-picker\";\nimport { objectOptionsID } from \"../../utils/Forms\";\n\nexport default class CoverageDetails extends React.Component {\n  initialValues = (coverage) => {\n    var values = {};\n    values[\"notes\"] = coverage.notes;\n    values[\"start_date\"] = coverage.start_date;\n    values[\"end_date\"] = coverage.end_date;\n    values[\"has_coverage_line\"] = coverage.has_coverage_line;\n    values[\"verified\"] = coverage.verified;\n    new_values[\"carriers\"] = coverage.coverage_carriers.map(\n      (coverage_carrier) => coverage_carrier.data.attributes.carrier_id\n    );\n    new_values[\"brokers\"] = coverage.coverage_brokers.map(\n      (coverage_brokers) => coverage_brokers.data.attributes.broker_id\n    );\n    return values;\n  };\n\n  render() {\n    return (\n      <>\n        <Card>\n          <Card.Header></Card.Header>\n          <Card.Title style={{ marginTop: \"10px\" }}>\n            Coverage Details\n          </Card.Title>\n          <Card.Body>\n            <Row className=\"row justify-content-center\">\n              {this.props.status === \"loading\" && (\n                <Spinner animation=\"border\" variant=\"primary\" />\n              )}\n            </Row>\n            {this.props.status === \"succeeded\" && (\n              <Formik\n                validationSchema={this.props.formHelpers.schema}\n                onSubmit={console.log(\"Update\")}\n                initialValues={initialValues(this.props.object.attributes)}\n                enableReinitialize={true}\n              >\n                {({\n                  handleSubmit,\n                  handleChange,\n                  setFieldValue,\n                  values,\n                  dirty,\n                }) => (\n                  <Form noValidate onSubmit={handleSubmit}>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Club:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"club\"\n                          value={this.props.object.attributes.club.name}\n                          disabled\n                        />\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Group:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"group\"\n                          value={this.props.object.attributes.group.name}\n                          disabled\n                        />\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Category:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"category\"\n                          value={this.props.object.attributes.category.name}\n                          disabled\n                        />\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Sub Category:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"sub_category\"\n                          value={this.props.object.attributes.sub_category.name}\n                          disabled\n                        />\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Carriers:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          multiple\n                          name=\"carriers\"\n                          value={values.carriers}\n                          onChange={(event) =>\n                            setFieldValue(\n                              \"carriers\",\n                              Array.from(\n                                event.target.selectedOptions,\n                                (option) => Number(option.value)\n                              )\n                            )\n                          }\n                        >\n                          {objectOptionsID(this.props.carriers)}\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Brokers:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          multiple\n                          name=\"brokers\"\n                          value={values.brokers}\n                          onChange={(event) =>\n                            setFieldValue(\n                              \"brokers\",\n                              Array.from(\n                                event.target.selectedOptions,\n                                (option) => Number(option.value)\n                              )\n                            )\n                          }\n                        >\n                          {objectOptionsID(this.props.brokers)}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Form.Group>\n                      <Form.Label>Notes:</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"notes\"\n                        value={values.notes}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>{\"Start Date:\"}</Form.Label>\n                        {/* <DatePicker\n                        name=\"start_date\"\n                        selected={values.start_date}\n                        onChange={(val) => setFieldValue(\"start_date\", val)}\n                      /> */}\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>{\"Ending Date:\"}</Form.Label>\n                        {/* <DatePicker\n                        name=\"end_date\"\n                        selected={values.end_date}\n                        onChange={(val) => setFieldValue(\"end_date\", val)}\n                      /> */}\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Check\n                          type=\"checkbox\"\n                          name=\"has_coverage_line\"\n                          label={\"Has Coverage Line\"}\n                          checked={values.has_coverage_line}\n                          value={values.has_coverage_line}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Check\n                          type=\"checkbox\"\n                          name=\"verified\"\n                          label={\"Verified\"}\n                          checked={values.verified}\n                          value={values.verified}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n                    </Row>\n                    {dirty == true ? (\n                      <Button\n                        type=\"submit\"\n                        className=\"btn btn-theme float-right\"\n                        variant=\"primary\"\n                        style={{ marginRight: \"10px\" }}\n                      >\n                        Update Coverage\n                      </Button>\n                    ) : (\n                      \"\"\n                    )}\n                  </Form>\n                )}\n              </Formik>\n            )}\n          </Card.Body>\n          <Card.Footer></Card.Footer>\n        </Card>\n      </>\n    );\n  }\n}\n\nCoverageDetails.propTypes = {};\n"]},"metadata":{},"sourceType":"module"}