{"ast":null,"code":"function resolve(response) {\n  return response;\n}\n\nfunction reject(response) {\n  return response;\n} // export async function runAjax(link, method = \"GET\", data = {}) {\n//   var promiseObject = new Promise(async function (resolve, reject) {\n//     let options;\n//     if (method === \"GET\") {\n//       options = {\n//         method: \"GET\",\n//       };\n//     } else {\n//       options = {\n//         method: method,\n//         body: JSON.stringify(data),\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         credentials: \"same-origin\",\n//       };\n//     }\n//     let response = await fetch(link, options);\n//     if (!response.ok) {\n//       return reject(response);\n//     }\n//     // if (method === \"DELETE\") {\n//     //   return \"Success\";\n//     // }\n//     console.log()\n//     return resolve(response.json());\n//   });\n// }\n\n\nexport function runAjax(link, method = \"GET\", data = {}) {\n  var promiseObject = new Promise(async function (resolve, reject) {\n    let options;\n\n    if (method == \"GET\") {\n      options = {\n        method: method\n      };\n    } else {\n      options = {\n        method: method,\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n      };\n    }\n\n    fetch(link, options).then(response => {\n      if (!response.ok) {\n        throw response;\n      }\n\n      return reject(response.json());\n    }).then(result => {\n      callback(result);\n    }).catch(error => {\n      if (error.statusText) {\n        reject(response);\n      }\n\n      callback(error);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/survey/src/utils/APIUtils.js"],"names":["resolve","response","reject","runAjax","link","method","data","promiseObject","Promise","options","body","JSON","stringify","headers","credentials","fetch","then","ok","json","result","callback","catch","error","statusText"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,QAAjB,EAA2B;AACzB,SAAOA,QAAP;AACD;;AAED,SAASC,MAAT,CAAgBD,QAAhB,EAA0B;AACxB,SAAOA,QAAP;AACD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,SAASE,OAAT,CAAiBC,IAAjB,EAAuBC,MAAM,GAAG,KAAhC,EAAuCC,IAAI,GAAG,EAA9C,EAAkD;AACvD,MAAIC,aAAa,GAAG,IAAIC,OAAJ,CAAY,gBAAgBR,OAAhB,EAAyBE,MAAzB,EAAiC;AAC/D,QAAIO,OAAJ;;AACA,QAAIJ,MAAM,IAAI,KAAd,EAAqB;AACnBI,MAAAA,OAAO,GAAG;AAAEJ,QAAAA,MAAM,EAAEA;AAAV,OAAV;AACD,KAFD,MAEO;AACLI,MAAAA,OAAO,GAAG;AACRJ,QAAAA,MAAM,EAAEA,MADA;AAERK,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFE;AAGRO,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAHD;AAMRC,QAAAA,WAAW,EAAE;AANL,OAAV;AAQD;;AAEDC,IAAAA,KAAK,CAACX,IAAD,EAAOK,OAAP,CAAL,CACGO,IADH,CACSf,QAAD,IAAc;AAClB,UAAI,CAACA,QAAQ,CAACgB,EAAd,EAAkB;AAChB,cAAMhB,QAAN;AACD;;AACD,aAAOC,MAAM,CAACD,QAAQ,CAACiB,IAAT,EAAD,CAAb;AACD,KANH,EAOGF,IAPH,CAOSG,MAAD,IAAY;AAChBC,MAAAA,QAAQ,CAACD,MAAD,CAAR;AACD,KATH,EAUGE,KAVH,CAUUC,KAAD,IAAW;AAChB,UAAIA,KAAK,CAACC,UAAV,EAAsB;AACpBrB,QAAAA,MAAM,CAACD,QAAD,CAAN;AACD;;AACDmB,MAAAA,QAAQ,CAACE,KAAD,CAAR;AACD,KAfH;AAgBD,GA/BmB,CAApB;AAgCD","sourcesContent":["function resolve(response) {\n  return response;\n}\n\nfunction reject(response) {\n  return response;\n}\n// export async function runAjax(link, method = \"GET\", data = {}) {\n//   var promiseObject = new Promise(async function (resolve, reject) {\n//     let options;\n//     if (method === \"GET\") {\n//       options = {\n//         method: \"GET\",\n//       };\n//     } else {\n//       options = {\n//         method: method,\n//         body: JSON.stringify(data),\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         credentials: \"same-origin\",\n//       };\n//     }\n\n//     let response = await fetch(link, options);\n\n//     if (!response.ok) {\n//       return reject(response);\n//     }\n//     // if (method === \"DELETE\") {\n//     //   return \"Success\";\n//     // }\n//     console.log()\n//     return resolve(response.json());\n//   });\n// }\n\nexport function runAjax(link, method = \"GET\", data = {}) {\n  var promiseObject = new Promise(async function (resolve, reject) {\n    let options;\n    if (method == \"GET\") {\n      options = { method: method };\n    } else {\n      options = {\n        method: method,\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"same-origin\",\n      };\n    }\n\n    fetch(link, options)\n      .then((response) => {\n        if (!response.ok) {\n          throw response;\n        }\n        return reject(response.json());\n      })\n      .then((result) => {\n        callback(result);\n      })\n      .catch((error) => {\n        if (error.statusText) {\n          reject(response)\n        }\n        callback(error);\n      });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}