{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/Coverages/Front/src/containers/coverage_wizard/CoverageWizardContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Col, Row, Card, Spinner } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport { TrashFill } from \"react-bootstrap-icons\";\nimport { objectOptionsID, objectOptions, objectDataOptions, objectGroupOptions } from \"../../utils/Forms\";\nimport { coverage_wizard as formHelpers } from \"../../utils/Schemas\"; // import { clubForm as form } from \"../../utils/Forms\";\n\nimport { fetchSports, fetchLeagues, fetchClubs, fetchCategories, fetchCarriers, fetchBrokers, postCoverageAssociations } from \"../../actions/Actions\";\n\nclass CoverageWizardContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      coverages: []\n    };\n\n    this.status = statuses => {\n      const status = \"succeeded\";\n\n      for (var key in statuses) {\n        if (statuses[key] === \"failed\") {\n          return \"failed\";\n        } else if (statuses[key] === \"loading\") {\n          return \"loading\";\n        } else if (statuses[key] === \"idle\") {\n          return \"idle\";\n        }\n      }\n\n      return status;\n    };\n\n    this.clubOptions = league => {\n      const league_id = league === null || league === void 0 ? void 0 : league.data.attributes.id;\n      let clubs = this.props.clubs.filter(club => club.attributes.league_id === league_id);\n      return objectOptions(clubs);\n    };\n\n    this.handleCreate = values => {\n      let coverage = {\n        sport: this.props.sports[values.sport_index],\n        league: this.props.sports[values.sport_index].attributes.leagues[values.league_index].data,\n        club: this.props.clubs[values.club_index],\n        club_group: this.props.clubs[values.club_index].attributes.club_groups[values.group_index].data,\n        category: this.props.categories[values.category_index],\n        sub_category: this.props.categories[values.category_index].attributes.sub_categories[values.sub_category_index].data,\n        carriers: values.carriers,\n        brokers: values.brokers,\n        notes: values.notes,\n        start_date: values.start_date,\n        end_date: values.end_date,\n        has_coverage_line: values.has_coverage_line,\n        verified: values.verified\n      };\n      this.setState({\n        coverages: this.state.coverages.concat(coverage)\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.state.coverages.map(coverage => {\n        const new_object = {\n          club_group_id: coverage.club_group.attributes.id,\n          sub_category_id: coverage.sub_category.attributes.id,\n          notes: coverage.notes,\n          start_date: coverage.start_date,\n          end_date: coverage.end_date,\n          has_coverage_line: coverage.has_coverage_line,\n          verified: coverage.verified\n        };\n        let carriers = values.carriers.map(carrier_index => this.props.carriers[carrier_index].attributes.id);\n        let brokers = values.brokers.map(broker_index => this.props.brokers[broker_index].attributes.id);\n        this.props.dispatch(postCoverageAssociations(new_object, carriers, brokers));\n      });\n    };\n\n    this.showObjects = objects => {\n      return objects.map((object, index) => {\n        var _this$props$carriers$, _this$props$brokers$o;\n\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }\n        }, object.club_group.attributes.group.name), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }\n        }, object.category.attributes.name), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }\n        }, object.sub_category.attributes.name), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }\n        }, object.carriers.length > 1 ? \"Multiple\" : ((_this$props$carriers$ = this.props.carriers[object.carriers[0]]) === null || _this$props$carriers$ === void 0 ? void 0 : _this$props$carriers$.attributes.name) || \"Unknown\"), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }\n        }, object.brokers.length > 1 ? \"Multiple\" : ((_this$props$brokers$o = this.props.brokers[object.brokers[0]]) === null || _this$props$brokers$o === void 0 ? void 0 : _this$props$brokers$o.attributes.company.name) || \"Unknown\", \" \"), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"100\",\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"link\",\n          onClick: () => {\n            this.setState({\n              coverages: this.state.coverages.filter((coverage, i) => i != index)\n            });\n          },\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(TrashFill, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }\n        }))));\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchSports()); // this.props.dispatch(fetchLeagues());\n\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchCategories());\n    this.props.dispatch(fetchCarriers());\n    this.props.dispatch(fetchBrokers());\n  }\n\n  render() {\n    const status = this.status(this.props.status);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, \"Add Coverages\"), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"row justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, status === \"loading\" && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    })), status === \"succeeded\" && /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: formHelpers.schema,\n      onSubmit: values => this.handleCreate(values),\n      initialValues: formHelpers.initialValues,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      setFieldValue,\n      values,\n      dirty\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, \"Sport:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"sport_index\",\n      value: values.sport_index,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, objectOptions(this.props.sports)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, \"League:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"league_index\",\n      value: values.league_index,\n      onChange: e => {\n        handleChange(e);\n        setFieldValue(\"club_index\", 0);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }, objectDataOptions(this.props.sports[values.sport_index].attributes.leagues)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, \"Club:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"club_index\",\n      value: values.club_index,\n      onChange: e => {\n        handleChange(e);\n        setFieldValue(\"group_index\", 0);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }, this.clubOptions(this.props.sports[values.sport_index].attributes.leagues[values.league_index]))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, \"Group:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"group_index\",\n      value: values.group_index,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }, objectGroupOptions(this.props.clubs[values.club_index].attributes.club_groups)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }, \"Category:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"category_index\",\n      value: values.category_index,\n      onChange: e => {\n        handleChange(e);\n        setFieldValue(\"sub_category_index\", 0);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 25\n      }\n    }, objectOptions(this.props.categories))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, \"Sub Category:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"sub_category_index\",\n      value: values.sub_category_index,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }\n    }, objectDataOptions(this.props.categories[values.category_index].attributes.sub_categories)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 25\n      }\n    }, \"Carriers:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      name: \"carriers\",\n      value: values.carriers,\n      onChange: event => setFieldValue(\"carriers\", Array.from(event.target.selectedOptions, option => Number(option.value))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 25\n      }\n    }, objectOptions(this.props.carriers))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 25\n      }\n    }, \"Brokers:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      name: \"brokers\",\n      value: values.brokers,\n      onChange: event => setFieldValue(\"brokers\", Array.from(event.target.selectedOptions, option => Number(option.value))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 25\n      }\n    }, objectOptions(this.props.brokers)))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 23\n      }\n    }, \"Notes:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"notes\",\n      value: values.notes,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 25\n      }\n    }, \"Start Date:\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 25\n      }\n    }, \"Ending Date:\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      name: \"has_coverage_line\",\n      label: \"Has Coverage Line\",\n      checked: values.has_coverage_line,\n      value: values.has_coverage_line,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      name: \"verified\",\n      label: \"Verified\",\n      checked: values.verified,\n      value: values.verified,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-theme float-right\",\n      variant: \"primary\",\n      style: {\n        marginRight: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 21\n      }\n    }, \"Add Coverage\")))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }\n    }, \"Prepared Coverages\"), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(GeneralTable, {\n      tableHeaders: [\"Group\", \"Category\", \"Sub\", \"Carrier\", \"Broker\", \"Remove\"],\n      showObjects: this.showObjects,\n      objects: this.state.coverages,\n      status: \"succeeded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }\n    }, this.state.coverages.length > 0 && /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleSubmit,\n      className: \"btn btn-theme float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }\n    }, \"Submit Coverages\"))));\n  }\n\n}\n\nCoverageWizardContainer.propTypes = {};\n\nfunction mapStateToProps(state) {\n  const {\n    sports\n  } = state.sports;\n  const sportsStatus = state.sports.status;\n  const {\n    clubs\n  } = state.clubs;\n  const clubsStatus = state.clubs.status;\n  const {\n    categories\n  } = state.categories;\n  const categoriesStatus = state.categories.status;\n  const {\n    carriers\n  } = state.carriers;\n  const carriersStatus = state.carriers.status;\n  const {\n    brokers\n  } = state.brokers;\n  const brokersStatus = state.brokers.status;\n  return {\n    status: {\n      sportsStatus,\n      clubsStatus,\n      categoriesStatus,\n      carriersStatus,\n      brokersStatus\n    },\n    sports,\n    clubs,\n    categories,\n    carriers,\n    brokers\n  };\n}\n\nexport default connect(mapStateToProps)(CoverageWizardContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/containers/coverage_wizard/CoverageWizardContainer.js"],"names":["React","Component","connect","GeneralTable","PropTypes","Button","Form","Col","Row","Card","Spinner","Formik","TrashFill","objectOptionsID","objectOptions","objectDataOptions","objectGroupOptions","coverage_wizard","formHelpers","fetchSports","fetchLeagues","fetchClubs","fetchCategories","fetchCarriers","fetchBrokers","postCoverageAssociations","CoverageWizardContainer","state","coverages","status","statuses","key","clubOptions","league","league_id","data","attributes","id","clubs","props","filter","club","handleCreate","values","coverage","sport","sports","sport_index","leagues","league_index","club_index","club_group","club_groups","group_index","category","categories","category_index","sub_category","sub_categories","sub_category_index","carriers","brokers","notes","start_date","end_date","has_coverage_line","verified","setState","concat","handleSubmit","map","new_object","club_group_id","sub_category_id","carrier_index","broker_index","dispatch","showObjects","objects","object","index","group","name","length","company","i","color","componentDidMount","render","marginTop","schema","initialValues","handleChange","setFieldValue","dirty","e","event","Array","from","target","selectedOptions","option","Number","value","marginRight","propTypes","mapStateToProps","sportsStatus","clubsStatus","categoriesStatus","carriersStatus","brokersStatus"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Col, Row, Card, Spinner } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport { TrashFill } from \"react-bootstrap-icons\";\nimport {\n  objectOptionsID,\n  objectOptions,\n  objectDataOptions,\n  objectGroupOptions,\n} from \"../../utils/Forms\";\nimport { coverage_wizard as formHelpers } from \"../../utils/Schemas\";\n// import { clubForm as form } from \"../../utils/Forms\";\nimport {\n  fetchSports,\n  fetchLeagues,\n  fetchClubs,\n  fetchCategories,\n  fetchCarriers,\n  fetchBrokers,\n  postCoverageAssociations,\n} from \"../../actions/Actions\";\n\nclass CoverageWizardContainer extends Component {\n  state = {\n    coverages: [],\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchSports());\n    // this.props.dispatch(fetchLeagues());\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchCategories());\n    this.props.dispatch(fetchCarriers());\n    this.props.dispatch(fetchBrokers());\n  }\n\n  status = (statuses) => {\n    const status = \"succeeded\";\n    for (var key in statuses) {\n      if (statuses[key] === \"failed\") {\n        return \"failed\";\n      } else if (statuses[key] === \"loading\") {\n        return \"loading\";\n      } else if (statuses[key] === \"idle\") {\n        return \"idle\";\n      }\n    }\n    return status;\n  };\n\n  clubOptions = (league) => {\n    const league_id = league?.data.attributes.id;\n    let clubs = this.props.clubs.filter(\n      (club) => club.attributes.league_id === league_id\n    );\n    return objectOptions(clubs);\n  };\n\n  handleCreate = (values) => {\n    let coverage = {\n      sport: this.props.sports[values.sport_index],\n      league: this.props.sports[values.sport_index].attributes.leagues[\n        values.league_index\n      ].data,\n      club: this.props.clubs[values.club_index],\n      club_group: this.props.clubs[values.club_index].attributes.club_groups[\n        values.group_index\n      ].data,\n      category: this.props.categories[values.category_index],\n      sub_category: this.props.categories[values.category_index].attributes\n        .sub_categories[values.sub_category_index].data,\n      carriers: values.carriers,\n      brokers: values.brokers,\n      notes: values.notes,\n      start_date: values.start_date,\n      end_date: values.end_date,\n      has_coverage_line: values.has_coverage_line,\n      verified: values.verified,\n    };\n    this.setState({ coverages: this.state.coverages.concat(coverage) });\n  };\n\n  handleSubmit = () => {\n    this.state.coverages.map((coverage) => {\n      const new_object = {\n        club_group_id: coverage.club_group.attributes.id,\n        sub_category_id: coverage.sub_category.attributes.id,\n        notes: coverage.notes,\n        start_date: coverage.start_date,\n        end_date: coverage.end_date,\n        has_coverage_line: coverage.has_coverage_line,\n        verified: coverage.verified,\n      };\n      let carriers = values.carriers.map(\n        (carrier_index) => this.props.carriers[carrier_index].attributes.id\n      );\n      let brokers = values.brokers.map(\n        (broker_index) => this.props.brokers[broker_index].attributes.id\n      );\n      this.props.dispatch(\n        postCoverageAssociations(new_object, carriers, brokers)\n      );\n    });\n  };\n\n  showObjects = (objects) => {\n    return objects.map((object, index) => {\n      return (\n        <tr key={index}>\n          <td width=\"200\" align=\"left\">\n            {object.club_group.attributes.group.name}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.category.attributes.name}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.sub_category.attributes.name}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.carriers.length > 1\n              ? \"Multiple\"\n              : this.props.carriers[object.carriers[0]]?.attributes.name ||\n                \"Unknown\"}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.brokers.length > 1\n              ? \"Multiple\"\n              : this.props.brokers[object.brokers[0]]?.attributes.company\n                  .name || \"Unknown\"}{\" \"}\n          </td>\n          <td width=\"100\" align=\"center\">\n            <Button\n              variant=\"link\"\n              onClick={() => {\n                this.setState({\n                  coverages: this.state.coverages.filter(\n                    (coverage, i) => i != index\n                  ),\n                });\n              }}\n              style={{ color: \"black\" }}\n            >\n              <TrashFill />\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  render() {\n    const status = this.status(this.props.status);\n    return (\n      <>\n        <Card>\n          <Card.Header></Card.Header>\n          <Card.Title style={{ marginTop: \"10px\" }}>Add Coverages</Card.Title>\n          <Card.Body>\n            <Row className=\"row justify-content-center\">\n              {status === \"loading\" && (\n                <Spinner animation=\"border\" variant=\"primary\" />\n              )}\n            </Row>\n            {status === \"succeeded\" && (\n              <Formik\n                validationSchema={formHelpers.schema}\n                onSubmit={(values) => this.handleCreate(values)}\n                initialValues={formHelpers.initialValues}\n              >\n                {({\n                  handleSubmit,\n                  handleChange,\n                  setFieldValue,\n                  values,\n                  dirty,\n                }) => (\n                  <Form noValidate onSubmit={handleSubmit}>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Sport:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"sport_index\"\n                          value={values.sport_index}\n                          onChange={handleChange}\n                        >\n                          {objectOptions(this.props.sports)}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>League:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"league_index\"\n                          value={values.league_index}\n                          onChange={(e) => {\n                            handleChange(e);\n                            setFieldValue(\"club_index\", 0);\n                          }}\n                        >\n                          {objectDataOptions(\n                            this.props.sports[values.sport_index].attributes\n                              .leagues\n                          )}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Club:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"club_index\"\n                          value={values.club_index}\n                          onChange={(e) => {\n                            handleChange(e);\n                            setFieldValue(\"group_index\", 0);\n                          }}\n                        >\n                          {this.clubOptions(\n                            this.props.sports[values.sport_index].attributes\n                              .leagues[values.league_index]\n                          )}\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Group:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"group_index\"\n                          value={values.group_index}\n                          onChange={handleChange}\n                        >\n                          {objectGroupOptions(\n                            this.props.clubs[values.club_index].attributes\n                              .club_groups\n                          )}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Category:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"category_index\"\n                          value={values.category_index}\n                          onChange={(e) => {\n                            handleChange(e);\n                            setFieldValue(\"sub_category_index\", 0);\n                          }}\n                        >\n                          {objectOptions(this.props.categories)}\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Sub Category:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"sub_category_index\"\n                          value={values.sub_category_index}\n                          onChange={handleChange}\n                        >\n                          {objectDataOptions(\n                            this.props.categories[values.category_index]\n                              .attributes.sub_categories\n                          )}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Carriers:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          multiple\n                          name=\"carriers\"\n                          value={values.carriers}\n                          onChange={(event) =>\n                            setFieldValue(\n                              \"carriers\",\n                              Array.from(\n                                event.target.selectedOptions,\n                                (option) => Number(option.value)\n                              )\n                            )\n                          }\n                        >\n                          {objectOptions(this.props.carriers)}\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Brokers:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          multiple\n                          name=\"brokers\"\n                          value={values.brokers}\n                          onChange={(event) =>\n                            setFieldValue(\n                              \"brokers\",\n                              Array.from(\n                                event.target.selectedOptions,\n                                (option) => Number(option.value)\n                              )\n                            )\n                          }\n                        >\n                          {objectOptions(this.props.brokers)}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Form.Group>\n                      <Form.Label>Notes:</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"notes\"\n                        value={values.notes}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>{\"Start Date:\"}</Form.Label>\n                        {/* <DatePicker\n                        name=\"start_date\"\n                        selected={values.start_date}\n                        onChange={(val) => setFieldValue(\"start_date\", val)}\n                      /> */}\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>{\"Ending Date:\"}</Form.Label>\n                        {/* <DatePicker\n                        name=\"end_date\"\n                        selected={values.end_date}\n                        onChange={(val) => setFieldValue(\"end_date\", val)}\n                      /> */}\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Check\n                          type=\"checkbox\"\n                          name=\"has_coverage_line\"\n                          label={\"Has Coverage Line\"}\n                          checked={values.has_coverage_line}\n                          value={values.has_coverage_line}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Check\n                          type=\"checkbox\"\n                          name=\"verified\"\n                          label={\"Verified\"}\n                          checked={values.verified}\n                          value={values.verified}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n                    </Row>\n                    <Button\n                      type=\"submit\"\n                      className=\"btn btn-theme float-right\"\n                      variant=\"primary\"\n                      style={{ marginRight: \"10px\" }}\n                    >\n                      Add Coverage\n                    </Button>\n                  </Form>\n                )}\n              </Formik>\n            )}\n          </Card.Body>\n          <Card.Footer></Card.Footer>\n        </Card>\n        <Card>\n          <Card.Header></Card.Header>\n          <Card.Title style={{ marginTop: \"10px\" }}>\n            Prepared Coverages\n          </Card.Title>\n          <Card.Body>\n            <GeneralTable\n              tableHeaders={[\n                \"Group\",\n                \"Category\",\n                \"Sub\",\n                \"Carrier\",\n                \"Broker\",\n                \"Remove\",\n              ]}\n              showObjects={this.showObjects}\n              objects={this.state.coverages}\n              status={\"succeeded\"}\n            />\n          </Card.Body>\n          <Card.Footer>\n            {this.state.coverages.length > 0 && (\n              <Button\n                variant=\"primary\"\n                onClick={this.handleSubmit}\n                className=\"btn btn-theme float-right\"\n              >\n                Submit Coverages\n              </Button>\n            )}\n          </Card.Footer>\n        </Card>\n      </>\n    );\n  }\n}\n\nCoverageWizardContainer.propTypes = {};\n\nfunction mapStateToProps(state) {\n  const { sports } = state.sports;\n  const sportsStatus = state.sports.status;\n  const { clubs } = state.clubs;\n  const clubsStatus = state.clubs.status;\n  const { categories } = state.categories;\n  const categoriesStatus = state.categories.status;\n  const { carriers } = state.carriers;\n  const carriersStatus = state.carriers.status;\n  const { brokers } = state.brokers;\n  const brokersStatus = state.brokers.status;\n  return {\n    status: {\n      sportsStatus,\n      clubsStatus,\n      categoriesStatus,\n      carriersStatus,\n      brokersStatus,\n    },\n    sports,\n    clubs,\n    categories,\n    carriers,\n    brokers,\n  };\n}\n\nexport default connect(mapStateToProps)(CoverageWizardContainer);\n"]},"metadata":{},"sourceType":"module"}