{"ast":null,"code":"export function runAjax(link, method = \"GET\", data = {}, callback = () => {}) {\n  let options;\n\n  if (method == \"GET\") {\n    options = {\n      method: method\n    };\n  } else {\n    options = {\n      method: method,\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n    };\n  }\n\n  fetch(link, options).then(response => {\n    if (!response.ok) {\n      throw response;\n    }\n\n    return response.json();\n  }).then(result => {\n    console.log(result);\n    callback(result);\n  }).catch(error => {\n    if (error.statusText) {\n      this.setState({\n        error: error\n      });\n    }\n\n    callback(error);\n  });\n}","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/survey/src/utils/APIUtils.js"],"names":["runAjax","link","method","data","callback","options","body","JSON","stringify","headers","credentials","fetch","then","response","ok","json","result","console","log","catch","error","statusText","setState"],"mappings":"AACA,OAAO,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,MAAM,GAAG,KAAhC,EAAuCC,IAAI,GAAG,EAA9C,EAAkDC,QAAQ,GAAG,MAAM,CAAE,CAArE,EAAuE;AAC1E,MAAIC,OAAJ;;AACA,MAAIH,MAAM,IAAI,KAAd,EAAqB;AACnBG,IAAAA,OAAO,GAAG;AAAEH,MAAAA,MAAM,EAAEA;AAAV,KAAV;AACD,GAFD,MAEO;AACLG,IAAAA,OAAO,GAAG;AACRH,MAAAA,MAAM,EAAEA,MADA;AAERI,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFE;AAGRM,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHD;AAMRC,MAAAA,WAAW,EAAE;AANL,KAAV;AAQD;;AAEDC,EAAAA,KAAK,CAACV,IAAD,EAAOI,OAAP,CAAL,CACGO,IADH,CACSC,QAAD,IAAc;AAClB,QAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,YAAMD,QAAN;AACD;;AACD,WAAOA,QAAQ,CAACE,IAAT,EAAP;AACD,GANH,EAOGH,IAPH,CAOSI,MAAD,IAAY;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAZ,IAAAA,QAAQ,CAACY,MAAD,CAAR;AACD,GAVH,EAWGG,KAXH,CAWUC,KAAD,IAAW;AAChB,QAAIA,KAAK,CAACC,UAAV,EAAsB;AACpB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD;;AACDhB,IAAAA,QAAQ,CAACgB,KAAD,CAAR;AACD,GAhBH;AAiBD","sourcesContent":["\nexport function runAjax(link, method = \"GET\", data = {}, callback = () => {}) {\n    let options;\n    if (method == \"GET\") {\n      options = { method: method };\n    } else {\n      options = {\n        method: method,\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"same-origin\",\n      };\n    }\n  \n    fetch(link, options)\n      .then((response) => {\n        if (!response.ok) {\n          throw response;\n        }\n        return response.json();\n      })\n      .then((result) => {\n        console.log(result);\n        callback(result);\n      })\n      .catch((error) => {\n        if (error.statusText) {\n          this.setState({ error: error });\n        }\n        callback(error);\n      });\n  }"]},"metadata":{},"sourceType":"module"}