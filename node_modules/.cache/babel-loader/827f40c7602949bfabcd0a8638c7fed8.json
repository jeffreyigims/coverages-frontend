{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/Coverages/Front/src/containers/companies/CompanyContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CompanyDetails from \"./CompanyDetails\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport { companies as formHelpers } from \"../../utils/Schemas\";\nimport { companyForm as form } from \"../../utils/Forms\";\nimport { fetchCompany, updateCompany, deleteCompany } from \"../../actions/Actions\";\n\nclass CompanyContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"company\"\n    };\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.dispatch(fetchCompany(id));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CompanyDetails, {\n      object: this.props.selected,\n      status: this.props.status,\n      name: this.state.name,\n      formHelpers: formHelpers,\n      form: form,\n      showDetails: this.showDetails,\n      updateObject: (id, values) => {\n        this.props.dispatch(updateCompany({\n          id: id,\n          values: values\n        }));\n      },\n      deleteObject: id => {\n        this.props.dispatch(deleteCompany(id));\n      },\n      redirection: {\n        link: this.props.link,\n        redirect: this.props.redirect\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nCompanyContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n  const {\n    selected,\n    status,\n    error\n  } = state.companies;\n  const {\n    link,\n    redirect\n  } = state.redirections;\n  return {\n    selected,\n    status,\n    error,\n    link,\n    redirect\n  };\n}\n\nexport default connect(mapStateToProps)(CompanyContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/containers/companies/CompanyContainer.js"],"names":["React","Component","connect","CompanyDetails","PropTypes","Button","GeneralTable","companies","formHelpers","companyForm","form","fetchCompany","updateCompany","deleteCompany","CompanyContainer","state","name","componentDidMount","id","props","match","params","dispatch","render","selected","status","showDetails","values","link","redirect","propTypes","object","isRequired","string","error","bool","mapStateToProps","redirections"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,SAAS,IAAIC,WAAtB,QAAyC,qBAAzC;AACA,SAASC,WAAW,IAAIC,IAAxB,QAAoC,mBAApC;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,aAHF,QAIO,uBAJP;;AAMA,MAAMC,gBAAN,SAA+Bb,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCc,KADuC,GAC/B;AACNC,MAAAA,IAAI,EAAE;AADA,KAD+B;AAAA;;AAKvCC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,EAAE,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,EAAjC;AACA,SAAKC,KAAL,CAAWG,QAAX,CAAoBX,YAAY,CAACO,EAAD,CAAhC;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE,oBAAC,cAAD;AACE,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWK,QADrB;AAEE,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MAFrB;AAGE,MAAA,IAAI,EAAE,KAAKV,KAAL,CAAWC,IAHnB;AAIE,MAAA,WAAW,EAAER,WAJf;AAKE,MAAA,IAAI,EAAEE,IALR;AAME,MAAA,WAAW,EAAE,KAAKgB,WANpB;AAOE,MAAA,YAAY,EAAE,CAACR,EAAD,EAAKS,MAAL,KAAgB;AAC5B,aAAKR,KAAL,CAAWG,QAAX,CAAoBV,aAAa,CAAC;AAAEM,UAAAA,EAAE,EAAEA,EAAN;AAAUS,UAAAA,MAAM,EAAEA;AAAlB,SAAD,CAAjC;AACD,OATH;AAUE,MAAA,YAAY,EAAGT,EAAD,IAAQ;AACpB,aAAKC,KAAL,CAAWG,QAAX,CAAoBT,aAAa,CAACK,EAAD,CAAjC;AACD,OAZH;AAaE,MAAA,WAAW,EAAE;AAAEU,QAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWS,IAAnB;AAAyBC,QAAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWU;AAA9C,OAbf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAmBD;;AA9BsC;;AAiCzCf,gBAAgB,CAACgB,SAAjB,GAA6B;AAC3BN,EAAAA,QAAQ,EAAEpB,SAAS,CAAC2B,MAAV,CAAiBC,UADA;AAE3BP,EAAAA,MAAM,EAAErB,SAAS,CAAC6B,MAAV,CAAiBD,UAFE;AAG3BE,EAAAA,KAAK,EAAE9B,SAAS,CAAC6B,MAAV,CAAiBD,UAHG;AAI3BJ,EAAAA,IAAI,EAAExB,SAAS,CAAC6B,MAJW;AAK3BJ,EAAAA,QAAQ,EAAEzB,SAAS,CAAC+B;AALO,CAA7B;;AAQA,SAASC,eAAT,CAAyBrB,KAAzB,EAAgC;AAC9B,QAAM;AAAES,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBS,IAAAA;AAApB,MAA8BnB,KAAK,CAACR,SAA1C;AACA,QAAM;AAAEqB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBd,KAAK,CAACsB,YAAjC;AACA,SAAO;AAAEb,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBS,IAAAA,KAApB;AAA2BN,IAAAA,IAA3B;AAAiCC,IAAAA;AAAjC,GAAP;AACD;;AAED,eAAe3B,OAAO,CAACkC,eAAD,CAAP,CAAyBtB,gBAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CompanyDetails from \"./CompanyDetails\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport { companies as formHelpers } from \"../../utils/Schemas\";\nimport { companyForm as form } from \"../../utils/Forms\";\nimport {\n  fetchCompany,\n  updateCompany,\n  deleteCompany,\n} from \"../../actions/Actions\";\n\nclass CompanyContainer extends Component {\n  state = {\n    name: \"company\",\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.dispatch(fetchCompany(id));\n  }\n\n  render() {\n    return (\n      <>\n        <CompanyDetails\n          object={this.props.selected}\n          status={this.props.status}\n          name={this.state.name}\n          formHelpers={formHelpers}\n          form={form}\n          showDetails={this.showDetails}\n          updateObject={(id, values) => {\n            this.props.dispatch(updateCompany({ id: id, values: values }));\n          }}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteCompany(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nCompanyContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, status, error } = state.companies;\n  const { link, redirect } = state.redirections;\n  return { selected, status, error, link, redirect };\n}\n\nexport default connect(mapStateToProps)(CompanyContainer);\n"]},"metadata":{},"sourceType":"module"}