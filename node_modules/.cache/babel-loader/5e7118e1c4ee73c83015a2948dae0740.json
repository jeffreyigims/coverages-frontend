{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/Coverages/Front/src/containers/brokers/BrokerContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport DetailStructure from \"../../components/DetailStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport PaginatedTable from \"../../components/PaginatedTable\";\nimport Moment from \"react-moment\";\nimport { EyeFill } from \"react-bootstrap-icons\";\nimport { brokers as formHelpers } from \"../../utils/Schemas\";\nimport { brokerForm as form } from \"../../utils/Forms\";\nimport { fetchBroker, updateBroker, deleteBroker, fetchCoverages } from \"../../actions/Actions\";\n\nclass BrokerContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"broker\",\n      id: this.props.match.params.id\n    };\n\n    this.showDetails = object => {\n      let showObjects = objects => {\n        return objects.map((object, index) => {\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            width: \"200\",\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            variant: \"link\",\n            href: \"/leagues/\" + object.attributes.league.id,\n            style: {\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }\n          }, object.attributes.league.name)), /*#__PURE__*/React.createElement(\"td\", {\n            width: \"200\",\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            variant: \"link\",\n            href: \"/clubs/\" + object.attributes.club.id,\n            style: {\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }\n          }, object.attributes.club.name)), /*#__PURE__*/React.createElement(\"td\", {\n            width: \"200\",\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }\n          }, object.attributes.group.name), /*#__PURE__*/React.createElement(\"td\", {\n            width: \"200\",\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            variant: \"link\",\n            href: \"/categories/\" + object.attributes.category.id,\n            style: {\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }\n          }, object.attributes.category.name)), /*#__PURE__*/React.createElement(\"td\", {\n            width: \"200\",\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            variant: \"link\",\n            href: \"/sub_categories/\" + object.attributes.sub_category.id,\n            style: {\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }\n          }, object.attributes.sub_category.name)), /*#__PURE__*/React.createElement(\"td\", {\n            width: \"200\",\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            variant: \"link\",\n            href: \"/users/\" + object.attributes.user.id,\n            style: {\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }\n          }, object.attributes.user.first_name, \" \", object.attributes.user.last_name)), /*#__PURE__*/React.createElement(\"td\", {\n            width: \"200\",\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Moment, {\n            format: \"MM/DD/YYYY\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }\n          }, object.attributes.created_at)), /*#__PURE__*/React.createElement(\"td\", {\n            width: \"200\",\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Moment, {\n            format: \"MM/DD/YYYY\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }\n          }, object.attributes.updated_at)), /*#__PURE__*/React.createElement(\"td\", {\n            width: \"200\",\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }\n          }, object.attributes.verified ? \"true\" : \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n            width: \"100\",\n            align: \"center\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            variant: \"link\",\n            href: \"/coverages/\" + object.attributes.id,\n            style: {\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(EyeFill, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }\n          }))));\n        });\n      };\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PaginatedTable, {\n        objects: this.props.coverages,\n        showObjects: showObjects,\n        tableHeaders: [\"League\", \"Club\", \"Group\", \"Category\", \"Sub\", \"Entered By\", \"Date Created\", \"Last Updated\", \"Verified\", \"View\"],\n        onPageChange: (e, {\n          activePage\n        }) => this.props.dispatch(fetchCoverages({\n          for_broker: this.state.id,\n          page: activePage\n        })),\n        defaultActivePage: this.props.page,\n        totalPages: this.props.pages,\n        status: this.props.coveragesStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchBroker(this.state.id));\n    this.props.dispatch(fetchCoverages({\n      for_broker: this.state.id\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DetailStructure, {\n      object: this.props.selected,\n      status: this.props.status,\n      name: this.state.name,\n      formHelpers: formHelpers,\n      form: (values, handleChange, setFieldValue, errors) => form(values, handleChange, setFieldValue, errors, this.props.selected.attributes.company),\n      showDetails: this.showDetails,\n      updateObject: (id, values) => {\n        this.props.dispatch(updateBroker({\n          id: id,\n          values: values\n        }));\n      },\n      deleteObject: id => {\n        this.props.dispatch(deleteBroker(id));\n      },\n      redirection: {\n        link: this.props.link,\n        redirect: this.props.redirect\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nBrokerContainer.propTypes = {\n  selected: PropTypes.object,\n  status: PropTypes.string.isRequired,\n  errors: PropTypes.object,\n  link: PropTypes.string,\n  redirect: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n  const {\n    selected,\n    error,\n    status\n  } = state.brokers;\n  const {\n    coverages,\n    pages,\n    page\n  } = state.coverages;\n  const {\n    link,\n    redirect\n  } = state.redirections;\n  const coveragesStatus = state.coverages.status;\n  return {\n    selected,\n    status,\n    error,\n    link,\n    redirect,\n    coverages,\n    pages,\n    page,\n    coveragesStatus\n  };\n}\n\nexport default connect(mapStateToProps)(BrokerContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coverages/Front/src/containers/brokers/BrokerContainer.js"],"names":["React","Component","connect","DetailStructure","PropTypes","Button","PaginatedTable","Moment","EyeFill","brokers","formHelpers","brokerForm","form","fetchBroker","updateBroker","deleteBroker","fetchCoverages","BrokerContainer","state","name","id","props","match","params","showDetails","object","showObjects","objects","map","index","attributes","league","color","club","group","category","sub_category","user","first_name","last_name","created_at","updated_at","verified","coverages","e","activePage","dispatch","for_broker","page","pages","coveragesStatus","componentDidMount","render","selected","status","values","handleChange","setFieldValue","errors","company","link","redirect","propTypes","string","isRequired","bool","mapStateToProps","error","redirections"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,qBAAvC;AACA,SAASC,UAAU,IAAIC,IAAvB,QAAmC,mBAAnC;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,cAJF,QAKO,uBALP;;AAOA,MAAMC,eAAN,SAA8BhB,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCiB,KADsC,GAC9B;AACNC,MAAAA,IAAI,EAAE,QADA;AAENC,MAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH;AAFtB,KAD8B;;AAAA,SAWtCI,WAXsC,GAWvBC,MAAD,IAAY;AACxB,UAAIC,WAAW,GAAIC,OAAD,IAAa;AAC7B,eAAOA,OAAO,CAACC,GAAR,CAAY,CAACH,MAAD,EAASI,KAAT,KAAmB;AACpC,8BACE;AAAI,YAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAgB,YAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,MAAD;AACE,YAAA,OAAO,EAAC,MADV;AAEE,YAAA,IAAI,EAAE,cAAcJ,MAAM,CAACK,UAAP,CAAkBC,MAAlB,CAAyBX,EAF/C;AAGE,YAAA,KAAK,EAAE;AAAEY,cAAAA,KAAK,EAAE;AAAT,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKGP,MAAM,CAACK,UAAP,CAAkBC,MAAlB,CAAyBZ,IAL5B,CADF,CADF,eAUE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAgB,YAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,MAAD;AACE,YAAA,OAAO,EAAC,MADV;AAEE,YAAA,IAAI,EAAE,YAAYM,MAAM,CAACK,UAAP,CAAkBG,IAAlB,CAAuBb,EAF3C;AAGE,YAAA,KAAK,EAAE;AAAEY,cAAAA,KAAK,EAAE;AAAT,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKGP,MAAM,CAACK,UAAP,CAAkBG,IAAlB,CAAuBd,IAL1B,CADF,CAVF,eAmBE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAgB,YAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGM,MAAM,CAACK,UAAP,CAAkBI,KAAlB,CAAwBf,IAD3B,CAnBF,eAsBE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAgB,YAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,MAAD;AACE,YAAA,OAAO,EAAC,MADV;AAEE,YAAA,IAAI,EAAE,iBAAiBM,MAAM,CAACK,UAAP,CAAkBK,QAAlB,CAA2Bf,EAFpD;AAGE,YAAA,KAAK,EAAE;AAAEY,cAAAA,KAAK,EAAE;AAAT,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKGP,MAAM,CAACK,UAAP,CAAkBK,QAAlB,CAA2BhB,IAL9B,CADF,CAtBF,eA+BE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAgB,YAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,MAAD;AACE,YAAA,OAAO,EAAC,MADV;AAEE,YAAA,IAAI,EAAE,qBAAqBM,MAAM,CAACK,UAAP,CAAkBM,YAAlB,CAA+BhB,EAF5D;AAGE,YAAA,KAAK,EAAE;AAAEY,cAAAA,KAAK,EAAE;AAAT,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKGP,MAAM,CAACK,UAAP,CAAkBM,YAAlB,CAA+BjB,IALlC,CADF,CA/BF,eAwCE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAgB,YAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,MAAD;AACE,YAAA,OAAO,EAAC,MADV;AAEE,YAAA,IAAI,EAAE,YAAYM,MAAM,CAACK,UAAP,CAAkBO,IAAlB,CAAuBjB,EAF3C;AAGE,YAAA,KAAK,EAAE;AAAEY,cAAAA,KAAK,EAAE;AAAT,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKGP,MAAM,CAACK,UAAP,CAAkBO,IAAlB,CAAuBC,UAL1B,EAKsC,GALtC,EAMGb,MAAM,CAACK,UAAP,CAAkBO,IAAlB,CAAuBE,SAN1B,CADF,CAxCF,eAkDE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAgB,YAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,MAAD;AAAQ,YAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGd,MAAM,CAACK,UAAP,CAAkBU,UADrB,CADF,CAlDF,eAuDE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAgB,YAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,MAAD;AAAQ,YAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGf,MAAM,CAACK,UAAP,CAAkBW,UADrB,CADF,CAvDF,eA4DE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAgB,YAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGhB,MAAM,CAACK,UAAP,CAAkBY,QAAlB,GAA6B,MAA7B,GAAsC,OADzC,CA5DF,eA+DE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAgB,YAAA,KAAK,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,MAAD;AACE,YAAA,OAAO,EAAC,MADV;AAEE,YAAA,IAAI,EAAE,gBAAgBjB,MAAM,CAACK,UAAP,CAAkBV,EAF1C;AAGE,YAAA,KAAK,EAAE;AAAEY,cAAAA,KAAK,EAAE;AAAT,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,CADF,CA/DF,CADF;AA2ED,SA5EM,CAAP;AA6ED,OA9ED;;AAgFA,0BACE,uDACE,oBAAC,cAAD;AACE,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWsB,SADtB;AAEE,QAAA,WAAW,EAAEjB,WAFf;AAGE,QAAA,YAAY,EAAE,CACZ,QADY,EAEZ,MAFY,EAGZ,OAHY,EAIZ,UAJY,EAKZ,KALY,EAMZ,YANY,EAOZ,cAPY,EAQZ,cARY,EASZ,UATY,EAUZ,MAVY,CAHhB;AAeE,QAAA,YAAY,EAAE,CAACkB,CAAD,EAAI;AAAEC,UAAAA;AAAF,SAAJ,KACZ,KAAKxB,KAAL,CAAWyB,QAAX,CACE9B,cAAc,CAAC;AAAE+B,UAAAA,UAAU,EAAE,KAAK7B,KAAL,CAAWE,EAAzB;AAA6B4B,UAAAA,IAAI,EAAEH;AAAnC,SAAD,CADhB,CAhBJ;AAoBE,QAAA,iBAAiB,EAAE,KAAKxB,KAAL,CAAW2B,IApBhC;AAqBE,QAAA,UAAU,EAAE,KAAK3B,KAAL,CAAW4B,KArBzB;AAsBE,QAAA,MAAM,EAAE,KAAK5B,KAAL,CAAW6B,eAtBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AA4BD,KAxHqC;AAAA;;AAMtCC,EAAAA,iBAAiB,GAAG;AAClB,SAAK9B,KAAL,CAAWyB,QAAX,CAAoBjC,WAAW,CAAC,KAAKK,KAAL,CAAWE,EAAZ,CAA/B;AACA,SAAKC,KAAL,CAAWyB,QAAX,CAAoB9B,cAAc,CAAC;AAAE+B,MAAAA,UAAU,EAAE,KAAK7B,KAAL,CAAWE;AAAzB,KAAD,CAAlC;AACD;;AAiHDgC,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE,oBAAC,eAAD;AACE,MAAA,MAAM,EAAE,KAAK/B,KAAL,CAAWgC,QADrB;AAEE,MAAA,MAAM,EAAE,KAAKhC,KAAL,CAAWiC,MAFrB;AAGE,MAAA,IAAI,EAAE,KAAKpC,KAAL,CAAWC,IAHnB;AAIE,MAAA,WAAW,EAAET,WAJf;AAKE,MAAA,IAAI,EAAE,CAAC6C,MAAD,EAASC,YAAT,EAAuBC,aAAvB,EAAsCC,MAAtC,KACJ9C,IAAI,CACF2C,MADE,EAEFC,YAFE,EAGFC,aAHE,EAIFC,MAJE,EAKF,KAAKrC,KAAL,CAAWgC,QAAX,CAAoBvB,UAApB,CAA+B6B,OAL7B,CANR;AAcE,MAAA,WAAW,EAAE,KAAKnC,WAdpB;AAeE,MAAA,YAAY,EAAE,CAACJ,EAAD,EAAKmC,MAAL,KAAgB;AAC5B,aAAKlC,KAAL,CAAWyB,QAAX,CAAoBhC,YAAY,CAAC;AAAEM,UAAAA,EAAE,EAAEA,EAAN;AAAUmC,UAAAA,MAAM,EAAEA;AAAlB,SAAD,CAAhC;AACD,OAjBH;AAkBE,MAAA,YAAY,EAAGnC,EAAD,IAAQ;AACpB,aAAKC,KAAL,CAAWyB,QAAX,CAAoB/B,YAAY,CAACK,EAAD,CAAhC;AACD,OApBH;AAqBE,MAAA,WAAW,EAAE;AAAEwC,QAAAA,IAAI,EAAE,KAAKvC,KAAL,CAAWuC,IAAnB;AAAyBC,QAAAA,QAAQ,EAAE,KAAKxC,KAAL,CAAWwC;AAA9C,OArBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AA2BD;;AAtJqC;;AAyJxC5C,eAAe,CAAC6C,SAAhB,GAA4B;AAC1BT,EAAAA,QAAQ,EAAEjD,SAAS,CAACqB,MADM;AAE1B6B,EAAAA,MAAM,EAAElD,SAAS,CAAC2D,MAAV,CAAiBC,UAFC;AAG1BN,EAAAA,MAAM,EAAEtD,SAAS,CAACqB,MAHQ;AAI1BmC,EAAAA,IAAI,EAAExD,SAAS,CAAC2D,MAJU;AAK1BF,EAAAA,QAAQ,EAAEzD,SAAS,CAAC6D;AALM,CAA5B;;AAQA,SAASC,eAAT,CAAyBhD,KAAzB,EAAgC;AAC9B,QAAM;AAAEmC,IAAAA,QAAF;AAAYc,IAAAA,KAAZ;AAAmBb,IAAAA;AAAnB,MAA8BpC,KAAK,CAACT,OAA1C;AACA,QAAM;AAAEkC,IAAAA,SAAF;AAAaM,IAAAA,KAAb;AAAoBD,IAAAA;AAApB,MAA6B9B,KAAK,CAACyB,SAAzC;AACA,QAAM;AAAEiB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqB3C,KAAK,CAACkD,YAAjC;AACA,QAAMlB,eAAe,GAAGhC,KAAK,CAACyB,SAAN,CAAgBW,MAAxC;AACA,SAAO;AACLD,IAAAA,QADK;AAELC,IAAAA,MAFK;AAGLa,IAAAA,KAHK;AAILP,IAAAA,IAJK;AAKLC,IAAAA,QALK;AAMLlB,IAAAA,SANK;AAOLM,IAAAA,KAPK;AAQLD,IAAAA,IARK;AASLE,IAAAA;AATK,GAAP;AAWD;;AAED,eAAehD,OAAO,CAACgE,eAAD,CAAP,CAAyBjD,eAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport DetailStructure from \"../../components/DetailStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport PaginatedTable from \"../../components/PaginatedTable\";\nimport Moment from \"react-moment\";\nimport { EyeFill } from \"react-bootstrap-icons\";\nimport { brokers as formHelpers } from \"../../utils/Schemas\";\nimport { brokerForm as form } from \"../../utils/Forms\";\nimport {\n  fetchBroker,\n  updateBroker,\n  deleteBroker,\n  fetchCoverages,\n} from \"../../actions/Actions\";\n\nclass BrokerContainer extends Component {\n  state = {\n    name: \"broker\",\n    id: this.props.match.params.id,\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchBroker(this.state.id));\n    this.props.dispatch(fetchCoverages({ for_broker: this.state.id }));\n  }\n\n  showDetails = (object) => {\n    let showObjects = (objects) => {\n      return objects.map((object, index) => {\n        return (\n          <tr key={index}>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/leagues/\" + object.attributes.league.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.league.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/clubs/\" + object.attributes.club.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.club.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.attributes.group.name}\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/categories/\" + object.attributes.category.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.category.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/sub_categories/\" + object.attributes.sub_category.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.sub_category.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/users/\" + object.attributes.user.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.user.first_name}{\" \"}\n                {object.attributes.user.last_name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Moment format=\"MM/DD/YYYY\">\n                {object.attributes.created_at}\n              </Moment>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Moment format=\"MM/DD/YYYY\">\n                {object.attributes.updated_at}\n              </Moment>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.attributes.verified ? \"true\" : \"false\"}\n            </td>\n            <td width=\"100\" align=\"center\">\n              <Button\n                variant=\"link\"\n                href={\"/coverages/\" + object.attributes.id}\n                style={{ color: \"black\" }}\n              >\n                <EyeFill />\n              </Button>\n            </td>\n          </tr>\n        );\n      });\n    };\n\n    return (\n      <>\n        <PaginatedTable\n          objects={this.props.coverages}\n          showObjects={showObjects}\n          tableHeaders={[\n            \"League\",\n            \"Club\",\n            \"Group\",\n            \"Category\",\n            \"Sub\",\n            \"Entered By\",\n            \"Date Created\",\n            \"Last Updated\",\n            \"Verified\",\n            \"View\",\n          ]}\n          onPageChange={(e, { activePage }) =>\n            this.props.dispatch(\n              fetchCoverages({ for_broker: this.state.id, page: activePage })\n            )\n          }\n          defaultActivePage={this.props.page}\n          totalPages={this.props.pages}\n          status={this.props.coveragesStatus}\n        />\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <DetailStructure\n          object={this.props.selected}\n          status={this.props.status}\n          name={this.state.name}\n          formHelpers={formHelpers}\n          form={(values, handleChange, setFieldValue, errors) =>\n            form(\n              values,\n              handleChange,\n              setFieldValue,\n              errors,\n              this.props.selected.attributes.company\n            )\n          }\n          showDetails={this.showDetails}\n          updateObject={(id, values) => {\n            this.props.dispatch(updateBroker({ id: id, values: values }));\n          }}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteBroker(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nBrokerContainer.propTypes = {\n  selected: PropTypes.object,\n  status: PropTypes.string.isRequired,\n  errors: PropTypes.object,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, error, status } = state.brokers;\n  const { coverages, pages, page } = state.coverages;\n  const { link, redirect } = state.redirections;\n  const coveragesStatus = state.coverages.status;\n  return {\n    selected,\n    status,\n    error,\n    link,\n    redirect,\n    coverages,\n    pages,\n    page,\n    coveragesStatus,\n  };\n}\n\nexport default connect(mapStateToProps)(BrokerContainer);\n"]},"metadata":{},"sourceType":"module"}