{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/Coveragess/Front/src/containers/companies/CompanyContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport DetailStructure from \"../../components/DetailStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport { companies as formHelpers } from \"../../utils/Schemas\";\nimport { companyForm as form } from \"../../utils/Forms\";\nimport { fetchCompany, updateCompany, deleteCompany } from \"../../actions/Actions\";\n\nclass CompanyContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"company\"\n    };\n\n    this.showDetails = object => {\n      let showObjects = objects => {\n        return objects.map((object, index) => {\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            width: \"200\",\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            variant: \"link\",\n            href: \"/brokers/\" + object.data.attributes.id,\n            style: {\n              color: \"black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }\n          }, object.data.attributes.name)), /*#__PURE__*/React.createElement(\"td\", {\n            width: \"200\",\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }\n          }, object.data.attributes.associated_coverages));\n        });\n      };\n\n      return /*#__PURE__*/React.createElement(GeneralTable, {\n        objects: object.attributes.brokers,\n        showObjects: showObjects,\n        tableHeaders: [\"Name\", \"Associated\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.dispatch(fetchCompany(id));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DetailStructure, {\n      object: this.props.selected,\n      status: this.props.status,\n      name: this.state.name,\n      formHelpers: formHelpers,\n      form: form,\n      showDetails: this.showDetails,\n      updateObject: (id, values) => {\n        this.props.dispatch(updateCompany({\n          id: id,\n          values: values\n        }));\n      },\n      deleteObject: id => {\n        this.props.dispatch(deleteCompany(id));\n      },\n      redirection: {\n        link: this.props.link,\n        redirect: this.props.redirect\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nCompanyContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n  const {\n    selected,\n    status,\n    error\n  } = state.companies;\n  const {\n    link,\n    redirect\n  } = state.redirections;\n  return {\n    selected,\n    status,\n    error,\n    link,\n    redirect\n  };\n}\n\nexport default connect(mapStateToProps)(CompanyContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/Coveragess/Front/src/containers/companies/CompanyContainer.js"],"names":["React","Component","connect","DetailStructure","PropTypes","Button","GeneralTable","companies","formHelpers","companyForm","form","fetchCompany","updateCompany","deleteCompany","CompanyContainer","state","name","showDetails","object","showObjects","objects","map","index","data","attributes","id","color","associated_coverages","brokers","componentDidMount","props","match","params","dispatch","render","selected","status","values","link","redirect","propTypes","isRequired","string","error","bool","mapStateToProps","redirections"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport DetailStructure from \"../../components/DetailStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport { companies as formHelpers } from \"../../utils/Schemas\";\nimport { companyForm as form } from \"../../utils/Forms\";\nimport {\n  fetchCompany,\n  updateCompany,\n  deleteCompany,\n} from \"../../actions/Actions\";\n\nclass CompanyContainer extends Component {\n  state = {\n    name: \"company\",\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.dispatch(fetchCompany(id));\n  }\n\n  showDetails = (object) => {\n    let showObjects = (objects) => {\n      return objects.map((object, index) => {\n        return (\n          <tr key={index}>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/brokers/\" + object.data.attributes.id}\n                style={{ color: \"black\" }}\n              >\n                {object.data.attributes.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.data.attributes.associated_coverages}\n            </td>\n          </tr>\n        );\n      });\n    };\n\n    return (\n      <GeneralTable\n        objects={object.attributes.brokers}\n        showObjects={showObjects}\n        tableHeaders={[\"Name\", \"Associated\"]}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <DetailStructure\n          object={this.props.selected}\n          status={this.props.status}\n          name={this.state.name}\n          formHelpers={formHelpers}\n          form={form}\n          showDetails={this.showDetails}\n          updateObject={(id, values) => {\n            this.props.dispatch(updateCompany({ id: id, values: values }));\n          }}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteCompany(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nCompanyContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, status, error } = state.companies;\n  const { link, redirect } = state.redirections;\n  return { selected, status, error, link, redirect };\n}\n\nexport default connect(mapStateToProps)(CompanyContainer);\n"]},"metadata":{},"sourceType":"module"}