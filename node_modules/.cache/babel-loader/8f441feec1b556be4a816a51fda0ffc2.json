{"ast":null,"code":"import { runAjax } from \"../utils/APIUtils\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst name = \"leagues\";\nconst link = \"/leagues\";\nexport const fetchLeagues = createAsyncThunk(name.concat(\"/fetchLeagues\"), async () => {\n  const response = await runAjax(link.concat(\".json\"), \"GET\", {});\n  return response;\n});\nexport const postLeague = createAsyncThunk(name.concat(\"/postLeague\"), async values => {\n  const response = await runAjax(link.concat(\".json\"), \"POST\", {\n    league: values\n  });\n  return response;\n});\nexport const fetchLeague = createAsyncThunk(name.concat(\"/fetchLeague\"), async id => {\n  const response = await runAjax(link.concat(\"/\" + id + \".json\"), \"GET\", {});\n  return response;\n});\nexport const updateSport = createAsyncThunk(name.concat(\"/updateSport\"), async params => {\n  const response = await runAjax(link.concat(\"/\" + params.id + \".json\"), \"PATCH\", {\n    sport: params.values\n  });\n  return response;\n});\nexport const deleteSport = createAsyncThunk(name.concat(\"/deleteSport\"), async id => {\n  await runAjax(link.concat(\"/\" + id + \".json\"), \"DELETE\", {});\n  return id;\n});\nexport const sportsSlice = createSlice({\n  name: name,\n  initialState: {\n    sports: [],\n    status: \"idle\",\n    error: null,\n    selected: null\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchSports.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [fetchSports.fulfilled]: (state, action) => {\n      state.sports = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [fetchSports.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [postSport.fulfilled]: (state, action) => {\n      state.sports.push(action.payload.data);\n    },\n    [postSport.rejected]: (state, action) => {},\n    [fetchSport.fulfilled]: (state, action) => {\n      state.selected = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [fetchSport.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [updateSport.fulfilled]: (state, action) => {\n      state.selected = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [updateSport.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [deleteSport.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    [deleteSport.fulfilled]: (state, action) => {\n      state.status = \"succeeded\";\n    }\n  }\n});","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/survey/src/data/leagues.js"],"names":["runAjax","createAsyncThunk","createSlice","name","link","fetchLeagues","concat","response","postLeague","values","league","fetchLeague","id","updateSport","params","sport","deleteSport","sportsSlice","initialState","sports","status","error","selected","reducers","extraReducers","fetchSports","pending","state","action","fulfilled","payload","data","rejected","postSport","push","fetchSport"],"mappings":"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","sourcesContent":["import { runAjax } from \"../utils/APIUtils\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nconst name = \"leagues\";\nconst link = \"/leagues\";\n\nexport const fetchLeagues = createAsyncThunk(\n  name.concat(\"/fetchLeagues\"),\n  async () => {\n    const response = await runAjax(link.concat(\".json\"), \"GET\", {});\n    return response;\n  }\n);\n\nexport const postLeague = createAsyncThunk(\n  name.concat(\"/postLeague\"),\n  async (values) => {\n    const response = await runAjax(link.concat(\".json\"), \"POST\", {\n      league: values,\n    });\n    return response;\n  }\n);\n\nexport const fetchLeague = createAsyncThunk(\n  name.concat(\"/fetchLeague\"),\n  async (id) => {\n    const response = await runAjax(link.concat(\"/\" + id + \".json\"), \"GET\", {});\n    return response;\n  }\n);\n\nexport const updateSport = createAsyncThunk(\n  name.concat(\"/updateSport\"),\n  async (params) => {\n    const response = await runAjax(\n      link.concat(\"/\" + params.id + \".json\"),\n      \"PATCH\",\n      { sport: params.values }\n    );\n    return response;\n  }\n);\n\nexport const deleteSport = createAsyncThunk(\n  name.concat(\"/deleteSport\"),\n  async (id) => {\n    await runAjax(link.concat(\"/\" + id + \".json\"), \"DELETE\", {});\n    return id;\n  }\n);\n\nexport const sportsSlice = createSlice({\n  name: name,\n  initialState: {\n    sports: [],\n    status: \"idle\",\n    error: null,\n    selected: null,\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchSports.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [fetchSports.fulfilled]: (state, action) => {\n      state.sports = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [fetchSports.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [postSport.fulfilled]: (state, action) => {\n      state.sports.push(action.payload.data);\n    },\n    [postSport.rejected]: (state, action) => {},\n    [fetchSport.fulfilled]: (state, action) => {\n      state.selected = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [fetchSport.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [updateSport.fulfilled]: (state, action) => {\n      state.selected = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [updateSport.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [deleteSport.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n    [deleteSport.fulfilled]: (state, action) => {\n      state.status = \"succeeded\";\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}