{"ast":null,"code":"function resolve(response) {\n  return response;\n}\n\nfunction reject(response) {\n  return response;\n}\n\nexport function runAjax(link, method = \"GET\", data = {}) {\n  var promiseObject = new Promise(function (resolve, reject) {\n    let options;\n\n    if (method === \"GET\") {\n      options = {\n        method: \"GET\"\n      };\n    } else {\n      options = {\n        method: method,\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n      };\n    }\n\n    let response = fetch(link, options);\n    console.log(response.json().status);\n\n    if (response.status !== 200) {\n      console.log(response);\n      console.log(\"Rejected\");\n      return reject(response);\n    } // if (method === \"DELETE\") {\n    //   return \"Success\";\n    // }\n\n\n    console.log(\"Resolved\");\n    return resolve(response.json());\n  });\n  return promiseObject;\n} // export function runAjax(link, method = \"GET\", data = {}) {\n//   var promiseObject = new Promise(async function (resolve, reject) {\n//     let options;\n//     if (method == \"GET\") {\n//       options = { method: method };\n//     } else {\n//       options = {\n//         method: method,\n//         body: JSON.stringify(data),\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         credentials: \"same-origin\",\n//       };\n//     }\n// \n//     fetch(link, options)\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw response;\n//         }\n//         return reject(response.json());\n//       })\n//       .then((result) => {\n//         // callback(result);\n//       })\n//       .catch((error) => {\n//         if (error.statusText) {\n//           reject(error)\n//         }\n//       });\n//   });\n// }","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/survey/src/utils/APIUtils.js"],"names":["resolve","response","reject","runAjax","link","method","data","promiseObject","Promise","options","body","JSON","stringify","headers","credentials","fetch","console","log","json","status"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,QAAjB,EAA2B;AACzB,SAAOA,QAAP;AACD;;AAED,SAASC,MAAT,CAAgBD,QAAhB,EAA0B;AACxB,SAAOA,QAAP;AACD;;AAED,OAAO,SAASE,OAAT,CAAiBC,IAAjB,EAAuBC,MAAM,GAAG,KAAhC,EAAuCC,IAAI,GAAG,EAA9C,EAAkD;AACvD,MAAIC,aAAa,GAAG,IAAIC,OAAJ,CAAY,UAAUR,OAAV,EAAmBE,MAAnB,EAA2B;AACzD,QAAIO,OAAJ;;AACA,QAAIJ,MAAM,KAAK,KAAf,EAAsB;AACpBI,MAAAA,OAAO,GAAG;AACRJ,QAAAA,MAAM,EAAE;AADA,OAAV;AAGD,KAJD,MAIO;AACLI,MAAAA,OAAO,GAAG;AACRJ,QAAAA,MAAM,EAAEA,MADA;AAERK,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFE;AAGRO,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAHD;AAMRC,QAAAA,WAAW,EAAE;AANL,OAAV;AAQD;;AAED,QAAIb,QAAQ,GAAGc,KAAK,CAACX,IAAD,EAAOK,OAAP,CAApB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAQ,CAACiB,IAAT,GAAgBC,MAA5B;;AACA,QAAIlB,QAAQ,CAACkB,MAAT,KAAoB,GAAxB,EAA6B;AAC3BH,MAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,aAAOf,MAAM,CAACD,QAAD,CAAb;AACD,KAvBwD,CAwBzD;AACA;AACA;;;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,WAAOjB,OAAO,CAACC,QAAQ,CAACiB,IAAT,EAAD,CAAd;AACD,GA7BmB,CAApB;AA8BA,SAAOX,aAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["function resolve(response) {\n  return response;\n}\n\nfunction reject(response) {\n  return response;\n}\n\nexport function runAjax(link, method = \"GET\", data = {}) {\n  var promiseObject = new Promise(function (resolve, reject) {\n    let options;\n    if (method === \"GET\") {\n      options = {\n        method: \"GET\",\n      };\n    } else {\n      options = {\n        method: method,\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"same-origin\",\n      };\n    }\n\n    let response = fetch(link, options);\n    console.log(response.json().status)\n    if (response.status !== 200) {\n      console.log(response)\n      console.log(\"Rejected\")\n      return reject(response);\n    }\n    // if (method === \"DELETE\") {\n    //   return \"Success\";\n    // }\n    console.log(\"Resolved\")\n    return resolve(response.json());\n  });\n  return promiseObject\n}\n\n// export function runAjax(link, method = \"GET\", data = {}) {\n//   var promiseObject = new Promise(async function (resolve, reject) {\n//     let options;\n//     if (method == \"GET\") {\n//       options = { method: method };\n//     } else {\n//       options = {\n//         method: method,\n//         body: JSON.stringify(data),\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         credentials: \"same-origin\",\n//       };\n//     }\n// \n//     fetch(link, options)\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw response;\n//         }\n//         return reject(response.json());\n//       })\n//       .then((result) => {\n//         // callback(result);\n//       })\n//       .catch((error) => {\n//         if (error.statusText) {\n//           reject(error)\n//         }\n//       });\n//   });\n// }\n"]},"metadata":{},"sourceType":"module"}