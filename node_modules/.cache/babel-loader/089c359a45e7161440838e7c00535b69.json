{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport ActionTypes from \"./constants/ActionTypes\";\nimport { fetchSports } from \"./actions/Actions\";\nimport { createSlice, createAction } from \"@reduxjs/toolkit\"; //     case ActionTypes.POST_SPORT:\n//       console.log(action.sport)\n//       return Object.assign({}, state, {\n//         sports: state.sports.concat(action.sport),\n//       });\n//     case [fetchSports.pending]:\n//       console.log(\"Pending\");\n//     default:\n//       return state;\n//   }\n// }\n\nconst initialState = {\n  sports: [],\n  status: \"idle\",\n  error: null\n};\nconst sportsSlice = createSlice({\n  name: \"sports\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchSports.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [fetchSports.fulfilled]: (state, action) => {\n      state.sports = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [fetchSports.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [postSport.fulfilled]: (state, action) => {\n      state.sports = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [postSport.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    }\n  }\n}); // const reducer = combineReducers({ sportsSlice.reducer });\n\nexport default sportsSlice.reducer;","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/survey/src/reducers.js"],"names":["combineReducers","ActionTypes","fetchSports","createSlice","createAction","initialState","sports","status","error","sportsSlice","name","reducers","extraReducers","pending","state","action","fulfilled","payload","data","rejected","postSport","reducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,kBAA1C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,MAAM,EAAE,EAAV;AAAcC,EAAAA,MAAM,EAAE,MAAtB;AAA8BC,EAAAA,KAAK,EAAE;AAArC,CAArB;AACA,MAAMC,WAAW,GAAGN,WAAW,CAAC;AAC9BO,EAAAA,IAAI,EAAE,QADwB;AAE9BL,EAAAA,YAF8B;AAG9BM,EAAAA,QAAQ,EAAE,EAHoB;AAI9BC,EAAAA,aAAa,EAAE;AACb,KAACV,WAAW,CAACW,OAAb,GAAuB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACP,MAAN,GAAe,SAAf;AACD,KAHY;AAIb,KAACL,WAAW,CAACc,SAAb,GAAyB,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC1CD,MAAAA,KAAK,CAACR,MAAN,GAAeS,MAAM,CAACE,OAAP,CAAeC,IAA9B;AACAJ,MAAAA,KAAK,CAACP,MAAN,GAAe,WAAf;AACD,KAPY;AAQb,KAACL,WAAW,CAACiB,QAAb,GAAwB,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACP,KAArB;AACAM,MAAAA,KAAK,CAACP,MAAN,GAAe,QAAf;AACD,KAXY;AAYb,KAACa,SAAS,CAACJ,SAAX,GAAuB,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACR,MAAN,GAAeS,MAAM,CAACE,OAAP,CAAeC,IAA9B;AACAJ,MAAAA,KAAK,CAACP,MAAN,GAAe,WAAf;AACD,KAfY;AAgBb,KAACa,SAAS,CAACD,QAAX,GAAsB,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACP,KAArB;AACAM,MAAAA,KAAK,CAACP,MAAN,GAAe,QAAf;AACD;AAnBY;AAJe,CAAD,CAA/B,C,CA2BA;;AAEA,eAAeE,WAAW,CAACY,OAA3B","sourcesContent":["import { combineReducers } from \"redux\";\nimport ActionTypes from \"./constants/ActionTypes\";\nimport { fetchSports } from \"./actions/Actions\";\nimport { createSlice, createAction } from \"@reduxjs/toolkit\";\n\n//     case ActionTypes.POST_SPORT:\n//       console.log(action.sport)\n//       return Object.assign({}, state, {\n//         sports: state.sports.concat(action.sport),\n//       });\n//     case [fetchSports.pending]:\n//       console.log(\"Pending\");\n//     default:\n//       return state;\n//   }\n// }\nconst initialState = { sports: [], status: \"idle\", error: null };\nconst sportsSlice = createSlice({\n  name: \"sports\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchSports.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [fetchSports.fulfilled]: (state, action) => {\n      state.sports = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [fetchSports.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n    [postSport.fulfilled]: (state, action) => {\n      state.sports = action.payload.data;\n      state.status = \"succeeded\";\n    },\n    [postSport.rejected]: (state, action) => {\n      state.error = action.error;\n      state.status = \"failed\";\n    },\n  },\n});\n\n// const reducer = combineReducers({ sportsSlice.reducer });\n\nexport default sportsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}