{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreyigims/Documents/survey/src/containers/companies/CompaniesContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { companies as formHelpers } from \"../../utils/Schemas\";\nimport { companyForm as form } from \"../../utils/Forms\";\nimport { fetchCompanies, postCompany } from \"../../actions/Actions\";\n\nclass CompaniesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableHeaders: [\"Name\", \"Brokers\"],\n      name: \"company\",\n      plural: \"companies\"\n    };\n\n    this.showObjects = objects => {\n      return objects.map((object, index) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"link\",\n          href: \"/companies/\" + object.attributes.id,\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }\n        }, object.attributes.name), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n          width: \"200\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        }, object.attributes.brokers.length));\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchCompanies());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListStructure, {\n      objects: this.props.leagues,\n      status: this.props.status,\n      showObjects: this.showObjects,\n      tableHeaders: this.state.tableHeaders,\n      name: this.state.name,\n      plural: this.state.plural,\n      formHelpers: formHelpers,\n      form: form,\n      postObject: this.props.dispatch(postLeague(values)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nLeaguesContainer.propTypes = {\n  sports: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nfunction mapStateToProps(state) {\n  const {\n    leagues,\n    status,\n    error\n  } = state.leagues;\n  const {\n    sports\n  } = state.sports;\n  return {\n    sports,\n    leagues,\n    status,\n    error\n  };\n}\n\nexport default connect(mapStateToProps)(LeaguesContainer);","map":{"version":3,"sources":["/Users/jeffreyigims/Documents/survey/src/containers/companies/CompaniesContainer.js"],"names":["React","Component","connect","ListStructure","PropTypes","Button","companies","formHelpers","companyForm","form","fetchCompanies","postCompany","CompaniesContainer","state","tableHeaders","name","plural","showObjects","objects","map","object","index","attributes","id","color","brokers","length","componentDidMount","props","dispatch","render","leagues","status","postLeague","values","LeaguesContainer","propTypes","sports","isRequired","string","error","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { companies as formHelpers } from \"../../utils/Schemas\";\nimport { companyForm as form } from \"../../utils/Forms\";\nimport { fetchCompanies, postCompany } from \"../../actions/Actions\";\n\nclass CompaniesContainer extends Component {\n  state = {\n    tableHeaders: [\"Name\", \"Brokers\"],\n    name: \"company\",\n    plural: \"companies\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchCompanies());\n  }\n\n  showObjects = (objects) => {\n    return objects.map((object, index) => {\n      return (\n        <tr key={index}>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/companies/\" + object.attributes.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.name}\n            </Button>{\" \"}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.brokers.length}\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <ListStructure\n          objects={this.props.leagues}\n          status={this.props.status}\n          showObjects={this.showObjects}\n          tableHeaders={this.state.tableHeaders}\n          name={this.state.name}\n          plural={this.state.plural}\n          formHelpers={formHelpers}\n          form={form}\n          postObject={this.props.dispatch(postLeague(values))}\n        />\n      </>\n    );\n  }\n}\n\nLeaguesContainer.propTypes = {\n  sports: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  const { leagues, status, error } = state.leagues;\n  const { sports } = state.sports;\n  return { sports, leagues, status, error };\n}\n\nexport default connect(mapStateToProps)(LeaguesContainer);\n"]},"metadata":{},"sourceType":"module"}