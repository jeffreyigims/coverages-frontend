{"version":3,"sources":["utils/APIUtils.js","actions/Actions.js","Reducers.js","ConfigureStore.js","components/GeneralTable.js","components/PaginatedTable.js","utils/Helpers.js","components/NewObject.js","components/ListStructure.js","utils/Schemas.js","utils/Forms.js","containers/sports/SportsContainer.js","components/EditObject.js","components/DetailStructure.js","containers/sports/SportContainer.js","containers/leagues/LeaguesContainer.js","containers/leagues/LeagueContainer.js","containers/clubs/ClubsContainer.js","containers/clubs/AddGroup.js","containers/clubs/ClubDetails.js","containers/clubs/ClubContainer.js","containers/groups/GroupsContainer.js","containers/groups/GroupContainer.js","containers/categories/CategoriesContainer.js","containers/sub_categories/AddSubCategory.js","containers/categories/CategoryDetails.js","containers/categories/CategoryContainer.js","containers/carriers/CarriersContainer.js","containers/carriers/CarrierContainer.js","containers/companies/CompaniesContainer.js","containers/brokers/AddBroker.js","containers/companies/CompanyDetails.js","containers/companies/CompanyContainer.js","containers/users/UsersContainer.js","containers/users/UserDetails.js","containers/users/UserContainer.js","containers/coverages/CoveragesContainer.js","containers/coverages/CoverageDetails.js","containers/coverages/CoverageContainer.js","containers/brokers/BrokerContainer.js","containers/sub_categories/SubCategoryContainer.js","containers/coverage_wizard/CoverageWizardContainer.js","containers/AlertsContainer.js","components/Navigation.js","containers/Root.js","index.js"],"names":["base","runAjax","link","method","data","rejectWithValue","promiseObject","Promise","resolve","reject","a","options","URLSearchParams","body","JSON","stringify","headers","credentials","fetch","response","r","ok","json","catch","error","status","statusText","res","dismissAlert","createAction","createFetch","name","createAsyncThunk","values","createPost","object","createGet","id","createUpdate","params","createDelete","fetchCoverages","parameters","fetchSports","postSport","fetchSport","updateSport","deleteSport","fetchLeagues","postLeague","fetchLeague","updateLeague","deleteLeague","fetchClubs","postClub","fetchClub","updateClub","deleteClub","fetchGroups","postGroup","fetchGroup","updateGroup","deleteGroup","fetchCategories","postCategory","fetchCategory","updateCategory","deleteCategory","fetchCompanies","postCompany","fetchCompany","updateCompany","deleteCompany","fetchBrokers","postBroker","fetchBroker","updateBroker","deleteBroker","fetchCarriers","postCarrier","fetchCarrier","updateCarrier","deleteCarrier","fetchUsers","postUser","fetchUser","updateUser","deleteUser","postSubCategory","fetchSubCategory","deleteSubCategory","postClubGroup","postCoverage","fetchCoverage","updateCoverage","postCoverageCarrier","deleteCoverageCarrier","postCoverageBroker","deleteCoverageBroker","postCoverageAssociations","coverage","carriers","brokers","dispatch","then","coverage_id","payload","map","carrier_id","broker_id","updateCoverageAssociations","needAdded","needDestroyed","fulfilledNew","state","alerts","concat","message","variant","fulfilledUpdated","fulfilledDeleted","rejected","action","errors","rejectedFetch","redirectionSlice","createSlice","initialState","redirect","reducers","extraReducers","fulfilled","attributes","company","createTableReducer","type","Object","assign","selected","createSpecialTableReducer","target","secondary","reducer","combineReducers","sports","leagues","clubs","groups","club_groups","companies","users","categories","sub_categories","coverages","objects","pages","page","createPaginatedTableReducer","split","pop","new_action","redirections","loggerMiddleware","createLogger","GeneralTable","this","props","showObjects","tableHeaders","Row","className","Spinner","animation","length","Table","striped","bordered","hover","header","key","React","Component","PaginatedTable","onPageChange","Pagination","defaultActivePage","totalPages","capitalize","string","charAt","toUpperCase","slice","canDelete","club","NewObject","handleClose","switchModal","Modal","show","onHide","Header","closeButton","Title","Body","validationSchema","formHelpers","schema","onSubmit","postObject","initialValues","handleSubmit","handleChange","setFieldValue","Form","noValidate","form","Button","ListStructure","modal_new","modal","setState","prevState","Card","style","marginTop","plural","Footer","onClick","slot","yup","required","level","sport_index","abbreviation","league_index","group_index","club_index","category_index","sub_category_index","notes","start_date","Date","end_date","has_coverage_line","verified","coverage_wizard","first_name","last_name","role","username","objectOptions","index","value","objectOptionsID","objectGroupOptions","group","objectDataOptions","sportForm","Group","as","Col","Label","Control","onChange","isInvalid","Feedback","leagueForm","clubForm","companyForm","brokerForm","disabled","categoryForm","carrierForm","userForm","groupForm","SportsContainer","width","align","href","color","connect","EditObject","new_values","updateObject","DetailStructure","modal_edit","redirection","to","showDetails","deleteObject","marginRight","SportContainer","match","LeaguesContainer","new_object","sport_id","LeagueContainer","club_groups_count","ClubsContainer","league","league_id","AddGroup","ClubDetails","modal_groups","formHelpersGroups","formGroups","ClubContainer","e","activePage","for_club","club_id","group_id","GroupsContainer","GroupContainer","CategoriesContainer","associated_sub_categories","AddSubCategory","postSub","CategoryDetails","modal_sub","associated_coverages","formHelpersSub","formSub","CategoryContainer","category_id","category","CarriersContainer","CarrierContainer","sub_category","user","format","created_at","updated_at","for_carrier","CompaniesContainer","AddSub","CompanyDetails","modal_broker","AddBroker","formHelpersBroker","formBroker","CompanyContainer","postSubBroker","company_id","UsersContainer","password","password_confirmation","UserDetails","UserContainer","coveragesStatus","for_user","CoveragesContainer","club_group_id","sub_category_id","carrier_index","broker_index","multiple","event","Array","from","selectedOptions","option","Check","label","CoverageDetails","parse","coverage_carriers","coverage_carrier","coverage_brokers","submit","enableReinitialize","dirty","Number","checked","CoverageContainer","includes","arr","i","handleBrokers","curr","filter","handleCarriers","deleteCoverage","console","log","BrokerContainer","for_broker","SubCategoryContainer","for_sub_category","CoverageWizardContainer","clubOptions","handleCreate","sport","club_group","statuses","groupStatus","sportsStatus","clubsStatus","categoriesStatus","carriersStatus","brokersStatus","AlertsContainer","displayErrors","showAlerts","alert","Alert","onClose","dismissible","margin","preloadedState","Navigation","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","Root","path","exact","component","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b84f597.chunk.js","sourcesContent":["function resolve(response) {\n  return response;\n}\n\nfunction reject(response) {\n  return response;\n}\n\nconst base = \"https://coverages-backend.herokuapp.com\";\n// const base = \"http://localhost:3000\";\n\nexport function runAjax(link, method = \"GET\", data = {}, rejectWithValue = {}) {\n  var promiseObject = new Promise(async function (resolve, reject) {\n    let options;\n    if (method === \"GET\") {\n      options = {\n        method: \"GET\",\n      };\n      link = base + link + \"?\" + new URLSearchParams(data);\n    } else {\n      options = {\n        method: method,\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"same-origin\",\n      };\n      link = base + link;\n    }\n\n    let response = await fetch(link, options);\n    const r = response;\n    if (!response.ok) {\n      let res = await response.json().catch((error) => {\n        resolve(rejectWithValue({ status: r.statusText }));\n      });\n      return resolve(rejectWithValue(res));\n    }\n    // if (method === \"DELETE\") {\n    //   return \"Success\";\n    // }\n    return resolve(response.json());\n  });\n  // console.log(promiseObject)\n  return promiseObject;\n}\n\n// export function runAjax(link, method = \"GET\", data = {}) {\n//   var promiseObject = new Promise(async function (resolve, reject) {\n//     let options;\n//     if (method == \"GET\") {\n//       options = { method: method };\n//     } else {\n//       options = {\n//         method: method,\n//         body: JSON.stringify(data),\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         credentials: \"same-origin\",\n//       };\n//     }\n//\n//     fetch(link, options)\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw response;\n//         }\n//         return reject(response.json());\n//       })\n//       .then((result) => {\n//         // callback(result);\n//       })\n//       .catch((error) => {\n//         if (error.statusText) {\n//           reject(error)\n//         }\n//       });\n//   });\n// }\n","import { runAjax } from \"../utils/APIUtils\";\nimport { createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\n\nexport const dismissAlert = createAction(\"alerts/dismissAlert\");\n\nfunction createFetch(name = \"\") {\n  return createAsyncThunk(\n    `${name}/fetch_${name}`,\n    async (values, { rejectWithValue }) => {\n      const response = await runAjax(\n        `/${name}.json`,\n        \"GET\",\n        {},\n        rejectWithValue\n      );\n      return response;\n    }\n  );\n}\n\nfunction createPost(name = \"\", object = \"\") {\n  return createAsyncThunk(\n    `${name}/post_${name}`,\n    async (values, { rejectWithValue }) => {\n      const response = await runAjax(\n        `/${name}.json`,\n        \"POST\",\n        {\n          [object]: values,\n        },\n        rejectWithValue\n      );\n      return response;\n    }\n  );\n}\n\nfunction createGet(name = \"\") {\n  return createAsyncThunk(\n    `${name}/get_${name}`,\n    async (id, { rejectWithValue }) => {\n      const response = await runAjax(\n        `/${name}/${id}.json`,\n        \"GET\",\n        {},\n        rejectWithValue\n      );\n      return response;\n    }\n  );\n}\n\nfunction createUpdate(name = \"\", object = \"\") {\n  return createAsyncThunk(\n    `${name}/update_${name}`,\n    async (params, { rejectWithValue }) => {\n      const response = await runAjax(\n        `/${name}/${params.id}.json`,\n        \"PATCH\",\n        {\n          [object]: params.values,\n        },\n        rejectWithValue\n      );\n      return response;\n    }\n  );\n}\n\nfunction createDelete(name = \"\") {\n  return createAsyncThunk(\n    `${name}/delete_${name}`,\n    async (id, { rejectWithValue }) => {\n      const response = await runAjax(\n        `/${name}/${id}.json`,\n        \"DELETE\",\n        {},\n        rejectWithValue\n      );\n      return response;\n    }\n  );\n}\n\nexport const fetchCoverages = createAsyncThunk(\n  \"coverages/fetch_coverages\",\n  async (parameters, { rejectWithValue }) => {\n    const response = await runAjax(\n      \"/coverages.json\",\n      \"GET\",\n      parameters,\n      rejectWithValue\n    );\n    return response;\n  }\n);\n\nexport const fetchSports = createFetch(\"sports\");\nexport const postSport = createPost(\"sports\", \"sport\");\nexport const fetchSport = createGet(\"sports\");\nexport const updateSport = createUpdate(\"sports\", \"sport\");\nexport const deleteSport = createDelete(\"sports\");\n\nexport const fetchLeagues = createFetch(\"leagues\");\nexport const postLeague = createPost(\"leagues\", \"league\");\nexport const fetchLeague = createGet(\"leagues\");\nexport const updateLeague = createUpdate(\"leagues\", \"league\");\nexport const deleteLeague = createDelete(\"leagues\");\n\nexport const fetchClubs = createFetch(\"clubs\");\nexport const postClub = createPost(\"clubs\", \"club\");\nexport const fetchClub = createGet(\"clubs\");\nexport const updateClub = createUpdate(\"clubs\", \"club\");\nexport const deleteClub = createDelete(\"clubs\");\n\nexport const fetchGroups = createFetch(\"groups\");\nexport const postGroup = createPost(\"groups\", \"group\");\nexport const fetchGroup = createGet(\"groups\");\nexport const updateGroup = createUpdate(\"groups\", \"group\");\nexport const deleteGroup = createDelete(\"groups\");\n\nexport const fetchCategories = createFetch(\"categories\");\nexport const postCategory = createPost(\"categories\", \"category\");\nexport const fetchCategory = createGet(\"categories\");\nexport const updateCategory = createUpdate(\"categories\", \"category\");\nexport const deleteCategory = createDelete(\"categories\");\n\nexport const fetchCompanies = createFetch(\"companies\");\nexport const postCompany = createPost(\"companies\", \"company\");\nexport const fetchCompany = createGet(\"companies\");\nexport const updateCompany = createUpdate(\"companies\", \"company\");\nexport const deleteCompany = createDelete(\"companies\");\n\nexport const fetchBrokers = createFetch(\"brokers\");\nexport const postBroker = createPost(\"brokers\", \"broker\");\nexport const fetchBroker = createGet(\"brokers\");\nexport const updateBroker = createUpdate(\"brokers\", \"broker\");\nexport const deleteBroker = createDelete(\"brokers\");\n\nexport const fetchCarriers = createFetch(\"carriers\");\nexport const postCarrier = createPost(\"carriers\", \"carrier\");\nexport const fetchCarrier = createGet(\"carriers\");\nexport const updateCarrier = createUpdate(\"carriers\", \"carrier\");\nexport const deleteCarrier = createDelete(\"carriers\");\n\nexport const fetchUsers = createFetch(\"users\");\nexport const postUser = createPost(\"users\", \"user\");\nexport const fetchUser = createGet(\"users\");\nexport const updateUser = createUpdate(\"users\", \"user\");\nexport const deleteUser = createDelete(\"users\");\n\nexport const postSubCategory = createPost(\"sub_categories\", \"sub_category\");\nexport const fetchSubCategory = createGet(\"sub_categories\");\nexport const deleteSubCategory = createDelete(\"sub_categories\");\n\nexport const postClubGroup = createPost(\"club_groups\", \"club_group\");\n\n// export const fetchCoverages = createFetch(\"coverages\");\nexport const postCoverage = createPost(\"coverages\", \"coverage\");\nexport const fetchCoverage = createGet(\"coverages\");\nexport const updateCoverage = createUpdate(\"coverages\", \"coverage\");\nexport const deleteCoverage = createDelete(\"coverages\");\n\nexport const postCoverageCarrier = createPost(\n  \"coverage_carriers\",\n  \"coverage_carrier\"\n);\nexport const deleteCoverageCarrier = createDelete(\"coverage_carriers\");\n\nexport const postCoverageBroker = createPost(\n  \"coverage_brokers\",\n  \"coverage_broker\"\n);\nexport const deleteCoverageBroker = createDelete(\"coverage_brokers\");\n\nexport function postCoverageAssociations(coverage, carriers, brokers) {\n  return (dispatch) => {\n    dispatch(postCoverage(coverage)).then((response) => {\n      let coverage_id = response.payload.data.id;\n      carriers.map((carrier_id) =>\n        dispatch(\n          postCoverageCarrier({\n            coverage_id: coverage_id,\n            carrier_id: carrier_id,\n          })\n        )\n      );\n      brokers.map((broker_id) =>\n        dispatch(\n          postCoverageBroker({\n            coverage_id: coverage_id,\n            broker_id: broker_id,\n          })\n        )\n      );\n    });\n  };\n}\n\nexport function updateCoverageAssociations(params, carriers, brokers) {\n  return async (dispatch) => {\n    await carriers.needAdded.map((object) =>\n      dispatch(\n        postCoverageCarrier({\n          coverage_id: params.id,\n          carrier_id: object,\n        })\n      )\n    );\n    await carriers.needDestroyed.map((object) =>\n      dispatch(deleteCoverageCarrier(object))\n    );\n    await brokers.needAdded.map((object) =>\n      dispatch(\n        postCoverageBroker({\n          coverage_id: params.id,\n          broker_id: object,\n        })\n      )\n    );\n    await brokers.needDestroyed.map((object) =>\n      dispatch(deleteCoverageBroker(object))\n    );\n    dispatch(updateCoverage(params));\n  };\n}\n\nexport function deleteCoverageAssociations(coverage, carriers, brokers) {}\n","import { combineReducers } from \"redux\";\nimport {\n  dismissAlert,\n  deleteSport,\n  deleteLeague,\n  deleteClub,\n  deleteGroup,\n  deleteCategory,\n  deleteCarrier,\n  deleteCompany,\n  deleteBroker,\n  deleteUser,\n  deleteSubCategory,\n} from \"./actions/Actions\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst fulfilledNew = (state) => {\n  let alerts = state.alerts.concat({\n    message: \"The object was successfully added to the system.\",\n    variant: \"success\",\n  });\n  return { alerts };\n};\n\nconst fulfilledUpdated = (state) => {\n  let alerts = state.alerts.concat({\n    message: \"The object was successfully updated in the system.\",\n    variant: \"success\",\n  });\n  return { alerts };\n};\n\nconst fulfilledDeleted = (state) => {\n  let alerts = state.alerts.concat({\n    message: \"The object was successfully deleted in the system.\",\n    variant: \"success\",\n  });\n  return { alerts };\n};\n\nconst rejected = (state, action) => {\n  let alerts = state.alerts.concat({\n    message: \"The action could not be completed for the following reasons:\",\n    variant: \"danger\",\n    errors: action.payload,\n  });\n  return { alerts };\n};\n\nconst rejectedFetch = (state, action) => {\n  let alerts = state.alerts.concat({\n    message: \"The data could not be fetched for the following reasons:\",\n    variant: \"danger\",\n    errors: action.payload,\n  });\n  return { alerts };\n};\n\nfunction alerts(state = { alerts: [] }, action) {\n  if (action.type === \"alerts/dismissAlert\") {\n    return { alerts: [] };\n  }\n  const status = action.type.split(\"/\").pop();\n  const new_action = action.type.split(\"/\")[1].split(\"_\")[0];\n  if (status === \"rejected\" && new_action !== \"fetch\" && new_action !== \"get\") {\n    return rejected(state, action);\n  }\n  if (status === \"rejected\") {\n    return rejectedFetch(state, action);\n  }\n  if (status === \"pending\") {\n    return state;\n  }\n  switch (new_action) {\n    case \"post\":\n      return fulfilledNew(state);\n    case \"update\":\n      return fulfilledUpdated(state);\n    case \"delete\":\n      return fulfilledDeleted(state);\n    default:\n      return state;\n  }\n}\n\nconst redirectionSlice = createSlice({\n  name: \"redirections\",\n  initialState: { link: \"\", redirect: false },\n  reducers: {},\n  extraReducers: {\n    [deleteSport.fulfilled]: (state, action) => {\n      state.link = \"/sports\";\n      state.redirect = true;\n    },\n    [deleteLeague.fulfilled]: (state, action) => {\n      state.link = \"/leagues\";\n      state.redirect = true;\n    },\n    [deleteClub.fulfilled]: (state, action) => {\n      state.link = \"/clubs\";\n      state.redirect = true;\n    },\n    [deleteGroup.fulfilled]: (state, action) => {\n      state.link = \"/groups\";\n      state.redirect = true;\n    },\n    [deleteCategory.fulfilled]: (state, action) => {\n      state.link = \"/categories\";\n      state.redirect = true;\n    },\n    [deleteSubCategory.fulfilled]: (state, action) => {\n      state.link = \"/categories\";\n      state.redirect = true;\n    },\n    [deleteCarrier.fulfilled]: (state, action) => {\n      state.link = \"/carriers\";\n      state.redirect = true;\n    },\n    [deleteCompany.fulfilled]: (state, action) => {\n      state.link = \"/companies\";\n      state.redirect = true;\n    },\n    [deleteBroker.fulfilled]: (state, action) => {\n      const id = action.payload.data.attributes.company.id;\n      state.link = \"/companies/\".concat(id);\n      state.redirect = true;\n    },\n    [deleteUser.fulfilled]: (state, action) => {\n      state.link = \"/users\";\n      state.redirect = true;\n    },\n  },\n});\n\nfunction createTableReducer(name = \"\") {\n  let initialState = {\n    [name]: [],\n    status: \"idle\",\n    errors: null,\n    selected: null,\n  };\n  return function reducer(state = initialState, action) {\n    switch (action.type) {\n      case `${name}/fetch_${name}/pending`:\n        return Object.assign({}, state, {\n          status: \"loading\",\n        });\n      case `${name}/fetch_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\",\n          errors: action.payload,\n        });\n      case `${name}/fetch_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          [name]: action.payload.data,\n          status: \"succeeded\",\n        });\n      case `${name}/post_${name}/rejected`:\n        return Object.assign({}, state, {\n          [name]: state[name],\n          errors: action.payload,\n        });\n      case `${name}/post_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          [name]: state[name].concat(action.payload.data),\n          status: \"succeeded\",\n        });\n      case `${name}/get_${name}/pending`:\n        return Object.assign({}, state, {\n          status: \"loading\",\n        });\n      case `${name}/get_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\",\n        });\n      case `${name}/get_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          selected: action.payload.data,\n          status: \"succeeded\",\n        });\n      case `${name}/update_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\",\n        });\n      case `${name}/update_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          selected: action.payload.data,\n          status: \"succeeded\",\n        });\n      case `${name}/delete_${name}/rejected`:\n        return Object.assign({}, state, {\n          selected: state.selected,\n        });\n      // case `${name}/delete_${name}/fulfilled`:\n      //   return Object.assign({}, state, {\n      //     status: \"succeeded\",\n      //   });\n      default:\n        return state;\n    }\n  };\n}\n\nfunction createPaginatedTableReducer(name = \"\") {\n  let initialState = {\n    [name]: [],\n    status: \"idle\",\n    errors: null,\n    selected: null,\n    page: 1,\n    pages: null,\n  };\n  return function reducer(state = initialState, action) {\n    switch (action.type) {\n      case `${name}/fetch_${name}/pending`:\n        return Object.assign({}, state, {\n          status: \"loading\",\n        });\n      case `${name}/fetch_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\",\n        });\n      case `${name}/fetch_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          [name]: action.payload.objects.data,\n          pages: action.payload.pages,\n          page: action.payload.page,\n          status: \"succeeded\",\n        });\n      case `${name}/post_${name}/rejected`:\n        return Object.assign({}, state, {\n          [name]: state[name],\n          error: action.payload,\n        });\n      case `${name}/post_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          [name]: [action.payload.data].concat(state[name]),\n          status: \"succeeded\",\n        });\n      case `${name}/get_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\",\n        });\n      case `${name}/get_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          selected: action.payload.data,\n          status: \"succeeded\",\n        });\n      case `${name}/update_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\",\n        });\n      case `${name}/update_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          selected: action.payload.data,\n          status: \"succeeded\",\n        });\n      case `${name}/delete_${name}/rejected`:\n        return Object.assign({}, state, {\n          selected: state.selected,\n        });\n      // case `${name}/delete_${name}/fulfilled`:\n      //   return Object.assign({}, state, {\n      //     status: \"succeeded\",\n      //   });\n      default:\n        return state;\n    }\n  };\n}\n\nfunction createSpecialTableReducer(name = \"\", target = \"\") {\n  let initialState = {\n    [name]: [],\n    status: \"idle\",\n    errors: null,\n    selected: null,\n    secondary: [],\n  };\n  return function reducer(state = initialState, action) {\n    switch (action.type) {\n      case `${name}/fetch_${name}/pending`:\n        return Object.assign({}, state, {\n          status: \"loading\",\n        });\n      case `${name}/fetch_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\",\n          errors: action.payload,\n        });\n      case `${name}/fetch_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          [name]: action.payload.data,\n          status: \"succeeded\",\n        });\n      case `${name}/post_${name}/rejected`:\n        return Object.assign({}, state, {\n          [name]: state[name],\n          errors: action.payload,\n        });\n      case `${name}/post_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          [name]: state[name].concat(action.payload.data),\n          status: \"succeeded\",\n        });\n      case `${name}/get_${name}/pending`:\n        return Object.assign({}, state, {\n          status: \"loading\",\n        });\n      case `${name}/get_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\",\n        });\n      case `${name}/get_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          selected: action.payload.data,\n          status: \"succeeded\",\n          secondary: action.payload.data.attributes[target],\n        });\n      case `${name}/update_${name}/rejected`:\n        return Object.assign({}, state, {\n          status: \"failed\",\n        });\n      case `${name}/update_${name}/fulfilled`:\n        return Object.assign({}, state, {\n          selected: action.payload.data,\n          status: \"succeeded\",\n        });\n      case `${name}/delete_${name}/rejected`:\n        return Object.assign({}, state, {\n          selected: state.selected,\n        });\n      // case `${name}/delete_${name}/fulfilled`:\n      //   return Object.assign({}, state, {\n      //     status: \"succeeded\",\n      //   });\n      case `${target}/post_${target}/fulfilled`:\n        return Object.assign({}, state, {\n          selected: state.selected,\n          secondary: state.secondary.concat(action.payload),\n        });\n      default:\n        return state;\n    }\n  };\n}\n\nconst reducer = combineReducers({\n  sports: createTableReducer(\"sports\"),\n  leagues: createTableReducer(\"leagues\"),\n  clubs: createTableReducer(\"clubs\"),\n  groups: createTableReducer(\"groups\"),\n  club_groups: createTableReducer(\"club_groups\"),\n  companies: createSpecialTableReducer(\"companies\", \"brokers\"),\n  brokers: createTableReducer(\"brokers\"),\n  carriers: createTableReducer(\"carriers\"),\n  users: createTableReducer(\"users\"),\n  categories: createSpecialTableReducer(\"categories\", \"sub_categories\"),\n  sub_categories: createTableReducer(\"sub_categories\"),\n  coverages: createPaginatedTableReducer(\"coverages\"),\n  alerts: alerts,\n  redirections: redirectionSlice.reducer,\n});\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from './Reducers'\n\nconst loggerMiddleware = createLogger()\n\nexport default function configureStore(preloadedState) {\n  return createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(thunkMiddleware, loggerMiddleware)\n  )\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Table, Spinner, Row } from \"react-bootstrap\";\n\nexport default class GeneralTable extends React.Component {\n  render() {\n    const { objects, showObjects, tableHeaders, status } = this.props;\n    return (\n      <>\n        <Row className=\"row justify-content-center\">\n          {status === \"loading\" && (\n            <Spinner animation=\"border\" variant=\"primary\" />\n          )}\n        </Row>\n        {status === \"succeeded\" &&\n          (objects.length > 0 ? (\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  {tableHeaders.map((header) => (\n                    <th key={header}>{header}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>{showObjects(objects)}</tbody>\n            </Table>\n          ) : (\n            \"There is no data to display at this time.\"\n          ))}\n      </>\n    );\n  }\n}\n\nGeneralTable.propTypes = {\n  objects: PropTypes.arrayOf(PropTypes.object).isRequired,\n  showObjects: PropTypes.func.isRequired,\n  tableHeaders: PropTypes.arrayOf(PropTypes.string).isRequired,\n  status: PropTypes.string,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GeneralTable from \"./GeneralTable\";\nimport { Pagination } from \"semantic-ui-react\";\nimport { Row } from \"react-bootstrap\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nexport default class PaginatedTable extends React.Component {\n  render() {\n    return (\n      <>\n        <GeneralTable\n          tableHeaders={this.props.tableHeaders}\n          showObjects={this.props.showObjects}\n          objects={this.props.objects}\n          status={this.props.status}\n        />\n        {this.props.objects.length > 0 &&\n          this.props.onPageChange != null &&\n          this.props.status === \"succeeded\" && (\n            <Row className=\"row justify-content-center\">\n              <Pagination\n                onPageChange={this.props.onPageChange}\n                defaultActivePage={this.props.defaultActivePage}\n                totalPages={this.props.totalPages}\n              />\n            </Row>\n          )}\n      </>\n    );\n  }\n}\n\nPaginatedTable.propTypes = {\n  objects: PropTypes.arrayOf(PropTypes.object).isRequired,\n  showObjects: PropTypes.func.isRequired,\n  tableHeaders: PropTypes.arrayOf(PropTypes.string).isRequired,\n  message: PropTypes.string,\n  showObjects: PropTypes.func.isRequired,\n  defaultActivePage: PropTypes.number,\n  totalPages: PropTypes.number,\n};\n","// Returns a capitalized string for use in page titles \nexport function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n// Used in determining if a button should be displayed to delete a specific object\nexport function canDelete(object) {\n  switch (object.type) {\n    case \"sport\":\n      return object.attributes.leagues.length === 0 ? true : false;\n    case \"league\":\n      return object.attributes.clubs.length === 0 ? true : false;\n    case \"club\":\n      return object.attributes.club_groups.length === 0 ? true : false;\n    case \"company\":\n      return object.attributes.brokers.length === 0 ? true : false;\n    case \"broker\":\n      return object.attributes.coverages.length === 0 ? true : false;\n    case \"carrier\":\n      return object.attributes.coverages.length === 0 ? true : false;\n    case \"category\":\n      return object.attributes.sub_categories.length === 0 ? true : false;\n    case \"sub_category\":\n      return object.attributes.coverages.length === 0 ? true : false;\n    case \"group\":\n      return object.attributes.club_groups.length === 0 ? true : false;\n    case \"user\":\n      return object.attributes.coverages.length === 0 &&\n        object.attributes.club === \"\"\n        ? true\n        : false;\n    default:\n      return true;\n  }\n}\n\n// Takes a group of statuses and returns a successful status if all of the statuses are marked successfull\nexport function groupStatus(statuses) {\n  const status = \"succeeded\";\n  for (var key in statuses) {\n    if (statuses[key] === \"failed\") {\n      return \"failed\";\n    } else if (statuses[key] === \"loading\") {\n      return \"loading\";\n    } else if (statuses[key] === \"idle\") {\n      return \"idle\";\n    }\n  }\n  return status;\n}\n","import React from \"react\";\nimport { Modal, Form, Button } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport { capitalize } from \"../utils/Helpers\";\n\nclass NewObject extends React.Component {\n  handleClose = (name) => {\n    this.props.switchModal(name);\n  };\n\n  render() {\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={() => this.handleClose(\"modal_new\")}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>New {capitalize(this.props.name)}</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Formik\n            validationSchema={this.props.formHelpers.schema}\n            onSubmit={(values) => {\n              this.props.postObject(values);\n              this.handleClose(\"modal_new\");\n            }}\n            initialValues={this.props.formHelpers.initialValues}\n          >\n            {({ handleSubmit, handleChange, setFieldValue, values, errors }) => (\n              <Form noValidate onSubmit={handleSubmit}>\n                {this.props.form(values, handleChange, setFieldValue ,errors)}\n                <Button\n                  type=\"submit\"\n                  variant=\"primary\"\n                  className=\"btn btn-theme float-right\"\n                >\n                  Create {capitalize(this.props.name)}\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default NewObject;\n","import React from \"react\";\nimport PaginatedTable from \"../components/PaginatedTable\";\nimport NewObject from \"../components/NewObject\";\nimport { Card, Button, Spinner, Row } from \"react-bootstrap\";\nimport { capitalize } from \"../utils/Helpers\";\nimport \"../App.css\";\n\nexport default class ListStructure extends React.Component {\n  state = {\n    modal_new: false,\n  };\n\n  switchModal = (name) => {\n    const modal = name;\n    this.setState((prevState) => ({\n      [modal]: !prevState[modal],\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <Card>\n          <Card.Header></Card.Header>\n          <Card.Title style={{ marginTop: \"10px\" }}>\n            All {capitalize(this.props.plural)}\n          </Card.Title>\n          <Card.Body>\n            <PaginatedTable\n              objects={this.props.objects}\n              showObjects={this.props.showObjects}\n              tableHeaders={this.props.tableHeaders}\n              status={this.props.status}\n              onPageChange={this.props.onPageChange}\n              defaultActivePage={this.props.defaultActivePage}\n              totalPages={this.props.totalPages}\n            />\n          </Card.Body>\n          <Card.Footer>\n            <Button\n              className=\"btn btn-theme float-right\"\n              variant=\"primary\"\n              onClick={(slot) => this.switchModal(\"modal_new\")}\n            >\n              New {capitalize(this.props.name)}\n            </Button>\n          </Card.Footer>\n        </Card>\n        <NewObject\n          show={this.state.modal_new}\n          switchModal={this.switchModal}\n          formHelpers={this.props.formHelpers}\n          form={this.props.form}\n          name={this.props.name}\n          plural={this.props.plural}\n          postObject={this.props.postObject}\n        />\n      </>\n    );\n  }\n}\n\nListStructure.propTypes = {};\n","import * as yup from \"yup\";\n\nexport const sports = {\n  schema: yup.object({\n    name: yup.string().required(),\n  }),\n  initialValues: {\n    name: \"\",\n  },\n};\n\nexport const leagues = {\n  schema: yup.object({\n    name: yup.string().required(),\n  }),\n  initialValues: {\n    name: \"\",\n    level: \"\",\n    sport_index: 0,\n  },\n};\n\nexport const clubs = {\n  schema: yup.object({\n    name: yup.string().required(),\n    abbreviation: yup.string(),\n  }),\n  initialValues: {\n    name: \"\",\n    abbreviation: \"\",\n    league_index: 0,\n  },\n};\n\nexport const groups = {\n  schema: yup.object({\n    name: yup.string().required(),\n  }),\n  initialValues: {\n    name: \"\",\n  },\n};\n\nexport const club_groups = {\n  schema: yup.object({\n    group_index: yup.string().required(),\n  }),\n  initialValues: {\n    group_index: 0,\n  },\n};\n\nexport const companies = {\n  schema: yup.object({\n    name: yup.string().required(),\n  }),\n  initialValues: {\n    name: \"\",\n  },\n};\n\nexport const brokers = {\n  schema: yup.object({\n    name: yup.string().required(),\n  }),\n  initialValues: {\n    name: \"\",\n  },\n};\n\nexport const carriers = {\n  schema: yup.object({\n    name: yup.string().required(),\n  }),\n  initialValues: {\n    name: \"\",\n  },\n};\n\nexport const categories = {\n  schema: yup.object({\n    name: yup.string().required(),\n  }),\n  initialValues: {\n    name: \"\",\n  },\n};\n\nexport const sub_categories = {\n  schema: yup.object({\n    name: yup.string().required(),\n  }),\n  initialValues: {\n    name: \"\",\n  },\n};\n\nexport const coverages = {\n  schema: yup.object({\n    // club_index: yup.string().required(),\n    // group_index: yup.string().required(),\n    // category_index: yup.string().required(),\n    // sub_category_index: yup.string().required(),\n    // notes: yup.string(),\n    // start_date: yup.date(),\n    // end_date: yup.date(),\n    // has_coverage_line: yup.boolean().required(),\n    // verified: yup.boolean().required(),\n  }),\n  initialValues: {\n    club_index: 0,\n    group_index: 0,\n    category_index: 0,\n    sub_category_index: 0,\n    carriers: [],\n    brokers: [],\n    notes: \"\",\n    start_date: new Date(),\n    end_date: null,\n    has_coverage_line: false,\n    verified: false,\n  },\n};\n\nexport const coverage_wizard = {\n  schema: yup.object({\n    // club_index: yup.string().required(),\n    // group_index: yup.string().required(),\n    // category_index: yup.string().required(),\n    // sub_category_index: yup.string().required(),\n    // notes: yup.string(),\n    // start_date: yup.date(),\n    // end_date: yup.date(),\n    // has_coverage_line: yup.boolean().required(),\n    // verified: yup.boolean().required(),\n  }),\n  initialValues: {\n    sport_index: 0,\n    league_index: 0,\n    club_index: 0,\n    group_index: 0,\n    category_index: 0,\n    sub_category_index: 0,\n    carriers: [],\n    brokers: [],\n    notes: \"\",\n    start_date: new Date(),\n    end_date: null,\n    has_coverage_line: false,\n    verified: false,\n  },\n};\n\nexport const users = {\n  schema: yup.object({\n    first_name: yup.string().required(),\n    last_name: yup.string().required(),\n    role: yup.string().required(),\n    username: yup.string().required(),\n  }),\n  initialValues: {\n    first_name: \"\",\n    last_name: \"\",\n    role: \"admin\",\n    username: \"\",\n  },\n};\n","import React from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from \"react-datepicker\";\n\nexport const objectOptions = (objects) => {\n  return objects.map((object, index) => {\n    return (\n      <option key={index} value={index}>\n        {object.attributes.name}\n      </option>\n    );\n  });\n};\n\nexport const objectOptionsID = (objects) => {\n  return objects.map((object, index) => {\n    return (\n      <option key={index} value={object.attributes.id}>\n        {object.attributes.name}\n      </option>\n    );\n  });\n};\n\nexport const objectGroupOptions = (objects) => {\n  return objects.map((object, index) => {\n    return (\n      <option key={index} value={index}>\n        {object.data.attributes.group.name}\n      </option>\n    );\n  });\n};\n\nexport const objectDataOptions = (objects) => {\n  return objects.map((object, index) => {\n    return (\n      <option key={index} value={index}>\n        {object.data.attributes.name}\n      </option>\n    );\n  });\n};\n\nexport function sportForm(values, handleChange, setFieldValue, errors) {\n  return (\n    <Row>\n      <Form.Group as={Col}>\n        <Form.Label>Name:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"name\"\n          value={values.name}\n          onChange={handleChange}\n          isInvalid={!!errors.name}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          {errors.name}\n        </Form.Control.Feedback>\n      </Form.Group>\n    </Row>\n  );\n}\n\nexport function leagueForm(\n  values,\n  handleChange,\n  setFieldValue,\n  errors,\n  sports\n) {\n  return (\n    <>\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>Name:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            value={values.name}\n            onChange={handleChange}\n            isInvalid={!!errors.name}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.name}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Form.Label>Level:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"level\"\n            value={values.level}\n            onChange={handleChange}\n            isInvalid={!!errors.level}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.level}\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Row>\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>Sport:</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"sport_index\"\n            value={values.sport_index}\n            onChange={handleChange}\n            isInvalid={!!errors.sport_index}\n          >\n            {objectOptions(sports)}\n          </Form.Control>\n        </Form.Group>\n        <Form.Control.Feedback type=\"invalid\">\n          {errors.sport_index}\n        </Form.Control.Feedback>\n      </Row>\n    </>\n  );\n}\n\nexport function clubForm(values, handleChange, setFieldValue, errors, leagues) {\n  return (\n    <>\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>Name:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            value={values.name}\n            onChange={handleChange}\n            isInvalid={!!errors.name}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.name}\n          </Form.Control.Feedback>{\" \"}\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Form.Label>Code:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"abbreviation\"\n            value={values.abbreviation}\n            onChange={handleChange}\n          />\n        </Form.Group>\n      </Row>\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>League:</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"league_index\"\n            value={values.league_index}\n            onChange={handleChange}\n          >\n            {objectOptions(leagues)}\n          </Form.Control>\n        </Form.Group>\n      </Row>\n    </>\n  );\n}\n\nexport function companyForm(values, handleChange, setFieldValue, errors) {\n  return (\n    <>\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>Name:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            value={values.name}\n            onChange={handleChange}\n            isInvalid={!!errors.name}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.name}\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Row>\n    </>\n  );\n}\n\nexport function brokerForm(\n  values,\n  handleChange,\n  setFieldValue,\n  errors,\n  company\n) {\n  return (\n    <>\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>Company:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"company\"\n            value={company.name}\n            disabled\n          />\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Form.Label>Name:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            value={values.name}\n            onChange={handleChange}\n            isInvalid={!!errors.name}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.name}\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Row>\n    </>\n  );\n}\n\nexport function categoryForm(values, handleChange, setFieldValue, errors) {\n  return (\n    <>\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>Name:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            value={values.name}\n            onChange={handleChange}\n            isInvalid={!!errors.name}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.name}\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Row>\n    </>\n  );\n}\n\nexport function subCategoryForm(\n  values,\n  handleChange,\n  setFieldValue,\n  errors,\n  category\n) {\n  return (\n    <>\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>Category:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"category\"\n            value={category.attributes.name}\n            disabled\n          />\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Form.Label>Name:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            value={values.name}\n            onChange={handleChange}\n            isInvalid={!!errors.name}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.name}\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Row>\n    </>\n  );\n}\n\nexport function carrierForm(\n  values,\n  handleChange,\n  setFieldValue,\n  errors,\n  leagues\n) {\n  return (\n    <>\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>Name:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            value={values.name}\n            onChange={handleChange}\n            isInvalid={!!errors.name}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.name}\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Row>\n    </>\n  );\n}\n\nfunction roleOptions() {\n  return [\"admin\", \"contact\", \"employee\"].map((object, index) => {\n    return (\n      <option key={index} value={object}>\n        {object}\n      </option>\n    );\n  });\n}\n\nexport function userForm(values, handleChange, setFieldValue, errors, leagues) {\n  return (\n    <>\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>First Name:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"first_name\"\n            value={values.first_name}\n            onChange={handleChange}\n            isInvalid={!!errors.first_name}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.first_name}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Form.Label>Last Name:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"last_name\"\n            value={values.last_name}\n            onChange={handleChange}\n            isInvalid={!!errors.last_name}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.last_name}\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Row>\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>Role:</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"role\"\n            value={values.role}\n            onChange={handleChange}\n          >\n            {roleOptions()}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Form.Label>Username:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"username\"\n            value={values.username}\n            onChange={handleChange}\n            isInvalid={!!errors.username}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.username}\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Row>\n    </>\n  );\n}\n\nexport function coverageForm(\n  values,\n  handleChange,\n  setFieldValue,\n  errors,\n  clubs,\n  categories,\n  carriers,\n  brokers\n) {\n  return (\n    <>\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>Club:</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"club_index\"\n            value={values.club_index}\n            onChange={(e) => {\n              handleChange(e);\n              setFieldValue(\"group_index\", 0);\n            }}\n          >\n            {objectOptions(clubs)}\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group as={Col}>\n          <Form.Label>Group:</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"group_index\"\n            value={values.group_index}\n            onChange={handleChange}\n          >\n            {objectGroupOptions(\n              clubs[values.club_index].attributes.club_groups\n            )}\n          </Form.Control>\n        </Form.Group>\n      </Row>\n\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>Category:</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"category_index\"\n            value={values.category_index}\n            onChange={(e) => {\n              handleChange(e);\n              setFieldValue(\"sub_category_index\", 0);\n            }}\n          >\n            {objectOptions(categories)}\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group as={Col}>\n          <Form.Label>Sub Category:</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"sub_category_index\"\n            value={values.sub_category_index}\n            onChange={handleChange}\n          >\n            {objectDataOptions(\n              categories[values.category_index].attributes.sub_categories\n            )}\n          </Form.Control>\n        </Form.Group>\n      </Row>\n\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>Carriers:</Form.Label>\n          <Form.Control\n            as=\"select\"\n            multiple\n            name=\"carriers\"\n            value={values.carriers}\n            onChange={(event) =>\n              setFieldValue(\n                \"carriers\",\n                Array.from(\n                  event.target.selectedOptions,\n                  (option) => option.value\n                )\n              )\n            }\n          >\n            {objectOptions(carriers)}\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group as={Col}>\n          <Form.Label>Brokers:</Form.Label>\n          <Form.Control\n            as=\"select\"\n            multiple\n            name=\"brokers\"\n            value={values.brokers}\n            onChange={(event) =>\n              setFieldValue(\n                \"brokers\",\n                Array.from(\n                  event.target.selectedOptions,\n                  (option) => option.value\n                )\n              )\n            }\n          >\n            {objectOptions(brokers)}\n          </Form.Control>\n        </Form.Group>\n      </Row>\n\n      <Form.Group>\n        <Form.Label>Notes:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"notes\"\n          value={values.notes}\n          onChange={handleChange}\n        />\n      </Form.Group>\n\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>{\"Start Date:\"}</Form.Label>\n          {/* <DatePicker\n            name=\"start_date\"\n            selected={values.start_date}\n            onChange={(val) => setFieldValue(\"start_date\", val)}\n          /> */}\n        </Form.Group>\n\n        <Form.Group as={Col}>\n          <Form.Label>{\"Ending Date:\"}</Form.Label>\n          {/* <DatePicker\n            name=\"end_date\"\n            selected={values.end_date}\n            onChange={(val) => setFieldValue(\"end_date\", val)}\n          /> */}\n        </Form.Group>\n      </Row>\n\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Check\n            type=\"checkbox\"\n            name=\"has_coverage_line\"\n            label={\"Has Coverage Line\"}\n            value={values.has_coverage_line}\n            onChange={handleChange}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col}>\n          <Form.Check\n            type=\"checkbox\"\n            name=\"verified\"\n            label={\"Verified\"}\n            value={values.verified}\n            onChange={handleChange}\n          />\n        </Form.Group>\n      </Row>\n    </>\n  );\n}\n\nexport function groupForm(\n  values,\n  handleChange,\n  setFieldValue,\n  errors,\n  leagues\n) {\n  return (\n    <>\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>Name:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            value={values.name}\n            onChange={handleChange}\n            isInvalid={!!errors.name}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.name}\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Row>\n    </>\n  );\n}\n\nexport function clubGroupForm(\n  values,\n  handleChange,\n  setFieldValue,\n  errors,\n  groups\n) {\n  return (\n    <>\n      <Row>\n        <Form.Group as={Col}>\n          <Form.Label>Group:</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"group_index\"\n            value={values.group_index}\n            onChange={handleChange}\n          >\n            {objectOptions(groups)}\n          </Form.Control>\n        </Form.Group>\n      </Row>\n    </>\n  );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ListStructure from \"../../components/ListStructure\";\nimport { Button } from \"react-bootstrap\";\nimport { sports as formHelpers } from \"../../utils/Schemas\";\nimport { sportForm as form } from \"../../utils/Forms\";\nimport { fetchSports, postSport } from \"../../actions/Actions\";\n\nclass SportsContainer extends Component {\n  state = {\n    tableHeaders: [\"Sport\", \"Leagues\"],\n    name: \"sport\",\n    plural: \"sports\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchSports());\n  }\n\n  showObjects = (objects) => {\n    return objects.map((object, index) => {\n      return (\n        <tr key={index}>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/sports/\" + object.attributes.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.name}\n            </Button>{\" \"}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.leagues.length}\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <ListStructure\n          objects={this.props.sports}\n          status={this.props.status}\n          showObjects={this.showObjects}\n          tableHeaders={this.state.tableHeaders}\n          name={this.state.name}\n          plural={this.state.plural}\n          formHelpers={formHelpers}\n          form={form}\n          postObject={(values) => this.props.dispatch(postSport(values))}\n        />\n      </>\n    );\n  }\n}\n\nSportsContainer.propTypes = {\n  sports: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  const { sports, status, error } = state.sports;\n  return { sports, status, error };\n}\n\nexport default connect(mapStateToProps)(SportsContainer);\n","import React from \"react\";\nimport { Modal, Form, Button } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport { capitalize } from \"../utils/Helpers\";\n\nclass EditObject extends React.Component {\n  handleClose = (name) => {\n    this.props.switchModal(name);\n  };\n\n  map = (values, object) => {\n    var new_values = {};\n    for (var key in values) {\n      new_values[key] = object[key];\n    }\n    return new_values;\n  };\n\n  render() {\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={() => this.handleClose(\"modal_edit\")}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Edit {capitalize(this.props.name)}</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Formik\n            validationSchema={this.props.formHelpers.schema}\n            onSubmit={(values) => {\n              this.props.updateObject(this.props.object.attributes.id, values);\n              this.handleClose(\"modal_edit\");\n            }}\n            initialValues={this.map(\n              this.props.formHelpers.initialValues,\n              this.props.object.attributes\n            )}\n          >\n            {({\n              handleSubmit,\n              handleChange,\n              setFieldValue,\n              values,\n              errors,\n            }) => (\n              <Form noValidate onSubmit={handleSubmit}>\n                {this.props.form(values, handleChange, setFieldValue, errors)}\n                <Button\n                  type=\"submit\"\n                  variant=\"primary\"\n                  className=\"btn btn-theme float-right\"\n                >\n                  Update {capitalize(this.props.name)}\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default EditObject;\n","import React, { Component } from \"react\";\nimport EditObject from \"../components/EditObject\";\nimport { Card, Button, Row, Spinner } from \"react-bootstrap\";\nimport { capitalize, canDelete } from \"../utils/Helpers\";\nimport \"../App.css\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class DetailStructure extends Component {\n  state = {\n    modal_edit: false,\n  };\n\n  switchModal = (name) => {\n    const modal = name;\n    this.setState((prevState) => ({\n      [modal]: !prevState[modal],\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.redirection.redirect === true && (\n          <Redirect to={this.props.redirection.link} />\n        )}\n        <Card>\n          <Card.Header></Card.Header>\n          {this.props.status === \"succeeded\" && (\n            <Card.Title style={{ marginTop: \"10px\" }}>\n              {capitalize(this.props.object.attributes.name)} Details\n            </Card.Title>\n          )}\n          <Card.Body>\n            {this.props.status === \"succeeded\" &&\n              this.props.showDetails(this.props.object)}\n          </Card.Body>\n          <Card.Footer>\n            {this.props.status === \"succeeded\" && (\n              <>\n                {this.props.updateObject != null && (\n                  <Button\n                    className=\"btn btn-theme float-right\"\n                    variant=\"primary\"\n                    onClick={(slot) => this.switchModal(\"modal_edit\")}\n                  >\n                    Edit {capitalize(this.props.name)}\n                  </Button>\n                )}\n                {canDelete(this.props.object) && (\n                  <Button\n                    className=\"btn btn-theme float-right\"\n                    variant=\"danger\"\n                    onClick={() =>\n                      this.props.deleteObject(this.props.object.attributes.id)\n                    }\n                    style={{ marginRight: \"10px\" }}\n                  >\n                    Delete {capitalize(this.props.name)}\n                  </Button>\n                )}\n              </>\n            )}\n          </Card.Footer>\n        </Card>\n        {this.props.status === \"succeeded\" &&\n          this.props.updateObject != null && (\n            <EditObject\n              show={this.state.modal_edit}\n              switchModal={this.switchModal}\n              formHelpers={this.props.formHelpers}\n              form={this.props.form}\n              object={this.props.object}\n              name={this.props.name}\n              updateObject={this.props.updateObject}\n            />\n          )}\n      </>\n    );\n  }\n}\n\nDetailStructure.propTypes = {};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport DetailStructure from \"../../components/DetailStructure\";\nimport { Button } from \"react-bootstrap\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport PropTypes from 'prop-types';\nimport { fetchSport, updateSport, deleteSport } from \"../../actions/Actions\";\nimport { sports as formHelpers } from \"../../utils/Schemas\";\nimport { sportForm as form } from \"../../utils/Forms\";\n\nclass SportContainer extends Component {\n  state = {\n    name: \"sport\",\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.dispatch(fetchSport(id));\n  }\n\n  showDetails = (object) => {\n    let showObjects = (objects) => {\n      return objects.map((object, index) => {\n        return (\n          <tr key={index}>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/leagues/\" + object.data.attributes.id}\n                style={{ color: \"black\" }}\n              >\n                {object.data.attributes.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.data.attributes.level}\n            </td>\n          </tr>\n        );\n      });\n    };\n\n    return (\n      <GeneralTable\n        objects={object.attributes.leagues}\n        showObjects={showObjects}\n        tableHeaders={[\"League\", \"Level\"]}\n        status={this.props.status}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <DetailStructure\n          object={this.props.selected}\n          status={this.props.status}\n          name={this.state.name}\n          formHelpers={formHelpers}\n          form={form}\n          showDetails={this.showDetails}\n          updateObject={(id, values) => {\n            this.props.dispatch(updateSport({ id: id, values: values }));\n          }}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteSport(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nSportContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, status, error } = state.sports;\n  const { link, redirect } = state.redirections;\n  return { selected, status, error, link, redirect };\n}\n\nexport default connect(mapStateToProps)(SportContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { leagues as formHelpers } from \"../../utils/Schemas\";\nimport { leagueForm as form } from \"../../utils/Forms\";\nimport { fetchLeagues, postLeague, fetchSports } from \"../../actions/Actions\";\n\nclass LeaguesContainer extends Component {\n  state = {\n    tableHeaders: [\"Name\", \"Level\"],\n    name: \"league\",\n    plural: \"leagues\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchLeagues());\n    this.props.dispatch(fetchSports());\n  }\n\n  showObjects = (objects) => {\n    return objects.map((object, index) => {\n      return (\n        <tr key={index}>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/leagues/\" + object.attributes.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.level}\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  postObject = (values) => {\n    const new_object = {\n      name: values.name,\n      level: values.level,\n      sport_id: this.props.sports[values.sport_index].attributes.id,\n    };\n    this.props.dispatch(postLeague(new_object));\n  };\n\n  render() {\n    return (\n      <>\n        <ListStructure\n          objects={this.props.leagues}\n          status={this.props.status}\n          showObjects={this.showObjects}\n          tableHeaders={this.state.tableHeaders}\n          name={this.state.name}\n          plural={this.state.plural}\n          formHelpers={formHelpers}\n          form={(values, handleChange, setFieldValue, errors) =>\n            form(values, handleChange, setFieldValue, errors, this.props.sports)\n          }\n          postObject={this.postObject}\n        />\n      </>\n    );\n  }\n}\n\nLeaguesContainer.propTypes = {\n  leagues: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  const { leagues, status, error } = state.leagues;\n  const { sports } = state.sports;\n  return { sports, leagues, status, error };\n}\n\nexport default connect(mapStateToProps)(LeaguesContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport DetailStructure from \"../../components/DetailStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport { leagues as formHelpers } from \"../../utils/Schemas\";\nimport { leagueForm as form } from \"../../utils/Forms\";\nimport {\n  fetchLeague,\n  updateLeague,\n  deleteLeague,\n  fetchSports,\n} from \"../../actions/Actions\";\n\nclass LeagueContainer extends Component {\n  state = {\n    name: \"league\",\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.dispatch(fetchLeague(id));\n    this.props.dispatch(fetchSports());\n  }\n\n  showDetails = (object) => {\n    let showObjects = (objects) => {\n      return objects.map((object, index) => {\n        return (\n          <tr key={index}>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/clubs/\" + object.data.attributes.id}\n                style={{ color: \"black\" }}\n              >\n                {object.data.attributes.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.data.attributes.abbreviation}\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.data.attributes.club_groups_count}\n            </td>\n          </tr>\n        );\n      });\n    };\n\n    return (\n      <GeneralTable\n        objects={object.attributes.clubs}\n        showObjects={showObjects}\n        tableHeaders={[\"Name\", \"Code\", \"Groups\"]}\n        status={this.props.status}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <DetailStructure\n          object={this.props.selected}\n          status={this.props.status}\n          name={this.state.name}\n          formHelpers={formHelpers}\n          form={(values, handleChange, setFieldValue, errors) =>\n            form(values, handleChange, setFieldValue, errors, this.props.sports)\n          }\n          showDetails={this.showDetails}\n          updateObject={(id, values) => {\n            this.props.dispatch(updateLeague({ id: id, values: values }));\n          }}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteLeague(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nLeagueContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, status, error } = state.leagues;\n  const { sports } = state.sports;\n  const { link, redirect } = state.redirections;\n  return { selected, status, error, link, redirect, sports };\n}\n\nexport default connect(mapStateToProps)(LeagueContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { clubs as formHelpers } from \"../../utils/Schemas\";\nimport { clubForm as form } from \"../../utils/Forms\";\nimport { fetchClubs, postClub, fetchLeagues } from \"../../actions/Actions\";\n\nclass ClubsContainer extends Component {\n  state = {\n    tableHeaders: [\"Name\", \"Code\", \"League\", \"Groups\"],\n    name: \"club\",\n    plural: \"clubs\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchLeagues());\n  }\n\n  showObjects = (objects) => {\n    return objects.map((object, index) => {\n      return (\n        <tr key={index}>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/clubs/\" + object.attributes.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.abbreviation}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.league.name}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.club_groups_count}\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  postObject = (values) => {\n    const new_object = {\n      name: values.name,\n      abbreviation: values.level,\n      league_id: this.props.leagues[values.league_index].attributes.id,\n    };\n    this.props.dispatch(postClub(new_object));\n  };\n\n  render() {\n    return (\n      <>\n        <ListStructure\n          objects={this.props.clubs}\n          status={this.props.status}\n          showObjects={this.showObjects}\n          tableHeaders={this.state.tableHeaders}\n          name={this.state.name}\n          plural={this.state.plural}\n          formHelpers={formHelpers}\n          form={(values, handleChange, setFieldValue, errors) =>\n            form(values, handleChange, setFieldValue, errors, this.props.leagues)\n          }\n          postObject={this.postObject}\n        />\n      </>\n    );\n  }\n}\n\nClubsContainer.propTypes = {\n  clubs: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  const { clubs, status, error } = state.clubs;\n  const { leagues } = state.leagues;\n  return { clubs, leagues, status, error };\n}\n\nexport default connect(mapStateToProps)(ClubsContainer);\n","import React from \"react\";\nimport { Modal, Form, Button } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\n\nexport default class AddGroup extends React.Component {\n  handleClose = (name) => {\n    this.props.switchModal(name);\n  };\n\n  render() {\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={() => this.handleClose(\"modal_groups\")}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add Group</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Formik\n            validationSchema={this.props.formHelpers.schema}\n            onSubmit={(values) => {\n              this.props.postObject(values);\n              this.handleClose(\"modal_groups\");\n            }}\n            initialValues={this.props.formHelpers.initialValues}\n          >\n            {({\n              handleSubmit,\n              handleChange,\n              setFieldValue,\n              values,\n              errors,\n            }) => (\n              <Form noValidate onSubmit={handleSubmit}>\n                {this.props.form(values, handleChange, setFieldValue, errors)}\n                <Button\n                  type=\"submit\"\n                  variant=\"primary\"\n                  className=\"btn btn-theme float-right\"\n                >\n                  Add Group\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport EditObject from \"../../components/EditObject\";\nimport { Card, Button, Row, Spinner } from \"react-bootstrap\";\nimport { capitalize, canDelete } from \"../../utils/Helpers\";\nimport { Redirect } from \"react-router-dom\";\nimport AddGroup from \"./AddGroup\";\n\nexport default class ClubDetails extends Component {\n  state = {\n    modal_edit: false,\n    modal_groups: false,\n  };\n\n  switchModal = (name) => {\n    const modal = name;\n    this.setState((prevState) => ({\n      [modal]: !prevState[modal],\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.redirection.redirect === true && (\n          <Redirect to={this.props.redirection.link} />\n        )}\n        <Card>\n          <Card.Header></Card.Header>\n          {this.props.status === \"succeeded\" && (\n            <Card.Title style={{ marginTop: \"10px\" }}>\n              {capitalize(this.props.object.attributes.name)} Details\n            </Card.Title>\n          )}\n          <Card.Body>\n            {this.props.status === \"succeeded\" &&\n              this.props.showDetails(this.props.object)}\n          </Card.Body>\n          <Card.Footer>\n            {this.props.status === \"succeeded\" && (\n              <>\n                <Button\n                  className=\"btn btn-theme float-right\"\n                  variant=\"primary\"\n                  onClick={(slot) => this.switchModal(\"modal_edit\")}\n                >\n                  Edit {capitalize(this.props.name)}\n                </Button>\n                <Button\n                  className=\"btn btn-theme float-right\"\n                  variant=\"primary\"\n                  onClick={(slot) => this.switchModal(\"modal_groups\")}\n                  style={{ marginRight: \"10px\" }}\n                >\n                  Add Group\n                </Button>\n                {canDelete(this.props.object) && (\n                  <Button\n                    className=\"btn btn-theme float-right\"\n                    variant=\"danger\"\n                    onClick={() =>\n                      this.props.deleteObject(this.props.object.attributes.id)\n                    }\n                    style={{ marginRight: \"10px\" }}\n                  >\n                    Delete {capitalize(this.props.name)}\n                  </Button>\n                )}\n              </>\n            )}\n          </Card.Footer>\n        </Card>\n        {this.props.status === \"succeeded\" && (\n          <>\n            <EditObject\n              show={this.state.modal_edit}\n              switchModal={this.switchModal}\n              formHelpers={this.props.formHelpers}\n              form={this.props.form}\n              object={this.props.object}\n              name={this.props.name}\n              updateObject={this.props.updateObject}\n            />\n            <AddGroup\n              show={this.state.modal_groups}\n              switchModal={this.switchModal}\n              formHelpers={this.props.formHelpersGroups}\n              form={this.props.formGroups}\n              object={this.props.object}\n              name={this.props.name}\n              postObject={this.props.postObject}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nClubDetails.propTypes = {};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ClubDetails from \"./ClubDetails\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport PaginatedTable from \"../../components/PaginatedTable\";\nimport { clubs as formHelpers } from \"../../utils/Schemas\";\nimport { clubForm as form } from \"../../utils/Forms\";\nimport { club_groups as formHelpersGroups } from \"../../utils/Schemas\";\nimport { clubGroupForm as formGroups } from \"../../utils/Forms\";\nimport {\n  fetchClub,\n  updateClub,\n  deleteClub,\n  fetchCoverages,\n  fetchLeagues,\n  fetchGroups,\n  postClubGroup,\n} from \"../../actions/Actions\";\n\nclass ClubContainer extends Component {\n  state = {\n    name: \"club\",\n    id: this.props.match.params.id,\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchClub(this.state.id));\n    this.props.dispatch(fetchLeagues());\n    this.props.dispatch(fetchGroups());\n    this.props.dispatch(fetchCoverages({ for_club: this.state.id }));\n  }\n\n  showDetails = (object) => {\n    let showObjects = (objects) => {\n      return objects.map((object, index) => {\n        return (\n          <tr key={index}>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/clubs/\" + object.attributes.club.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.club.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.attributes.group.name}\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.attributes.start_date}\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.attributes.verified ? \"true\" : \"false\"}\n            </td>\n            <td width=\"100\" align=\"center\">\n              <Button\n                variant=\"link\"\n                href={\"/coverages/\" + object.attributes.id}\n                style={{ color: \"black\" }}\n              >\n                {/* <EyeFill /> */}\n              </Button>\n            </td>\n          </tr>\n        );\n      });\n    };\n\n    return (\n      <>\n        <PaginatedTable\n          objects={this.props.coverages}\n          showObjects={showObjects}\n          tableHeaders={[\"Club\", \"Group\", \"Start\", \"Verified\", \"View\"]}\n          status={this.props.status}\n          onPageChange={(e, { activePage }) =>\n            this.props.dispatch(\n              fetchCoverages({ for_club: this.state.id, page: activePage })\n            )\n          }\n          defaultActivePage={this.props.page}\n          totalPages={this.props.pages}\n        />\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <ClubDetails\n          object={this.props.selected}\n          status={this.props.status}\n          name={this.state.name}\n          formHelpers={formHelpers}\n          form={(values, handleChange, setFieldValue, errors) =>\n            form(\n              values,\n              handleChange,\n              setFieldValue,\n              errors,\n              this.props.leagues\n            )\n          }\n          formHelpersGroups={formHelpersGroups}\n          formGroups={(values, handleChange, setFieldValue, errors) =>\n            formGroups(\n              values,\n              handleChange,\n              setFieldValue,\n              errors,\n              this.props.groups\n            )\n          }\n          postObject={(values) =>\n            this.props.dispatch(\n              postClubGroup({\n                club_id: this.props.selected.attributes.id,\n                group_id: this.props.groups[values.group_index].attributes.id,\n              })\n            )\n          }\n          showDetails={this.showDetails}\n          updateObject={(id, values) => {\n            this.props.dispatch(updateClub({ id: id, values: values }));\n          }}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteClub(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nClubContainer.propTypes = {\n  selected: PropTypes.object,\n  status: PropTypes.string.isRequired,\n  errors: PropTypes.object,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, status, error } = state.clubs;\n  const { coverages, pages, page } = state.coverages;\n  const { groups } = state.groups;\n  const { leagues } = state.leagues;\n  const { link, redirect } = state.redirections;\n  return {\n    selected,\n    status,\n    error,\n    link,\n    redirect,\n    coverages,\n    pages,\n    page,\n    leagues,\n    groups,\n  };\n}\n\nexport default connect(mapStateToProps)(ClubContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { groups as formHelpers } from \"../../utils/Schemas\";\nimport { groupForm as form } from \"../../utils/Forms\";\nimport { fetchGroups, postGroup } from \"../../actions/Actions\";\n\nclass GroupsContainer extends Component {\n  state = {\n    tableHeaders: [\"Name\", \"Associated Clubs\"],\n    name: \"group\",\n    plural: \"groups\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchGroups());\n  }\n\n  showObjects = (objects) => {\n    return objects.map((object, index) => {\n      return (\n        <tr key={index}>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/\" + this.state.plural + \"/\" + object.attributes.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.name}\n            </Button>{\" \"}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.club_groups.length}\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <ListStructure\n          objects={this.props.groups}\n          status={this.props.status}\n          showObjects={this.showObjects}\n          tableHeaders={this.state.tableHeaders}\n          name={this.state.name}\n          plural={this.state.plural}\n          formHelpers={formHelpers}\n          form={form}\n          postObject={(values) => this.props.dispatch(postGroup(values))}\n        />\n      </>\n    );\n  }\n}\n\nGroupsContainer.propTypes = {\n  groups: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  const { groups, status, error } = state.groups;\n  return { groups, status, error };\n}\n\nexport default connect(mapStateToProps)(GroupsContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport DetailStructure from \"../../components/DetailStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport { groups as formHelpers } from \"../../utils/Schemas\";\nimport { groupForm as form } from \"../../utils/Forms\";\nimport { fetchGroup, deleteGroup, updateGroup } from \"../../actions/Actions\";\n\nclass GroupContainer extends Component {\n  state = {\n    name: \"group\",\n    id: this.props.match.params.id,\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchGroup(this.state.id));\n  }\n\n  showDetails = (object) => {\n    let showObjects = (objects) => {\n      return objects.map((object, index) => {\n        return (\n          <tr key={index}>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/leagues/\" + object.data.attributes.league.id}\n                style={{ color: \"black\" }}\n              >\n                {object.data.attributes.league.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/clubs/\" + object.data.attributes.club.id}\n                style={{ color: \"black\" }}\n              >\n                {object.data.attributes.club.name}\n              </Button>{\" \"}\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.data.attributes.club.abbreviation}\n            </td>\n          </tr>\n        );\n      });\n    };\n\n    return (\n      <GeneralTable\n        objects={object.attributes.club_groups}\n        showObjects={showObjects}\n        tableHeaders={[\"League\", \"Name\", \"Code\"]}\n        status={this.props.status}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <DetailStructure\n          object={this.props.selected}\n          status={this.props.status}\n          name={this.state.name}\n          formHelpers={formHelpers}\n          form={form}\n          showDetails={this.showDetails}\n          updateObject={(id, values) => {\n            this.props.dispatch(updateGroup({ id: id, values: values }));\n          }}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteGroup(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nGroupContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, status, error } = state.groups;\n  const { link, redirect } = state.redirections;\n  return { selected, status, error, link, redirect };\n}\n\nexport default connect(mapStateToProps)(GroupContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { categories as formHelpers } from \"../../utils/Schemas\";\nimport { categoryForm as form } from \"../../utils/Forms\";\nimport { fetchCategories, postCategory } from \"../../actions/Actions\";\n\nclass CategoriesContainer extends Component {\n  state = {\n    tableHeaders: [\"Name\", \"Associated Subs\"],\n    name: \"category\",\n    plural: \"categories\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchCategories());\n  }\n\n  showObjects = (objects) => {\n    return objects.map((object, index) => {\n      return (\n        <tr key={index}>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/categories/\" + object.attributes.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.name}\n            </Button>{\" \"}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.associated_sub_categories}\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <ListStructure\n          objects={this.props.categories}\n          status={this.props.status}\n          showObjects={this.showObjects}\n          tableHeaders={this.state.tableHeaders}\n          name={this.state.name}\n          plural={this.state.plural}\n          formHelpers={formHelpers}\n          form={form}\n          postObject={(values) => this.props.dispatch(postCategory(values))}\n        />\n      </>\n    );\n  }\n}\n\nCategoriesContainer.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  status: PropTypes.string.isRequired,\n  errors: PropTypes.string,\n};\n\nfunction mapStateToProps(state) {\n  const { categories, status, errors } = state.categories;\n  return { categories, status, errors };\n}\n\nexport default connect(mapStateToProps)(CategoriesContainer);\n","import React from \"react\";\nimport { Modal, Form, Button } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\n\nexport default class AddSubCategory extends React.Component {\n  handleClose = (name) => {\n    this.props.switchModal(name);\n  };\n\n  render() {\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={() => this.handleClose(\"modal_sub\")}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add Sub</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Formik\n            validationSchema={this.props.formHelpers.schema}\n            onSubmit={(values) => {\n              this.props.postSub(values);\n              this.handleClose(\"modal_sub\");\n            }}\n            initialValues={this.props.formHelpers.initialValues}\n          >\n            {({\n              handleSubmit,\n              handleChange,\n              setFieldValue,\n              values,\n              errors,\n            }) => (\n              <Form noValidate onSubmit={handleSubmit}>\n                {this.props.form(values, handleChange, setFieldValue, errors)}\n                <Button\n                  type=\"submit\"\n                  variant=\"primary\"\n                  className=\"btn btn-theme float-right\"\n                >\n                  Add Sub\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\nimport EditObject from \"../../components/EditObject\";\nimport AddSubCategory from \"../sub_categories/AddSubCategory\";\nimport { Card, Button, Row, Spinner } from \"react-bootstrap\";\nimport { capitalize, canDelete } from \"../../utils/Helpers\";\nimport { Redirect } from \"react-router-dom\";\nimport GeneralTable from \"../../components/GeneralTable\";\n\nexport default class CategoryDetails extends Component {\n  state = {\n    modal_edit: false,\n    modal_sub: false,\n  };\n\n  switchModal = (name) => {\n    const modal = name;\n    this.setState((prevState) => ({\n      [modal]: !prevState[modal],\n    }));\n  };\n\n  showDetails = (object) => {\n    let showObjects = (objects) => {\n      return objects.map((object, index) => {\n        return (\n          <tr key={index}>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/sub_categories/\" + object.data.attributes.id}\n                style={{ color: \"black\" }}\n              >\n                {object.data.attributes.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.data.attributes.associated_coverages}\n            </td>\n          </tr>\n        );\n      });\n    };\n\n    return (\n      <GeneralTable\n        objects={this.props.secondary}\n        showObjects={showObjects}\n        tableHeaders={[\"Name\", \"Coverages\"]}\n        status={this.props.status}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.redirection.redirect === true && (\n          <Redirect to={this.props.redirection.link} />\n        )}\n        <Card>\n          <Card.Header></Card.Header>\n          {this.props.status === \"succeeded\" && (\n            <Card.Title style={{ marginTop: \"10px\" }}>\n              {capitalize(this.props.object.attributes.name)} Details\n            </Card.Title>\n          )}\n          <Card.Body>\n            {this.props.status === \"succeeded\" &&\n              this.showDetails(this.props.object)}\n          </Card.Body>\n          <Card.Footer>\n            {this.props.status === \"succeeded\" && (\n              <>\n                <Button\n                  className=\"btn btn-theme float-right\"\n                  variant=\"primary\"\n                  onClick={(slot) => this.switchModal(\"modal_edit\")}\n                >\n                  Edit {capitalize(this.props.name)}\n                </Button>\n                <Button\n                  className=\"btn btn-theme float-right\"\n                  variant=\"primary\"\n                  onClick={(slot) => this.switchModal(\"modal_sub\")}\n                  style={{ marginRight: \"10px\" }}\n                >\n                  Add Sub\n                </Button>\n                {canDelete(this.props.object) && (\n                  <Button\n                    className=\"btn btn-theme float-right\"\n                    variant=\"danger\"\n                    onClick={() =>\n                      this.props.deleteObject(this.props.object.attributes.id)\n                    }\n                    style={{ marginRight: \"10px\" }}\n                  >\n                    Delete {capitalize(this.props.name)}\n                  </Button>\n                )}\n              </>\n            )}\n          </Card.Footer>\n        </Card>\n        {this.props.status === \"succeeded\" && (\n          <>\n            <EditObject\n              show={this.state.modal_edit}\n              switchModal={this.switchModal}\n              formHelpers={this.props.formHelpers}\n              form={this.props.form}\n              object={this.props.object}\n              name={this.props.name}\n              updateObject={this.props.updateObject}\n            />\n            <AddSubCategory\n              show={this.state.modal_sub}\n              switchModal={this.switchModal}\n              formHelpers={this.props.formHelpersSub}\n              form={this.props.formSub}\n              object={this.props.object}\n              name={this.props.name}\n              postSub={this.props.postSub}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nCategoryDetails.propTypes = {};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CategoryDetails from \"./CategoryDetails\";\nimport PropTypes from \"prop-types\";\nimport { categories as formHelpers } from \"../../utils/Schemas\";\nimport { categoryForm as form } from \"../../utils/Forms\";\nimport { sub_categories as formHelpersSub } from \"../../utils/Schemas\";\nimport { subCategoryForm as formSub } from \"../../utils/Forms\";\nimport {\n  fetchCategory,\n  updateCategory,\n  deleteCategory,\n  postSubCategory,\n} from \"../../actions/Actions\";\n\nclass CategoryContainer extends Component {\n  state = {\n    name: \"category\",\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.dispatch(fetchCategory(id));\n  }\n\n  postSubCategory = (values) => {\n    const new_object = {\n      name: values.name,\n      category_id: this.props.selected.attributes.id,\n    };\n    this.props.dispatch(postSubCategory(new_object));\n  };\n\n  render() {\n    return (\n      <>\n        <CategoryDetails\n          object={this.props.selected}\n          secondary={this.props.secondary}\n          status={this.props.status}\n          name={this.state.name}\n          formHelpers={formHelpers}\n          form={form}\n          formHelpersSub={formHelpersSub}\n          formSub={(values, handleChange, setFieldValue, errors) =>\n            formSub(\n              values,\n              handleChange,\n              setFieldValue,\n              errors,\n              this.props.selected\n            )\n          }\n          postSub={(values) => this.postSubCategory(values)}\n          updateObject={(id, values) => {\n            this.props.dispatch(updateCategory({ id: id, values: values }));\n          }}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteCategory(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nCategoryContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, status, error, secondary } = state.categories;\n  const { link, redirect } = state.redirections;\n  return { selected, status, error, link, redirect, secondary };\n}\n\nexport default connect(mapStateToProps)(CategoryContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { carriers as formHelpers } from \"../../utils/Schemas\";\nimport { carrierForm as form } from \"../../utils/Forms\";\nimport { fetchCarriers, postCarrier } from \"../../actions/Actions\";\n\nclass CarriersContainer extends Component {\n  state = {\n    tableHeaders: [\"Name\", \"Coverages\"],\n    name: \"carrier\",\n    plural: \"carriers\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchCarriers());\n  }\n\n  showObjects = (objects) => {\n    return objects.map((object, index) => {\n      return (\n        <tr key={index}>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/\" + this.state.plural + \"/\" + object.attributes.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.name}\n            </Button>{\" \"}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.associated_coverages}\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <ListStructure\n          objects={this.props.carriers}\n          status={this.props.status}\n          showObjects={this.showObjects}\n          tableHeaders={this.state.tableHeaders}\n          name={this.state.name}\n          plural={this.state.plural}\n          formHelpers={formHelpers}\n          form={form}\n          postObject={(values) => this.props.dispatch(postCarrier(values))}\n        />\n      </>\n    );\n  }\n}\n\nCarriersContainer.propTypes = {\n  carriers: PropTypes.arrayOf(PropTypes.object).isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.object,\n};\n\nfunction mapStateToProps(state) {\n  const { carriers, status, errors } = state.carriers;\n  return { carriers, status, errors };\n}\n\nexport default connect(mapStateToProps)(CarriersContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport DetailStructure from \"../../components/DetailStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport Moment from \"react-moment\";\nimport { EyeFill } from \"react-bootstrap-icons\";\nimport PaginatedTable from \"../../components/PaginatedTable\";\nimport { carriers as formHelpers } from \"../../utils/Schemas\";\nimport { carrierForm as form } from \"../../utils/Forms\";\nimport {\n  fetchCarrier,\n  updateCarrier,\n  deleteCarrier,\n  fetchCoverages,\n} from \"../../actions/Actions\";\n\nclass CarrierContainer extends Component {\n  state = {\n    name: \"carrier\",\n    id: this.props.match.params.id,\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchCarrier(this.state.id));\n    this.props.dispatch(fetchCoverages({ for_carrier: this.state.id }));\n  }\n\n  showDetails = (object) => {\n    let showObjects = (objects) => {\n      return objects.map((object, index) => {\n        return (\n          <tr key={index}>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/leagues/\" + object.attributes.league.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.league.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/clubs/\" + object.attributes.club.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.club.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.attributes.group.name}\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/categories/\" + object.attributes.category.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.category.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/sub_categories/\" + object.attributes.sub_category.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.sub_category.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/users/\" + object.attributes.user.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.user.first_name}{\" \"}\n                {object.attributes.user.last_name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Moment format=\"MM/DD/YYYY\">\n                {object.attributes.created_at}\n              </Moment>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Moment format=\"MM/DD/YYYY\">\n                {object.attributes.updated_at}\n              </Moment>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.attributes.verified ? \"true\" : \"false\"}\n            </td>\n            <td width=\"100\" align=\"center\">\n              <Button\n                variant=\"link\"\n                href={\"/coverages/\" + object.attributes.id}\n                style={{ color: \"black\" }}\n              >\n                <EyeFill />\n              </Button>\n            </td>\n          </tr>\n        );\n      });\n    };\n    return (\n      <>\n        <PaginatedTable\n          objects={this.props.coverages}\n          showObjects={showObjects}\n          tableHeaders={[\n            \"League\",\n            \"Club\",\n            \"Group\",\n            \"Category\",\n            \"Sub\",\n            \"Entered By\",\n            \"Date Created\",\n            \"Last Updated\",\n            \"Verified\",\n            \"View\",\n          ]}\n          status={this.props.status}\n          onPageChange={(e, { activePage }) =>\n            this.props.dispatch(\n              fetchCoverages({ for_carrier: this.state.id, page: activePage })\n            )\n          }\n          defaultActivePage={this.props.page}\n          totalPages={this.props.pages}\n        />\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <DetailStructure\n          object={this.props.selected}\n          status={this.props.status}\n          name={this.state.name}\n          formHelpers={formHelpers}\n          form={form}\n          showDetails={this.showDetails}\n          updateObject={(id, values) => {\n            this.props.dispatch(updateCarrier({ id: id, values: values }));\n          }}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteCarrier(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nCarrierContainer.propTypes = {\n  selected: PropTypes.object,\n  status: PropTypes.string.isRequired,\n  errors: PropTypes.object,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, status, error } = state.carriers;\n  const { coverages, pages, page } = state.coverages;\n  const { link, redirect } = state.redirections;\n  return { selected, status, error, link, redirect, coverages, pages, page };\n}\n\nexport default connect(mapStateToProps)(CarrierContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { companies as formHelpers } from \"../../utils/Schemas\";\nimport { companyForm as form } from \"../../utils/Forms\";\nimport { fetchCompanies, postCompany } from \"../../actions/Actions\";\n\nclass CompaniesContainer extends Component {\n  state = {\n    tableHeaders: [\"Name\", \"Brokers\"],\n    name: \"company\",\n    plural: \"companies\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchCompanies());\n  }\n\n  showObjects = (objects) => {\n    return objects.map((object, index) => {\n      return (\n        <tr key={index}>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/companies/\" + object.attributes.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.name}\n            </Button>{\" \"}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.brokers.length}\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <ListStructure\n          objects={this.props.companies}\n          status={this.props.status}\n          showObjects={this.showObjects}\n          tableHeaders={this.state.tableHeaders}\n          name={this.state.name}\n          plural={this.state.plural}\n          formHelpers={formHelpers}\n          form={form}\n          postObject={(values) => this.props.dispatch(postCompany(values))}\n        />\n      </>\n    );\n  }\n}\n\nCompaniesContainer.propTypes = {\n  companies: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  const { companies, status, error } = state.companies;\n  return { companies, status, error };\n}\n\nexport default connect(mapStateToProps)(CompaniesContainer);\n","import React from \"react\";\nimport { Modal, Form, Button } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\n\nclass AddSub extends React.Component {\n  handleClose = (name) => {\n    this.props.switchModal(name);\n  };\n\n  render() {\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={() => this.handleClose(\"modal_broker\")}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add Sub</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Formik\n            validationSchema={this.props.formHelpers.schema}\n            onSubmit={(values) => {\n              this.props.postSub(values);\n              this.handleClose(\"modal_broker\");\n            }}\n            initialValues={this.props.formHelpers.initialValues}\n          >\n            {({\n              handleSubmit,\n              handleChange,\n              setFieldValue,\n              values,\n              errors,\n            }) => (\n              <Form noValidate onSubmit={handleSubmit}>\n                {this.props.form(values, handleChange, setFieldValue, errors)}\n                <Button\n                  type=\"submit\"\n                  variant=\"primary\"\n                  className=\"btn btn-theme float-right\"\n                >\n                  Add Sub\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default AddSub;\n","import React, { Component } from \"react\";\nimport EditObject from \"../../components/EditObject\";\nimport AddBroker from \"../brokers/AddBroker\";\nimport { Card, Button, Row, Spinner } from \"react-bootstrap\";\nimport { capitalize, canDelete } from \"../../utils/Helpers\";\nimport { Redirect } from \"react-router-dom\";\nimport GeneralTable from \"../../components/GeneralTable\";\n\nexport default class CompanyDetails extends Component {\n  state = {\n    modal_edit: false,\n    modal_broker: false,\n  };\n\n  switchModal = (name) => {\n    const modal = name;\n    this.setState((prevState) => ({\n      [modal]: !prevState[modal],\n    }));\n  };\n\n  showDetails = (object) => {\n    let showObjects = (objects) => {\n      return objects.map((object, index) => {\n        return (\n          <tr key={index}>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/brokers/\" + object.data.attributes.id}\n                style={{ color: \"black\" }}\n              >\n                {object.data.attributes.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.data.attributes.associated_coverages}\n            </td>\n          </tr>\n        );\n      });\n    };\n\n    return (\n      <GeneralTable\n        objects={this.props.secondary}\n        showObjects={showObjects}\n        tableHeaders={[\"Name\", \"Associated\"]}\n        status={this.props.status}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.redirection.redirect === true && (\n          <Redirect to={this.props.redirection.link} />\n        )}\n        <Card>\n          <Card.Header></Card.Header>\n          {this.props.status === \"succeeded\" && (\n            <Card.Title style={{ marginTop: \"10px\" }}>\n              {capitalize(this.props.object.attributes.name)} Details\n            </Card.Title>\n          )}\n          <Card.Body>\n            {this.props.status === \"succeeded\" &&\n              this.showDetails(this.props.object)}\n          </Card.Body>\n          <Card.Footer>\n            {this.props.status === \"succeeded\" && (\n              <>\n                <Button\n                  className=\"btn btn-theme float-right\"\n                  variant=\"primary\"\n                  onClick={(slot) => this.switchModal(\"modal_edit\")}\n                >\n                  Edit {capitalize(this.props.name)}\n                </Button>\n                <Button\n                  className=\"btn btn-theme float-right\"\n                  variant=\"primary\"\n                  onClick={(slot) => this.switchModal(\"modal_broker\")}\n                  style={{ marginRight: \"10px\" }}\n                >\n                  Add Broker\n                </Button>\n                {canDelete(this.props.object) && (\n                  <Button\n                    className=\"btn btn-theme float-right\"\n                    variant=\"danger\"\n                    onClick={() =>\n                      this.props.deleteObject(this.props.object.attributes.id)\n                    }\n                    style={{ marginRight: \"10px\" }}\n                  >\n                    Delete {capitalize(this.props.name)}\n                  </Button>\n                )}\n              </>\n            )}\n          </Card.Footer>\n        </Card>\n        {this.props.status === \"succeeded\" && (\n          <>\n            <EditObject\n              show={this.state.modal_edit}\n              switchModal={this.switchModal}\n              formHelpers={this.props.formHelpers}\n              form={this.props.form}\n              object={this.props.object}\n              name={this.props.name}\n              updateObject={this.props.updateObject}\n            />\n            <AddBroker\n              show={this.state.modal_broker}\n              switchModal={this.switchModal}\n              formHelpers={this.props.formHelpersBroker}\n              form={this.props.formBroker}\n              object={this.props.object}\n              name={this.props.name}\n              postSub={this.props.postSub}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nCompanyDetails.propTypes = {};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CompanyDetails from \"./CompanyDetails\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport { companies as formHelpers } from \"../../utils/Schemas\";\nimport { companyForm as form } from \"../../utils/Forms\";\nimport { brokers as formHelpersBroker } from \"../../utils/Schemas\";\nimport { brokerForm as formBroker } from \"../../utils/Forms\";\nimport {\n  fetchCompany,\n  updateCompany,\n  deleteCompany,\n  postBroker,\n} from \"../../actions/Actions\";\n\nclass CompanyContainer extends Component {\n  state = {\n    name: \"company\",\n    id: this.props.match.params.id,\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchCompany(this.state.id));\n  }\n\n  postSubBroker = (values) => {\n    const new_object = {\n      name: values.name,\n      company_id: this.props.selected.attributes.id,\n    };\n    this.props.dispatch(postBroker(new_object));\n  };\n\n  render() {\n    return (\n      <>\n        <CompanyDetails\n          object={this.props.selected}\n          secondary={this.props.secondary}\n          status={this.props.status}\n          name={this.state.name}\n          formHelpers={formHelpers}\n          form={form}\n          formHelpersBroker={formHelpersBroker}\n          formBroker={(values, handleChange, setFieldValue, errors) =>\n            formBroker(\n              values,\n              handleChange,\n              setFieldValue,\n              errors,\n              this.props.selected.attributes\n            )\n          }\n          postSub={(values) => this.postSubBroker(values)}\n          updateObject={(id, values) => {\n            this.props.dispatch(updateCompany({ id: id, values: values }));\n          }}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteCompany(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nCompanyContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, status, error, secondary } = state.companies;\n  const { link, redirect } = state.redirections;\n  return { selected, status, error, link, redirect, secondary };\n}\n\nexport default connect(mapStateToProps)(CompanyContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { users as formHelpers } from \"../../utils/Schemas\";\nimport { userForm as form } from \"../../utils/Forms\";\nimport { fetchUsers, postUser } from \"../../actions/Actions\";\n\nclass UsersContainer extends Component {\n  state = {\n    tableHeaders: [\"Name\", \"Role\", \"Username\", \"Club\"],\n    name: \"user\",\n    plural: \"users\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchUsers());\n  }\n\n  showObjects = (objects) => {\n    return objects.map((object, index) => {\n      return (\n        <tr key={index}>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/\" + this.state.plural + \"/\" + object.attributes.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.name}\n            </Button>{\" \"}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.role}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.username}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.club.name || \"N/A\"}\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  postObject = (values) => {\n    const new_object = {\n      first_name: values.first_name,\n      last_name: values.last_name,\n      role: values.role,\n      username: values.username,\n      password: \"secret\",\n      password_confirmation: \"secret\",\n    };\n    this.props.dispatch(postUser(new_object));\n  };\n\n  render() {\n    return (\n      <>\n        <ListStructure\n          objects={this.props.users}\n          status={this.props.status}\n          showObjects={this.showObjects}\n          tableHeaders={this.state.tableHeaders}\n          name={this.state.name}\n          plural={this.state.plural}\n          formHelpers={formHelpers}\n          form={form}\n          postObject={this.postObject}\n        />\n      </>\n    );\n  }\n}\n\nUsersContainer.propTypes = {\n  users: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  const { users, status, error } = state.users;\n  return { users, status, error };\n}\n\nexport default connect(mapStateToProps)(UsersContainer);\n","import React, { Component } from \"react\";\nimport EditObject from \"../../components/EditObject\";\nimport AddSubCategory from \"../sub_categories/AddSubCategory\";\nimport { Card, Button, Row, Spinner } from \"react-bootstrap\";\nimport { capitalize, canDelete } from \"../../utils/Helpers\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class UserDetails extends Component {\n  state = {\n    modal_edit: false,\n    modal_sub: false,\n  };\n\n  switchModal = (name) => {\n    const modal = name;\n    this.setState((prevState) => ({\n      [modal]: !prevState[modal],\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.redirection.redirect === true && (\n          <Redirect to={this.props.redirection.link} />\n        )}\n        <Card>\n          <Card.Header></Card.Header>\n          {this.props.status === \"succeeded\" && (\n            <Card.Title style={{ marginTop: \"10px\" }}>\n              {capitalize(this.props.object.attributes.name)} Details\n            </Card.Title>\n          )}\n          <Card.Body>{this.props.showDetails(this.props.object)}</Card.Body>\n          <Card.Footer>\n            {this.props.status === \"succeeded\" && (\n              <>\n                <Button\n                  className=\"btn btn-theme float-right\"\n                  variant=\"primary\"\n                  onClick={(slot) => this.switchModal(\"modal_edit\")}\n                >\n                  Edit {capitalize(this.props.name)}\n                </Button>\n                {/* <Button\n                  className=\"btn btn-theme float-right\"\n                  variant=\"primary\"\n                  onClick={(slot) => this.switchModal(\"modal_sub\")}\n                  style={{ marginRight: \"10px\" }}\n                >\n                  Add Sub\n                </Button> */}\n                {canDelete(this.props.object) && (\n                  <Button\n                    className=\"btn btn-theme float-right\"\n                    variant=\"danger\"\n                    onClick={() =>\n                      this.props.deleteObject(this.props.object.attributes.id)\n                    }\n                    style={{ marginRight: \"10px\" }}\n                  >\n                    Delete {capitalize(this.props.name)}\n                  </Button>\n                )}\n              </>\n            )}\n          </Card.Footer>\n        </Card>\n        {this.props.status === \"succeeded\" && (\n          <>\n            <EditObject\n              show={this.state.modal_edit}\n              switchModal={this.switchModal}\n              formHelpers={this.props.formHelpers}\n              form={this.props.form}\n              object={this.props.object}\n              name={this.props.name}\n              updateObject={this.props.updateObject}\n            />\n            {/* <AddSubCategory\n              show={this.state.modal_sub}\n              switchModal={this.switchModal}\n              formHelpers={this.props.formHelpersSub}\n              form={this.props.formSub}\n              object={this.props.object}\n              name={this.props.name}\n              postSub={this.props.postSub}\n            /> */}\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nUserDetails.propTypes = {};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport UserDetails from \"./UserDetails\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\nimport { EyeFill } from \"react-bootstrap-icons\";\nimport { users as formHelpers } from \"../../utils/Schemas\";\nimport { userForm as form } from \"../../utils/Forms\";\nimport {\n  fetchUser,\n  updateUser,\n  deleteUser,\n  fetchCoverages,\n} from \"../../actions/Actions\";\nimport PaginatedTable from \"../../components/PaginatedTable\";\nimport { Button } from \"react-bootstrap\";\n\nclass UserContainer extends Component {\n  state = {\n    name: \"user\",\n    id: this.props.match.params.id,\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchUser(this.state.id));\n    this.props.dispatch(fetchCoverages({ for_user: this.state.id }));\n  }\n\n  showDetails = (object) => {\n    let showObjects = (objects) => {\n      return objects.map((object, index) => {\n        return (\n          <tr key={index}>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/leagues/\" + object.attributes.league.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.league.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/clubs/\" + object.attributes.club.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.club.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.attributes.group.name}\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/categories/\" + object.attributes.category.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.category.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/sub_categories/\" + object.attributes.sub_category.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.sub_category.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/users/\" + object.attributes.user.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.user.first_name}{\" \"}\n                {object.attributes.user.last_name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Moment format=\"MM/DD/YYYY\">\n                {object.attributes.created_at}\n              </Moment>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Moment format=\"MM/DD/YYYY\">\n                {object.attributes.updated_at}\n              </Moment>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.attributes.verified ? \"true\" : \"false\"}\n            </td>\n            <td width=\"100\" align=\"center\">\n              <Button\n                variant=\"link\"\n                href={\"/coverages/\" + object.attributes.id}\n                style={{ color: \"black\" }}\n              >\n                <EyeFill />\n              </Button>\n            </td>\n          </tr>\n        );\n      });\n    };\n\n    return (\n      <>\n        <PaginatedTable\n          objects={this.props.coverages}\n          showObjects={showObjects}\n          tableHeaders={[\n            \"League\",\n            \"Club\",\n            \"Group\",\n            \"Category\",\n            \"Sub\",\n            \"Entered By\",\n            \"Date Created\",\n            \"Last Updated\",\n            \"Verified\",\n            \"View\",\n          ]}\n          status={this.props.coveragesStatus}\n          onPageChange={(e, { activePage }) =>\n            this.props.dispatch(\n              fetchCoverages({ for_user: this.state.id, page: activePage })\n            )\n          }\n          defaultActivePage={this.props.page}\n          totalPages={this.props.pages}\n        />\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <UserDetails\n          object={this.props.selected}\n          secondary={this.props.coverages}\n          status={this.props.status}\n          name={this.state.name}\n          formHelpers={formHelpers}\n          form={form}\n          showDetails={this.showDetails}\n          updateObject={(id, values) => {\n            this.props.dispatch(updateUser({ id: id, values: values }));\n          }}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteUser(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nUserContainer.propTypes = {\n  selected: PropTypes.object,\n  status: PropTypes.string.isRequired,\n  errors: PropTypes.object,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, status, error } = state.users;\n  const { coverages, pages, page } = state.coverages;\n  const coveragesStatus = state.coverages.status;\n  const { link, redirect } = state.redirections;\n  return {\n    selected,\n    status,\n    error,\n    link,\n    redirect,\n    coverages,\n    pages,\n    page,\n    coveragesStatus,\n  };\n}\n\nexport default connect(mapStateToProps)(UserContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListStructure from \"../../components/ListStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport Moment from \"react-moment\";\nimport { EyeFill } from \"react-bootstrap-icons\";\nimport { coverages as formHelpers } from \"../../utils/Schemas\";\nimport { coverageForm as form } from \"../../utils/Forms\";\nimport {\n  fetchCoverages,\n  fetchClubs,\n  fetchCategories,\n  fetchCarriers,\n  fetchBrokers,\n  postCoverageAssociations,\n} from \"../../actions/Actions\";\n\nclass CoveragesContainer extends Component {\n  state = {\n    tableHeaders: [\n      \"League\",\n      \"Club\",\n      \"Group\",\n      \"Category\",\n      \"Sub\",\n      \"Entered By\",\n      \"Date Created\",\n      \"Last Updated\",\n      \"Verified\",\n      \"View\",\n    ],\n    name: \"coverage\",\n    plural: \"coverages\",\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchCoverages());\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchCategories());\n    this.props.dispatch(fetchCarriers());\n    this.props.dispatch(fetchBrokers());\n  }\n\n  showObjects = (objects) => {\n    return objects.map((object, index) => {\n      return (\n        <tr key={index}>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/leagues/\" + object.attributes.league.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.league.name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/clubs/\" + object.attributes.club.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.club.name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.group.name}\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/categories/\" + object.attributes.category.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.category.name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/sub_categories/\" + object.attributes.sub_category.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.sub_category.name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Button\n              variant=\"link\"\n              href={\"/users/\" + object.attributes.user.id}\n              style={{ color: \"black\" }}\n            >\n              {object.attributes.user.first_name}{\" \"}\n              {object.attributes.user.last_name}\n            </Button>\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Moment format=\"MM/DD/YYYY\">{object.attributes.created_at}</Moment>\n          </td>\n          <td width=\"200\" align=\"left\">\n            <Moment format=\"MM/DD/YYYY\">{object.attributes.updated_at}</Moment>\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.attributes.verified ? \"true\" : \"false\"}\n          </td>\n          <td width=\"100\" align=\"center\">\n            <Button\n              variant=\"link\"\n              href={\"/coverages/\" + object.attributes.id}\n              style={{ color: \"black\" }}\n            >\n              <EyeFill />\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  postObject = (values) => {\n    const new_object = {\n      club_group_id: this.props.clubs[values.club_index].attributes.club_groups[\n        values.group_index\n      ].data.attributes.id,\n      sub_category_id: this.props.categories[values.category_index].attributes\n        .sub_categories[values.sub_category_index].data.attributes.id,\n      notes: values.notes,\n      start_date: values.start_date,\n      end_date: values.end_date,\n      has_coverage_line: values.has_coverage_line,\n      verified: values.verified,\n    };\n    let carriers = values.carriers.map(\n      (carrier_index) => this.props.carriers[carrier_index].attributes.id\n    );\n    let brokers = values.brokers.map(\n      (broker_index) => this.props.brokers[broker_index].attributes.id\n    );\n    this.props.dispatch(\n      postCoverageAssociations(new_object, carriers, brokers)\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <ListStructure\n          objects={this.props.coverages}\n          status={this.props.status}\n          showObjects={this.showObjects}\n          tableHeaders={this.state.tableHeaders}\n          name={this.state.name}\n          plural={this.state.plural}\n          formHelpers={formHelpers}\n          form={(values, handleChange, setFieldValue, errors) =>\n            form(\n              values,\n              handleChange,\n              setFieldValue,\n              errors,\n              this.props.clubs,\n              this.props.categories,\n              this.props.carriers,\n              this.props.brokers\n            )\n          }\n          postObject={(values) => this.postObject(values)}\n          onPageChange={(e, { activePage }) =>\n            this.props.dispatch(fetchCoverages({ page: activePage }))\n          }\n          defaultActivePage={this.props.page}\n          totalPages={this.props.pages}\n        />\n      </>\n    );\n  }\n}\n\nCoveragesContainer.propTypes = {\n  coverages: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  const { coverages, page, pages, status, error } = state.coverages;\n  const { clubs } = state.clubs;\n  const { categories } = state.categories;\n  const { carriers } = state.carriers;\n  const { brokers } = state.brokers;\n  return {\n    coverages,\n    clubs,\n    categories,\n    carriers,\n    brokers,\n    page,\n    pages,\n    status,\n    error,\n  };\n}\n\nexport default connect(mapStateToProps)(CoveragesContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Col, Row, Card, Spinner, Button } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport DatePicker from \"react-datepicker\";\nimport { objectOptionsID } from \"../../utils/Forms\";\n\nexport default class CoverageDetails extends React.Component {\n  initialValues = (coverage) => {\n    var values = {};\n    values[\"notes\"] = coverage.notes;\n    values[\"start_date\"] = Date.parse(coverage.start_date) || new Date();\n    values[\"end_date\"] = Date.parse(coverage.end_date) || new Date();\n    values[\"has_coverage_line\"] = coverage.has_coverage_line;\n    values[\"verified\"] = coverage.verified;\n    values[\"carriers\"] = coverage.coverage_carriers.map(\n      (coverage_carrier) => coverage_carrier.data.attributes.carrier_id\n    );\n    values[\"brokers\"] = coverage.coverage_brokers.map(\n      (coverage_brokers) => coverage_brokers.data.attributes.broker_id\n    );\n    return values;\n  };\n\n  render() {\n    return (\n      <>\n        <Card>\n          <Card.Header></Card.Header>\n          <Card.Title style={{ marginTop: \"10px\" }}>\n            Coverage Details\n          </Card.Title>\n          <Card.Body>\n            <Row className=\"row justify-content-center\">\n              {this.props.status === \"loading\" && (\n                <Spinner animation=\"border\" variant=\"primary\" />\n              )}\n            </Row>\n            {this.props.status === \"succeeded\" && (\n              <Formik\n                validationSchema={this.props.formHelpers.schema}\n                onSubmit={this.props.submit}\n                initialValues={this.initialValues(this.props.object.attributes)}\n                enableReinitialize={true}\n              >\n                {({\n                  handleSubmit,\n                  handleChange,\n                  setFieldValue,\n                  values,\n                  dirty,\n                }) => (\n                  <Form noValidate onSubmit={handleSubmit}>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Club:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"club\"\n                          value={this.props.object.attributes.club.name}\n                          disabled\n                        />\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Group:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"group\"\n                          value={this.props.object.attributes.group.name}\n                          disabled\n                        />\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Category:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"category\"\n                          value={this.props.object.attributes.category.name}\n                          disabled\n                        />\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Sub Category:</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"sub_category\"\n                          value={this.props.object.attributes.sub_category.name}\n                          disabled\n                        />\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Carriers:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          multiple\n                          name=\"carriers\"\n                          value={values.carriers}\n                          onChange={(event) =>\n                            setFieldValue(\n                              \"carriers\",\n                              Array.from(\n                                event.target.selectedOptions,\n                                (option) => Number(option.value)\n                              )\n                            )\n                          }\n                        >\n                          {objectOptionsID(this.props.carriers)}\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Brokers:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          multiple\n                          name=\"brokers\"\n                          value={values.brokers}\n                          onChange={(event) =>\n                            setFieldValue(\n                              \"brokers\",\n                              Array.from(\n                                event.target.selectedOptions,\n                                (option) => Number(option.value)\n                              )\n                            )\n                          }\n                        >\n                          {objectOptionsID(this.props.brokers)}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Form.Group>\n                      <Form.Label>Notes:</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"notes\"\n                        value={values.notes}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>{\"Start Date:\"}</Form.Label>\n                        {/* <DatePicker\n                          name=\"start_date\"\n                          selected={values.start_date}\n                          onChange={(val) => setFieldValue(\"start_date\", val)}\n                        /> */}\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>{\"Ending Date:\"}</Form.Label>\n                        {/* <DatePicker\n                          name=\"end_date\"\n                          selected={values.end_date}\n                          onChange={(val) => setFieldValue(\"end_date\", val)}\n                        /> */}\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Check\n                          type=\"checkbox\"\n                          name=\"has_coverage_line\"\n                          label={\"Has Coverage Line\"}\n                          checked={values.has_coverage_line}\n                          value={values.has_coverage_line}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Check\n                          type=\"checkbox\"\n                          name=\"verified\"\n                          label={\"Verified\"}\n                          checked={values.verified}\n                          value={values.verified}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n                    </Row>\n                    {dirty == true ? (\n                      <Button\n                        type=\"submit\"\n                        className=\"btn btn-theme float-right\"\n                        variant=\"primary\"\n                        style={{ marginRight: \"10px\" }}\n                      >\n                        Update Coverage\n                      </Button>\n                    ) : (\n                      \"\"\n                    )}\n                  </Form>\n                )}\n              </Formik>\n            )}\n          </Card.Body>\n          <Card.Footer></Card.Footer>\n        </Card>\n      </>\n    );\n  }\n}\n\nCoverageDetails.propTypes = {};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { coverages as formHelpers } from \"../../utils/Schemas\";\nimport CoverageDetails from \"./CoverageDetails\";\nimport Moment from \"react-moment\";\nimport {\n  fetchCoverage,\n  updateCoverageAssociations,\n  postCoverageBroker,\n  deleteCoverageBroker,\n  postCoverageCarrier,\n  deleteCoverageCarrier,\n  fetchCarriers,\n  fetchBrokers,\n} from \"../../actions/Actions\";\n\nclass CoverageContainer extends Component {\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.dispatch(fetchCoverage(id));\n    this.props.dispatch(fetchCarriers());\n    this.props.dispatch(fetchBrokers());\n  }\n\n  includes = (arr, object, target) => {\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].data.attributes[target] == object) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  handleBrokers = (objects) => {\n    // Get array of current associated brokers\n    let curr = this.props.selected.attributes.coverage_brokers;\n    let needAdded = objects.filter(\n      (object) => !this.includes(curr, object, \"broker_id\")\n    );\n    let needDestroyed = curr\n      .filter((object) => !objects.includes(object.data.attributes.broker_id))\n      .map((object) => object.data.attributes.id);\n    return { needAdded: needAdded, needDestroyed: needDestroyed };\n  };\n\n  handleCarriers = (objects) => {\n    // Get array of current associated carriers\n    let curr = this.props.selected.attributes.coverage_carriers;\n    let needAdded = objects.filter(\n      (object) => !this.includes(curr, object, \"carrier_id\")\n    );\n    let needDestroyed = curr\n      .filter((object) => !objects.includes(object.data.attributes.carrier_id))\n      .map((object) => object.data.attributes.id);\n    return { needAdded: needAdded, needDestroyed: needDestroyed };\n  };\n\n  updateCoverage = (values) => {\n    const coverage = {\n      notes: values.notes,\n      start_date: Date(values.start_date),\n      end_date: Date(values.end_date),\n      has_coverage_line: values.has_coverage_line,\n      verified: values.verified,\n    };\n    let brokers = this.handleBrokers(values.brokers);\n    let carriers = this.handleCarriers(values.carriers);\n    this.props.dispatch(\n      updateCoverageAssociations(\n        {\n          id: this.props.selected.attributes.id,\n          values: coverage,\n        },\n        carriers,\n        brokers\n      )\n    );\n  };\n\n  deleteCoverage = (values) => {\n    console.log(\"Delete\");\n  };\n\n  render() {\n    return (\n      <>\n        <CoverageDetails\n          object={this.props.selected}\n          carriers={this.props.carriers}\n          brokers={this.props.brokers}\n          status={this.props.status}\n          formHelpers={formHelpers}\n          submit={(values) => this.updateCoverage(values)}\n          deleteObject={(values) => this.deleteCoverage(values)}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nCoverageContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, status, error } = state.coverages;\n  const { carriers } = state.carriers;\n  const { brokers } = state.brokers;\n  const { link, redirect } = state.redirections;\n  return { selected, status, error, link, redirect, carriers, brokers };\n}\n\nexport default connect(mapStateToProps)(CoverageContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport DetailStructure from \"../../components/DetailStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport PaginatedTable from \"../../components/PaginatedTable\";\nimport Moment from \"react-moment\";\nimport { EyeFill } from \"react-bootstrap-icons\";\nimport { brokers as formHelpers } from \"../../utils/Schemas\";\nimport { brokerForm as form } from \"../../utils/Forms\";\nimport {\n  fetchBroker,\n  updateBroker,\n  deleteBroker,\n  fetchCoverages,\n} from \"../../actions/Actions\";\n\nclass BrokerContainer extends Component {\n  state = {\n    name: \"broker\",\n    id: this.props.match.params.id,\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchBroker(this.state.id));\n    this.props.dispatch(fetchCoverages({ for_broker: this.state.id }));\n  }\n\n  showDetails = (object) => {\n    let showObjects = (objects) => {\n      return objects.map((object, index) => {\n        return (\n          <tr key={index}>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/leagues/\" + object.attributes.league.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.league.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/clubs/\" + object.attributes.club.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.club.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.attributes.group.name}\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/categories/\" + object.attributes.category.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.category.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/sub_categories/\" + object.attributes.sub_category.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.sub_category.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/users/\" + object.attributes.user.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.user.first_name}{\" \"}\n                {object.attributes.user.last_name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Moment format=\"MM/DD/YYYY\">\n                {object.attributes.created_at}\n              </Moment>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Moment format=\"MM/DD/YYYY\">\n                {object.attributes.updated_at}\n              </Moment>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.attributes.verified ? \"true\" : \"false\"}\n            </td>\n            <td width=\"100\" align=\"center\">\n              <Button\n                variant=\"link\"\n                href={\"/coverages/\" + object.attributes.id}\n                style={{ color: \"black\" }}\n              >\n                <EyeFill />\n              </Button>\n            </td>\n          </tr>\n        );\n      });\n    };\n\n    return (\n      <>\n        <PaginatedTable\n          objects={this.props.coverages}\n          showObjects={showObjects}\n          tableHeaders={[\n            \"League\",\n            \"Club\",\n            \"Group\",\n            \"Category\",\n            \"Sub\",\n            \"Entered By\",\n            \"Date Created\",\n            \"Last Updated\",\n            \"Verified\",\n            \"View\",\n          ]}\n          onPageChange={(e, { activePage }) =>\n            this.props.dispatch(\n              fetchCoverages({ for_broker: this.state.id, page: activePage })\n            )\n          }\n          defaultActivePage={this.props.page}\n          totalPages={this.props.pages}\n          status={this.props.coveragesStatus}\n        />\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <DetailStructure\n          object={this.props.selected}\n          status={this.props.status}\n          name={this.state.name}\n          formHelpers={formHelpers}\n          form={(values, handleChange, setFieldValue, errors) =>\n            form(\n              values,\n              handleChange,\n              setFieldValue,\n              errors,\n              this.props.selected.attributes.company\n            )\n          }\n          showDetails={this.showDetails}\n          updateObject={(id, values) => {\n            this.props.dispatch(updateBroker({ id: id, values: values }));\n          }}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteBroker(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nBrokerContainer.propTypes = {\n  selected: PropTypes.object,\n  status: PropTypes.string.isRequired,\n  errors: PropTypes.object,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, error, status } = state.brokers;\n  const { coverages, pages, page } = state.coverages;\n  const { link, redirect } = state.redirections;\n  const coveragesStatus = state.coverages.status;\n  return {\n    selected,\n    status,\n    error,\n    link,\n    redirect,\n    coverages,\n    pages,\n    page,\n    coveragesStatus,\n  };\n}\n\nexport default connect(mapStateToProps)(BrokerContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport DetailStructure from \"../../components/DetailStructure\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport Moment from \"react-moment\";\nimport { EyeFill } from \"react-bootstrap-icons\";\nimport {\n  fetchSubCategory,\n  deleteSubCategory,\n  fetchCoverages,\n} from \"../../actions/Actions\";\n\nclass SubCategoryContainer extends Component {\n  state = {\n    name: \"sub category\",\n    id: this.props.match.params.id,\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchSubCategory(this.state.id));\n    this.props.dispatch(fetchCoverages({ for_sub_category: this.state.id }));\n  }\n\n  showDetails = (object) => {\n    let showObjects = (objects) => {\n      return objects.map((object, index) => {\n        return (\n          <tr key={index}>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/leagues/\" + object.attributes.league.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.league.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/clubs/\" + object.attributes.club.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.club.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.attributes.group.name}\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/categories/\" + object.attributes.category.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.category.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/sub_categories/\" + object.attributes.sub_category.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.sub_category.name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Button\n                variant=\"link\"\n                href={\"/users/\" + object.attributes.user.id}\n                style={{ color: \"black\" }}\n              >\n                {object.attributes.user.first_name}{\" \"}\n                {object.attributes.user.last_name}\n              </Button>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Moment format=\"MM/DD/YYYY\">\n                {object.attributes.created_at}\n              </Moment>\n            </td>\n            <td width=\"200\" align=\"left\">\n              <Moment format=\"MM/DD/YYYY\">\n                {object.attributes.updated_at}\n              </Moment>\n            </td>\n            <td width=\"200\" align=\"left\">\n              {object.attributes.verified ? \"true\" : \"false\"}\n            </td>\n            <td width=\"100\" align=\"center\">\n              <Button\n                variant=\"link\"\n                href={\"/coverages/\" + object.attributes.id}\n                style={{ color: \"black\" }}\n              >\n                <EyeFill />\n              </Button>\n            </td>\n          </tr>\n        );\n      });\n    };\n\n    return (\n      <GeneralTable\n        objects={this.props.coverages}\n        showObjects={showObjects}\n        tableHeaders={[\n          \"League\",\n          \"Club\",\n          \"Group\",\n          \"Category\",\n          \"Sub\",\n          \"Entered By\",\n          \"Date Created\",\n          \"Last Updated\",\n          \"Verified\",\n          \"View\",\n        ]}\n        status={this.props.coveragesStatus}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <DetailStructure\n          object={this.props.selected}\n          status={this.props.status}\n          name={this.state.name}\n          showDetails={this.showDetails}\n          deleteObject={(id) => {\n            this.props.dispatch(deleteSubCategory(id));\n          }}\n          redirection={{ link: this.props.link, redirect: this.props.redirect }}\n        />\n      </>\n    );\n  }\n}\n\nSubCategoryContainer.propTypes = {\n  selected: PropTypes.object.isRequired,\n  status: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  redirect: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  const { selected, status, error } = state.sub_categories;\n  const { coverages } = state.coverages;\n  const coveragesStatus = state.coverages.status \n  const { link, redirect } = state.redirections;\n  return {\n    selected,\n    status,\n    error,\n    link,\n    redirect,\n    coverages,\n    coveragesStatus,\n  };\n}\n\nexport default connect(mapStateToProps)(SubCategoryContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport GeneralTable from \"../../components/GeneralTable\";\nimport { groupStatus } from \"../../utils/Helpers\";\nimport PropTypes from \"prop-types\";\nimport { Button, Form, Col, Row, Card, Spinner } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport { TrashFill } from \"react-bootstrap-icons\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Moment from \"react-moment\";\nimport {\n  objectOptionsID,\n  objectOptions,\n  objectDataOptions,\n  objectGroupOptions,\n} from \"../../utils/Forms\";\nimport { coverage_wizard as formHelpers } from \"../../utils/Schemas\";\nimport {\n  fetchSports,\n  fetchLeagues,\n  fetchClubs,\n  fetchCategories,\n  fetchCarriers,\n  fetchBrokers,\n  postCoverageAssociations,\n} from \"../../actions/Actions\";\n\nclass CoverageWizardContainer extends Component {\n  state = {\n    coverages: [],\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchSports());\n    this.props.dispatch(fetchClubs());\n    this.props.dispatch(fetchCategories());\n    this.props.dispatch(fetchCarriers());\n    this.props.dispatch(fetchBrokers());\n  }\n\n  clubOptions = (league) => {\n    const league_id = league?.data.attributes.id;\n    let clubs = this.props.clubs.filter(\n      (club) => club.attributes.league_id === league_id\n    );\n    return objectOptions(clubs);\n  };\n\n  handleCreate = (values) => {\n    let coverage = {\n      sport: this.props.sports[values.sport_index],\n      league: this.props.sports[values.sport_index].attributes.leagues[\n        values.league_index\n      ].data,\n      club: this.props.clubs[values.club_index],\n      club_group: this.props.clubs[values.club_index].attributes.club_groups[\n        values.group_index\n      ].data,\n      category: this.props.categories[values.category_index],\n      sub_category: this.props.categories[values.category_index].attributes\n        .sub_categories[values.sub_category_index].data,\n      carriers: values.carriers,\n      brokers: values.brokers,\n      notes: values.notes,\n      start_date: values.start_date,\n      end_date: values.end_date,\n      has_coverage_line: values.has_coverage_line,\n      verified: values.verified,\n    };\n    this.setState({ coverages: this.state.coverages.concat(coverage) });\n  };\n\n  handleSubmit = () => {\n    this.state.coverages.map((coverage) => {\n      const new_object = {\n        club_group_id: coverage.club_group.attributes.id,\n        sub_category_id: coverage.sub_category.attributes.id,\n        notes: coverage.notes,\n        start_date: coverage.start_date,\n        end_date: coverage.end_date,\n        has_coverage_line: coverage.has_coverage_line,\n        verified: coverage.verified,\n      };\n      let carriers = coverage.carriers.map(\n        (carrier_index) => this.props.carriers[carrier_index].attributes.id\n      );\n      let brokers = coverage.brokers.map(\n        (broker_index) => this.props.brokers[broker_index].attributes.id\n      );\n      this.props.dispatch(\n        postCoverageAssociations(new_object, carriers, brokers)\n      );\n    });\n    this.setState({\n      coverages: [],\n    });\n  };\n\n  showObjects = (objects) => {\n    return objects.map((object, index) => {\n      return (\n        <tr key={index}>\n          <td width=\"200\" align=\"left\">\n            {object.league.attributes.name}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.club.attributes.name}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.club_group.attributes.group.name}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.category.attributes.name}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.sub_category.attributes.name}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.carriers.length > 1\n              ? \"Multiple\"\n              : this.props.carriers[object.carriers[0]]?.attributes.name ||\n                \"Unknown\"}\n          </td>\n          <td width=\"200\" align=\"left\">\n            {object.brokers.length > 1\n              ? \"Multiple\"\n              : this.props.brokers[object.brokers[0]]?.attributes.company\n                  .name || \"Unknown\"}{\" \"}\n          </td>\n          {object.start_date === null ? (\n            <td width=\"200\" align=\"left\">\n              {\"N/A\"}{\" \"}\n            </td>\n          ) : (\n            <td width=\"200\" align=\"left\">\n              <Moment format=\"MMMM Do YYYY\">{object.start_date}</Moment>\n            </td>\n          )}\n          {object.end_date === null ? (\n            <td width=\"200\" align=\"left\">\n              {\"N/A\"}{\" \"}\n            </td>\n          ) : (\n            <td width=\"200\" align=\"left\">\n              <Moment format=\"MMMM Do YYYY\">{object.end_date}</Moment>\n            </td>\n          )}\n          <td width=\"200\" align=\"left\">\n            {object.verified ? \"true\" : \"false\"}\n          </td>\n          <td width=\"100\" align=\"center\">\n            <Button\n              variant=\"link\"\n              onClick={() => {\n                this.setState({\n                  coverages: this.state.coverages.filter(\n                    (coverage, i) => i != index\n                  ),\n                });\n              }}\n              style={{ color: \"black\" }}\n            >\n              <TrashFill />\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  render() {\n    const status = groupStatus(this.props.status);\n    return (\n      <>\n        <Card>\n          <Card.Header></Card.Header>\n          <Card.Title style={{ marginTop: \"10px\" }}>Add Coverages</Card.Title>\n          <Card.Body>\n            <Row className=\"row justify-content-center\">\n              {status === \"loading\" && (\n                <Spinner animation=\"border\" variant=\"primary\" />\n              )}\n            </Row>\n            {status === \"succeeded\" && (\n              <Formik\n                validationSchema={formHelpers.schema}\n                onSubmit={(values) => this.handleCreate(values)}\n                initialValues={formHelpers.initialValues}\n              >\n                {({\n                  handleSubmit,\n                  handleChange,\n                  setFieldValue,\n                  values,\n                  dirty,\n                }) => (\n                  <Form noValidate onSubmit={handleSubmit}>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Sport:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"sport_index\"\n                          value={values.sport_index}\n                          onChange={handleChange}\n                        >\n                          {objectOptions(this.props.sports)}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>League:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"league_index\"\n                          value={values.league_index}\n                          onChange={(e) => {\n                            handleChange(e);\n                            setFieldValue(\"club_index\", 0);\n                          }}\n                        >\n                          {objectDataOptions(\n                            this.props.sports[values.sport_index].attributes\n                              .leagues\n                          )}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Club:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"club_index\"\n                          value={values.club_index}\n                          onChange={(e) => {\n                            handleChange(e);\n                            setFieldValue(\"group_index\", 0);\n                          }}\n                        >\n                          {this.clubOptions(\n                            this.props.sports[values.sport_index].attributes\n                              .leagues[values.league_index]\n                          )}\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Group:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"group_index\"\n                          value={values.group_index}\n                          onChange={handleChange}\n                        >\n                          {objectGroupOptions(\n                            this.props.clubs[values.club_index].attributes\n                              .club_groups\n                          )}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Category:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"category_index\"\n                          value={values.category_index}\n                          onChange={(e) => {\n                            handleChange(e);\n                            setFieldValue(\"sub_category_index\", 0);\n                          }}\n                        >\n                          {objectOptions(this.props.categories)}\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Sub Category:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          name=\"sub_category_index\"\n                          value={values.sub_category_index}\n                          onChange={handleChange}\n                        >\n                          {objectDataOptions(\n                            this.props.categories[values.category_index]\n                              .attributes.sub_categories\n                          )}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>Carriers:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          multiple\n                          name=\"carriers\"\n                          value={values.carriers}\n                          onChange={(event) =>\n                            setFieldValue(\n                              \"carriers\",\n                              Array.from(\n                                event.target.selectedOptions,\n                                (option) => Number(option.value)\n                              )\n                            )\n                          }\n                        >\n                          {objectOptions(this.props.carriers)}\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>Brokers:</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          multiple\n                          name=\"brokers\"\n                          value={values.brokers}\n                          onChange={(event) =>\n                            setFieldValue(\n                              \"brokers\",\n                              Array.from(\n                                event.target.selectedOptions,\n                                (option) => Number(option.value)\n                              )\n                            )\n                          }\n                        >\n                          {objectOptions(this.props.brokers)}\n                        </Form.Control>\n                      </Form.Group>\n                    </Row>\n                    <Form.Group>\n                      <Form.Label>Notes:</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"notes\"\n                        value={values.notes}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Label>{\"Start Date:\"}</Form.Label>\n                        {/* <DatePicker\n                        name=\"start_date\"\n                        selected={values.start_date}\n                        onChange={(val) => setFieldValue(\"start_date\", val)}\n                      /> */}\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Label>{\"Ending Date:\"}</Form.Label>\n                        {/* <DatePicker\n                        name=\"end_date\"\n                        selected={values.end_date}\n                        onChange={(val) => setFieldValue(\"end_date\", val)}\n                      /> */}\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col}>\n                        <Form.Check\n                          type=\"checkbox\"\n                          name=\"has_coverage_line\"\n                          label={\"Has Coverage Line\"}\n                          checked={values.has_coverage_line}\n                          value={values.has_coverage_line}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n\n                      <Form.Group as={Col}>\n                        <Form.Check\n                          type=\"checkbox\"\n                          name=\"verified\"\n                          label={\"Verified\"}\n                          checked={values.verified}\n                          value={values.verified}\n                          onChange={handleChange}\n                        />\n                      </Form.Group>\n                    </Row>\n                    <Button\n                      type=\"submit\"\n                      className=\"btn btn-theme float-right\"\n                      variant=\"primary\"\n                      style={{ marginRight: \"10px\" }}\n                    >\n                      Add Coverage\n                    </Button>\n                  </Form>\n                )}\n              </Formik>\n            )}\n          </Card.Body>\n          <Card.Footer></Card.Footer>\n        </Card>\n        <Card>\n          <Card.Header></Card.Header>\n          <Card.Title style={{ marginTop: \"10px\" }}>\n            Prepared Coverages\n          </Card.Title>\n          <Card.Body>\n            <GeneralTable\n              tableHeaders={[\n                \"League\",\n                \"Club\",\n                \"Group\",\n                \"Category\",\n                \"Sub\",\n                \"Carrier\",\n                \"Broker\",\n                \"Start\",\n                \"End\",\n                \"Verified\",\n                \"Remove\",\n              ]}\n              showObjects={this.showObjects}\n              objects={this.state.coverages}\n              status={\"succeeded\"}\n            />\n          </Card.Body>\n          <Card.Footer>\n            {this.state.coverages.length > 0 && (\n              <Button\n                variant=\"primary\"\n                onClick={this.handleSubmit}\n                className=\"btn btn-theme float-right\"\n              >\n                Submit Coverages\n              </Button>\n            )}\n          </Card.Footer>\n        </Card>\n      </>\n    );\n  }\n}\n\nCoverageWizardContainer.propTypes = {};\n\nfunction mapStateToProps(state) {\n  const { sports } = state.sports;\n  const sportsStatus = state.sports.status;\n  const { clubs } = state.clubs;\n  const clubsStatus = state.clubs.status;\n  const { categories } = state.categories;\n  const categoriesStatus = state.categories.status;\n  const { carriers } = state.carriers;\n  const carriersStatus = state.carriers.status;\n  const { brokers } = state.brokers;\n  const brokersStatus = state.brokers.status;\n  return {\n    status: {\n      sportsStatus,\n      clubsStatus,\n      categoriesStatus,\n      carriersStatus,\n      brokersStatus,\n    },\n    sports,\n    clubs,\n    categories,\n    carriers,\n    brokers,\n  };\n}\n\nexport default connect(mapStateToProps)(CoverageWizardContainer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Alert, ListGroup, Row } from \"react-bootstrap\";\nimport { dismissAlert } from \"../actions/Actions\";\n\nclass AlertsContainer extends React.Component {\n  displayErrors = (errors) => {\n    for (var key in errors) {\n      return <Row>{\"-\" + errors[key]}</Row>;\n    }\n  };\n\n  showAlerts = () => {\n    return this.props.alerts.map((alert, index) => {\n      return (\n        <Alert\n          key={index}\n          variant={alert.variant}\n          onClose={() => this.props.dispatch(dismissAlert(index))}\n          dismissible\n          style={{ margin: \"20px\" }}\n        >\n          <Row>{alert.message}</Row>\n          {this.displayErrors(alert.errors)}\n        </Alert>\n      );\n    });\n  };\n\n  render() {\n    return <>{this.showAlerts()}</>;\n  }\n}\n\nAlertsContainer.propTypes = {};\n\nfunction mapStateToProps(state) {\n  const { alerts } = state.alerts;\n  return { alerts };\n}\n\nexport default connect(mapStateToProps)(AlertsContainer);\n","import React from \"react\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\n\nexport default class Navigation extends React.Component {\n  render() {\n    return (\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">Team Scotti</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/coverage_wizard\">Add Coverages</Nav.Link>\n            <Nav.Link href=\"/\">Metrics</Nav.Link>\n            <NavDropdown title=\"Database\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item href=\"/coverages\">Coverages</NavDropdown.Item>\n              <NavDropdown.Item href=\"/sports\">Sports</NavDropdown.Item>\n              <NavDropdown.Item href=\"/leagues\">Leagues</NavDropdown.Item>\n              <NavDropdown.Item href=\"/clubs\">Clubs</NavDropdown.Item>\n              <NavDropdown.Item href=\"/groups\">Groups</NavDropdown.Item>\n              <NavDropdown.Item href=\"/categories\">Categories</NavDropdown.Item>\n              <NavDropdown.Item href=\"/carriers\">Carriers</NavDropdown.Item>\n              <NavDropdown.Item href=\"/companies\">Companies</NavDropdown.Item>\n              <NavDropdown.Item href=\"/users\">Users</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"../ConfigureStore\";\nimport SportsContainer from \"./sports/SportsContainer\";\nimport SportContainer from \"./sports/SportContainer\";\nimport LeaguesContainer from \"./leagues/LeaguesContainer\";\nimport LeagueContainer from \"./leagues/LeagueContainer\";\nimport ClubsContainer from \"./clubs/ClubsContainer\";\nimport ClubContainer from \"./clubs/ClubContainer\";\nimport GroupsContainer from \"./groups/GroupsContainer\";\nimport GroupContainer from \"./groups/GroupContainer\";\nimport CategoriesContainer from \"./categories/CategoriesContainer\";\nimport CategoryContainer from \"./categories/CategoryContainer\";\nimport CarriersContainer from \"./carriers/CarriersContainer\";\nimport CarrierContainer from \"./carriers/CarrierContainer\";\nimport CompaniesContainer from \"./companies/CompaniesContainer\";\nimport CompanyContainer from \"./companies/CompanyContainer\";\nimport UsersContainer from \"./users/UsersContainer\";\nimport UserContainer from \"./users/UserContainer\";\nimport CoveragesContainer from \"./coverages/CoveragesContainer\";\nimport CoverageContainer from \"./coverages/CoverageContainer\";\nimport BrokerContainer from \"./brokers/BrokerContainer\";\nimport SubCategoryContainer from \"./sub_categories/SubCategoryContainer\";\nimport CoverageWizardContainer from \"./coverage_wizard/CoverageWizardContainer\";\nimport AlertsContainer from \"./AlertsContainer\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Navbar, Row, Col, Container } from \"react-bootstrap\";\nimport Navigation from \"../components/Navigation\";\n\nconst store = configureStore();\n\nexport default class Root extends React.Component {\n  render() {\n    return (\n      <>\n        <Provider store={store}>\n          <Navigation />\n          <AlertsContainer />\n          <Router>\n            <Route path=\"/sports\" exact component={SportsContainer} />\n            <Route path=\"/sports/:id\" exact component={SportContainer} />\n            <Route path=\"/leagues\" exact component={LeaguesContainer} />\n            <Route path=\"/leagues/:id\" exact component={LeagueContainer} />\n            <Route path=\"/clubs\" exact component={ClubsContainer} />\n            <Route path=\"/clubs/:id\" exact component={ClubContainer} />\n            <Route path=\"/groups\" exact component={GroupsContainer} />\n            <Route path=\"/groups/:id\" exact component={GroupContainer} />\n            <Route path=\"/categories\" exact component={CategoriesContainer} />\n            <Route path=\"/categories/:id\" exact component={CategoryContainer} />\n            <Route path=\"/carriers\" exact component={CarriersContainer} />\n            <Route path=\"/carriers/:id\" exact component={CarrierContainer} />\n            <Route path=\"/companies\" exact component={CompaniesContainer} />\n            <Route path=\"/companies/:id\" exact component={CompanyContainer} />\n            <Route path=\"/users\" exact component={UsersContainer} />\n            <Route path=\"/users/:id\" exact component={UserContainer} />\n            <Route path=\"/coverages\" exact component={CoveragesContainer} />\n            <Route path=\"/coverages/:id\" exact component={CoverageContainer} />\n            <Route path=\"/brokers/:id\" exact component={BrokerContainer} />\n            <Route path=\"/sub_categories/:id\" exact component={SubCategoryContainer} />\n            <Route path=\"/coverage_wizard\" exact component={CoverageWizardContainer} />\n          </Router>\n        </Provider>\n      </>\n    );\n  }\n}\n","// import \"babel-polyfill\";\n\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport Root from \"./containers/Root\";\nimport './index.css';\n\nrender(<Root />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}